#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_HolsterWeapon

#include "Basic.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function AnimNotifyState_HolsterWeapon.AnimNotifyState_HolsterWeapon_C.Received_NotifyBegin
// 0x001C (0x001C - 0x0000)
struct AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                      Animation;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TotalDuration;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin) == 0x000004, "Wrong alignment on AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin");
static_assert(sizeof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin) == 0x00001C, "Wrong size on AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, Animation) == 0x000004, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, TotalDuration) == 0x000008, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, ReturnValue) == 0x00000C, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, K2Node_DynamicCast_AsFort_Pawn) == 0x000014, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AnimNotifyState_HolsterWeapon.AnimNotifyState_HolsterWeapon_C.Received_NotifyEnd
// 0x0018 (0x0018 - 0x0000)
struct AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                      Animation;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd) == 0x000004, "Wrong alignment on AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd");
static_assert(sizeof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd) == 0x000018, "Wrong size on AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd, MeshComp) == 0x000000, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd::MeshComp' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd, Animation) == 0x000004, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd::Animation' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd, ReturnValue) == 0x000008, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd, CallFunc_GetOwner_ReturnValue) == 0x00000C, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd, K2Node_DynamicCast_AsFort_Pawn) == 0x000010, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd, K2Node_DynamicCast_bSuccess) == 0x000014, "Member 'AnimNotifyState_HolsterWeapon_C_Received_NotifyEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

#pragma pack(pop)
