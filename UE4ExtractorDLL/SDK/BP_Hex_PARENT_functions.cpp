#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hex_PARENT

#include "Basic.hpp"

#include "BP_Hex_PARENT_classes.hpp"
#include "BP_Hex_PARENT_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function BP_Hex_PARENT.BP_Hex_PARENT_C.ExecuteUbergraph_BP_Hex_PARENT
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::ExecuteUbergraph_BP_Hex_PARENT(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "ExecuteUbergraph_BP_Hex_PARENT");

	Params::BP_Hex_PARENT_C_ExecuteUbergraph_BP_Hex_PARENT Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnInitializeTile
// (Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnInitializeTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnInitializeTile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.HandleTeamPowerChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamPower                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   PersonalPower                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::HandleTeamPowerChanged(int32 TeamPower, int32 PersonalPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "HandleTeamPowerChanged");

	Params::BP_Hex_PARENT_C_HandleTeamPowerChanged Parms{};

	Parms.TeamPower = TeamPower;
	Parms.PersonalPower = PersonalPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.DeactivateTheater
// (BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::DeactivateTheater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "DeactivateTheater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.FireLightningA
// (BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::FireLightningA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "FireLightningA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.InitializeTheater
// (BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::InitializeTheater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "InitializeTheater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.CheckFocus
// (BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::CheckFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "CheckFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.ForceDefocus
// (BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::ForceDefocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "ForceDefocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.PlayPing
// (BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::PlayPing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "PlayPing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnMissionDataUpdated
// (Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnMissionDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnMissionDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnParticleDieBolt_01
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EmitterTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ParticleTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::OnParticleDieBolt_01(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnParticleDieBolt_01");

	Params::BP_Hex_PARENT_C_OnParticleDieBolt_01 Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.ParticleTime = ParticleTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnParticleSpawnLight_01
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EmitterTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::OnParticleSpawnLight_01(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnParticleSpawnLight_01");

	Params::BP_Hex_PARENT_C_OnParticleSpawnLight_01 Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnParticleDieBolt2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EmitterTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ParticleTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::OnParticleDieBolt2(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnParticleDieBolt2");

	Params::BP_Hex_PARENT_C_OnParticleDieBolt2 Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.ParticleTime = ParticleTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnParticleDieBolt
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EmitterTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ParticleTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::OnParticleDieBolt(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnParticleDieBolt");

	Params::BP_Hex_PARENT_C_OnParticleDieBolt Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.ParticleTime = ParticleTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnParticleSpawnLight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EmitterTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::OnParticleSpawnLight(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnParticleSpawnLight");

	Params::BP_Hex_PARENT_C_OnParticleSpawnLight Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnDefocus
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnDefocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnDefocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnFocus
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnHostDeselect
// (Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnHostDeselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnHostDeselect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnHostSelect
// (Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnHostSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnHostSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnClientDeselect
// (Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnClientDeselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnClientDeselect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.OnClientSelect
// (Event, Public, BlueprintEvent)

void ABP_Hex_PARENT_C::OnClientSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "OnClientSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_12__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_12__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_12__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_12__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_12__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_12__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_11__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_11__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_11__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_11__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_11__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_11__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_10__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_10__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_10__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_10__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_10__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_10__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_9__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_9__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_9__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_9__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_9__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_9__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_8__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_8__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_8__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_8__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_8__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_8__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_7__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_7__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_7__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_7__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_7__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_7__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_6__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_6__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_6__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_6__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_6__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_6__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_5__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_5__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_5__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_5__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_5__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_5__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_4__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_4__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_4__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_4__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_4__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_4__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_3__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_3__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_3__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_3__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_3__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_3__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_Hex_PARENT_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Hex_PARENT_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.SetDirectionalTextures
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         SourceMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTextRenderComponent*             DebugTextDirection                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             TileExistsParamName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D**                      TileExistsTexture                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::SetDirectionalTextures(class UMaterialInstanceDynamic* SourceMaterial, class UTextRenderComponent* DebugTextDirection, class FName TileExistsParamName, class UTexture2D** TileExistsTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "SetDirectionalTextures");

	Params::BP_Hex_PARENT_C_SetDirectionalTextures Parms{};

	Parms.SourceMaterial = SourceMaterial;
	Parms.DebugTextDirection = DebugTextDirection;
	Parms.TileExistsParamName = TileExistsParamName;

	UObject::ProcessEvent(Func, &Parms);

	if (TileExistsTexture != nullptr)
		*TileExistsTexture = Parms.TileExistsTexture;
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.GroundSliceSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         SourceMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D*                       TileTypeA                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D*                       TileTypeB                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TileIsSameRegionA                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TileIsSameRegionB                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TileIsHiddenA                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TileIsHiddenB                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TileExistsA                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TileExistsB                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::GroundSliceSettings(class UMaterialInstanceDynamic* SourceMaterial, class UTexture2D* TileTypeA, class UTexture2D* TileTypeB, float TileIsSameRegionA, float TileIsSameRegionB, float TileIsHiddenA, float TileIsHiddenB, float TileExistsA, float TileExistsB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "GroundSliceSettings");

	Params::BP_Hex_PARENT_C_GroundSliceSettings Parms{};

	Parms.SourceMaterial = SourceMaterial;
	Parms.TileTypeA = TileTypeA;
	Parms.TileTypeB = TileTypeB;
	Parms.TileIsSameRegionA = TileIsSameRegionA;
	Parms.TileIsSameRegionB = TileIsSameRegionB;
	Parms.TileIsHiddenA = TileIsHiddenA;
	Parms.TileIsHiddenB = TileIsHiddenB;
	Parms.TileExistsA = TileExistsA;
	Parms.TileExistsB = TileExistsB;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hex_PARENT.BP_Hex_PARENT_C.GetBaseTextureForType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D**                      BaseTexture                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Hex_PARENT_C::GetBaseTextureForType(float TypeId, class UTexture2D** BaseTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hex_PARENT_C", "GetBaseTextureForType");

	Params::BP_Hex_PARENT_C_GetBaseTextureForType Parms{};

	Parms.TypeId = TypeId;

	UObject::ProcessEvent(Func, &Parms);

	if (BaseTexture != nullptr)
		*BaseTexture = Parms.BaseTexture;
}

}

#pragma pack(pop)
