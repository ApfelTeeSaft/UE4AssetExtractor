#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AirStrike_Placement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_AirStrike_Placement.B_AirStrike_Placement_C
// 0x000C (0x0950 - 0x0944)
class AB_AirStrike_Placement_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0944(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         BombHeightOffset;                                  // 0x0948(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UGA_AirStrike_C*                        AirStrikeAbility;                                  // 0x094C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_AirStrike_Placement(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_AirStrike_Placement_C">();
	}
	static class AB_AirStrike_Placement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_AirStrike_Placement_C>();
	}
};
static_assert(alignof(AB_AirStrike_Placement_C) == 0x000004, "Wrong alignment on AB_AirStrike_Placement_C");
static_assert(sizeof(AB_AirStrike_Placement_C) == 0x000950, "Wrong size on AB_AirStrike_Placement_C");
static_assert(offsetof(AB_AirStrike_Placement_C, UberGraphFrame) == 0x000944, "Member 'AB_AirStrike_Placement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_AirStrike_Placement_C, BombHeightOffset) == 0x000948, "Member 'AB_AirStrike_Placement_C::BombHeightOffset' has a wrong offset!");
static_assert(offsetof(AB_AirStrike_Placement_C, AirStrikeAbility) == 0x00094C, "Member 'AB_AirStrike_Placement_C::AirStrikeAbility' has a wrong offset!");

}

#pragma pack(pop)
