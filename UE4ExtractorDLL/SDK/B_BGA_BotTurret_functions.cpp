#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BGA_BotTurret

#include "Basic.hpp"

#include "B_BGA_BotTurret_classes.hpp"
#include "B_BGA_BotTurret_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ExecuteUbergraph_B_BGA_BotTurret
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::ExecuteUbergraph_B_BGA_BotTurret(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "ExecuteUbergraph_B_BGA_BotTurret");

	Params::B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.AttemptFire
// (BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::AttemptFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "AttemptFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTagContainer&     DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm)
// const struct FVector&                   Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm)

void AB_BGA_BotTurret_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnDeathServer");

	Params::B_BGA_BotTurret_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature");

	Params::B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_BGA_BotTurret_C::BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature");

	Params::B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "ReceiveTick");

	Params::B_BGA_BotTurret_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTagContainer&     DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm)
// const struct FVector&                   Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm)

void AB_BGA_BotTurret_C::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnDamageServer");

	Params::B_BGA_BotTurret_C_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Bot_Explode
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::Bot_Explode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "Bot_Explode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.PassBotInfo
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WarmupTime_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   BotDuration                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FireRate_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::PassBotInfo(float WarmupTime_0, float BotDuration, float FireRate_0, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "PassBotInfo");

	Params::B_BGA_BotTurret_C_PassBotInfo Parms{};

	Parms.WarmupTime_0 = WarmupTime_0;
	Parms.BotDuration = BotDuration;
	Parms.FireRate_0 = FireRate_0;
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void AB_BGA_BotTurret_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void AB_BGA_BotTurret_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void AB_BGA_BotTurret_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void AB_BGA_BotTurret_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void AB_BGA_BotTurret_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnRep_Target_Location
// (BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::OnRep_Target_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnRep_Target_Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnRep_ShootingGun
// (BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::OnRep_ShootingGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnRep_ShootingGun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnRep_NewVar0
// (BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::OnRep_NewVar0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnRep_NewVar0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Perform_Bot_Rotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           LookAtActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::Perform_Bot_Rotation(class AActor* LookAtActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "Perform_Bot_Rotation");

	Params::B_BGA_BotTurret_C_Perform_Bot_Rotation Parms{};

	Parms.LookAtActor = LookAtActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnNewPotentialTargetTouched
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        PotentialTargetPawn                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::OnNewPotentialTargetTouched(class AFortPawn* PotentialTargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnNewPotentialTargetTouched");

	Params::B_BGA_BotTurret_C_OnNewPotentialTargetTouched Parms{};

	Parms.PotentialTargetPawn = PotentialTargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.IsValidTarget
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        PotentialTarget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeSimpleRangeCheck                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeFireLimitCheck                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeObstructionCheck                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   ValidTarget                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::IsValidTarget(class AFortPawn* PotentialTarget, bool IncludeSimpleRangeCheck, bool IncludeFireLimitCheck, bool IncludeObstructionCheck, bool* ValidTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "IsValidTarget");

	Params::B_BGA_BotTurret_C_IsValidTarget Parms{};

	Parms.PotentialTarget = PotentialTarget;
	Parms.IncludeSimpleRangeCheck = IncludeSimpleRangeCheck;
	Parms.IncludeFireLimitCheck = IncludeFireLimitCheck;
	Parms.IncludeObstructionCheck = IncludeObstructionCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidTarget != nullptr)
		*ValidTarget = Parms.ValidTarget;
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetTrackingTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::SetTrackingTarget(class AFortPawn* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "SetTrackingTarget");

	Params::B_BGA_BotTurret_C_SetTrackingTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetTargetAcquisitionTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::SetTargetAcquisitionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "SetTargetAcquisitionTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ClearTargetAcquisitionTimer
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::ClearTargetAcquisitionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "ClearTargetAcquisitionTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ClearFiringTimer
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::ClearFiringTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "ClearFiringTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnPotentialTargetUntouched
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        UntouchedPotentialTarget                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BGA_BotTurret_C::OnPotentialTargetUntouched(class AFortPawn* UntouchedPotentialTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnPotentialTargetUntouched");

	Params::B_BGA_BotTurret_C_OnPotentialTargetUntouched Parms{};

	Parms.UntouchedPotentialTarget = UntouchedPotentialTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetFiringTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::SetFiringTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "SetFiringTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.AttemptAcquireTarget
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::AttemptAcquireTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "AttemptAcquireTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.UpdateScannerRay
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::UpdateScannerRay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "UpdateScannerRay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetTeamColorsVFX
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::SetTeamColorsVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "SetTeamColorsVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnRep_Left_Right_Gun
// (BlueprintCallable, BlueprintEvent)

void AB_BGA_BotTurret_C::OnRep_Left_Right_Gun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BGA_BotTurret_C", "OnRep_Left_Right_Gun");

	UObject::ProcessEvent(Func, nullptr);
}

}

#pragma pack(pop)
