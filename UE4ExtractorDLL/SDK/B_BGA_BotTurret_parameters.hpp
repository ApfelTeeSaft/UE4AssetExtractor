#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BGA_BotTurret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ExecuteUbergraph_B_BGA_BotTurret
// 0x04C8 (0x04C8 - 0x0000)
struct B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x0010(0x0080)(ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x00A8(0x0080)(ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0128(0x0080)(ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_WarmUpTime;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_BotDuration;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_FireRate;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Radius;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage2;                              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags2;                          // 0x01C4(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum2;                            // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo2;                             // 0x01E8(0x0080)(ConstParm, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy2;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser2;                        // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext2;                       // 0x0270(0x000C)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0294(0x0080)(ConstParm, ContainsInstancedReference)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn2;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0334(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0358(0x0080)(ConstParm, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x03E0(0x000C)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EE[0x2];                                      // 0x03EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue2;           // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue2;         // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpecFromAbilityComponent_ReturnValue; // 0x0460(0x0064)()
	class AFortProjectileBase*                    CallFunc_SpawnProjectile_ReturnValue;              // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret");
static_assert(sizeof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret) == 0x0004C8, "Wrong size on B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, EntryPoint) == 0x000000, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_BreakVector_X) == 0x000004, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_BreakVector_Y) == 0x000008, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_BreakVector_Z) == 0x00000C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x000010, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_MakeRotator_ReturnValue) == 0x00009C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0000A8, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000128, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, Temp_bool_IsClosed_Variable) == 0x0001A8, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, Temp_bool_Has_Been_Initd_Variable) == 0x0001A9, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_CustomEvent_WarmUpTime) == 0x0001AC, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_CustomEvent_WarmUpTime' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_CustomEvent_BotDuration) == 0x0001B0, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_CustomEvent_BotDuration' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_CustomEvent_FireRate) == 0x0001B4, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_CustomEvent_FireRate' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_CustomEvent_Radius) == 0x0001B8, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, Temp_bool_Variable) == 0x0001BC, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_Not_PreBool_ReturnValue) == 0x0001BD, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_Damage2) == 0x0001C0, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_Damage2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_DamageTags2) == 0x0001C4, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_DamageTags2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_Momentum2) == 0x0001DC, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_Momentum2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_HitInfo2) == 0x0001E8, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_HitInfo2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_InstigatedBy2) == 0x000268, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_InstigatedBy2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_DamageCauser2) == 0x00026C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_DamageCauser2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_EffectContext2) == 0x000270, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_EffectContext2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_IsDedicatedServer_ReturnValue) == 0x00027C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_DeltaSeconds) == 0x000280, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_OtherActor2) == 0x000284, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_OtherComp2) == 0x000288, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x00028C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_bFromSweep) == 0x000290, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_SweepResult) == 0x000294, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_DynamicCast_AsFort_Pawn) == 0x000314, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_DynamicCast_bSuccess) == 0x000318, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_OtherActor) == 0x00031C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_OtherComp) == 0x000320, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000324, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_DynamicCast_AsFort_Pawn2) == 0x000328, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_DynamicCast_AsFort_Pawn2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_DynamicCast_bSuccess2) == 0x00032C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_Damage) == 0x000330, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_DamageTags) == 0x000334, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_Momentum) == 0x00034C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_HitInfo) == 0x000358, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_InstigatedBy) == 0x0003D8, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_DamageCauser) == 0x0003DC, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, K2Node_Event_EffectContext) == 0x0003E0, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_IsValid_ReturnValue) == 0x0003EC, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_HasAuthority_ReturnValue) == 0x0003ED, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_GetSocketRotation_ReturnValue) == 0x0003F0, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_GetSocketLocation_ReturnValue) == 0x0003FC, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_GetSocketRotation_ReturnValue2) == 0x000408, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_GetSocketRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_GetSocketLocation_ReturnValue2) == 0x000414, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000420, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00042C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000438, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_GetActorRotation_ReturnValue2) == 0x00043C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_GetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000448, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_HasAuthority_ReturnValue2) == 0x000454, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000458, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x00045C, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_MakeGameplayEffectContainerSpecFromAbilityComponent_ReturnValue) == 0x000460, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_MakeGameplayEffectContainerSpecFromAbilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret, CallFunc_SpawnProjectile_ReturnValue) == 0x0004C4, "Member 'B_BGA_BotTurret_C_ExecuteUbergraph_B_BGA_BotTurret::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnDeathServer
// 0x00BC (0x00BC - 0x0000)
struct B_BGA_BotTurret_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(B_BGA_BotTurret_C_OnDeathServer) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_OnDeathServer");
static_assert(sizeof(B_BGA_BotTurret_C_OnDeathServer) == 0x0000BC, "Wrong size on B_BGA_BotTurret_C_OnDeathServer");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, Damage) == 0x000000, "Member 'B_BGA_BotTurret_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, DamageTags) == 0x000004, "Member 'B_BGA_BotTurret_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, Momentum) == 0x00001C, "Member 'B_BGA_BotTurret_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, HitInfo) == 0x000028, "Member 'B_BGA_BotTurret_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, InstigatedBy) == 0x0000A8, "Member 'B_BGA_BotTurret_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, DamageCauser) == 0x0000AC, "Member 'B_BGA_BotTurret_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDeathServer, EffectContext) == 0x0000B0, "Member 'B_BGA_BotTurret_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         OtherBodyIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature) == 0x00000C, "Wrong size on B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000004, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000008, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_439_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature
// 0x0090 (0x0090 - 0x0000)
struct B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         OtherBodyIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromSweep;                                        // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0010(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature) == 0x000090, "Wrong size on B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000004, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000008, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00000C, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000010, "Member 'B_BGA_BotTurret_C_BndEvt__Sphere_ViewRadius_Collision_K2Node_ComponentBoundEvent_276_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_BGA_BotTurret_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_ReceiveTick) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_ReceiveTick");
static_assert(sizeof(B_BGA_BotTurret_C_ReceiveTick) == 0x000004, "Wrong size on B_BGA_BotTurret_C_ReceiveTick");
static_assert(offsetof(B_BGA_BotTurret_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_BGA_BotTurret_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnDamageServer
// 0x00BC (0x00BC - 0x0000)
struct B_BGA_BotTurret_C_OnDamageServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(B_BGA_BotTurret_C_OnDamageServer) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_OnDamageServer");
static_assert(sizeof(B_BGA_BotTurret_C_OnDamageServer) == 0x0000BC, "Wrong size on B_BGA_BotTurret_C_OnDamageServer");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, Damage) == 0x000000, "Member 'B_BGA_BotTurret_C_OnDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, DamageTags) == 0x000004, "Member 'B_BGA_BotTurret_C_OnDamageServer::DamageTags' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, Momentum) == 0x00001C, "Member 'B_BGA_BotTurret_C_OnDamageServer::Momentum' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, HitInfo) == 0x000028, "Member 'B_BGA_BotTurret_C_OnDamageServer::HitInfo' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, InstigatedBy) == 0x0000A8, "Member 'B_BGA_BotTurret_C_OnDamageServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, DamageCauser) == 0x0000AC, "Member 'B_BGA_BotTurret_C_OnDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnDamageServer, EffectContext) == 0x0000B0, "Member 'B_BGA_BotTurret_C_OnDamageServer::EffectContext' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.PassBotInfo
// 0x0010 (0x0010 - 0x0000)
struct B_BGA_BotTurret_C_PassBotInfo final
{
public:
	float                                         WarmupTime_0;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BotDuration;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         FireRate_0;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Radius;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_PassBotInfo) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_PassBotInfo");
static_assert(sizeof(B_BGA_BotTurret_C_PassBotInfo) == 0x000010, "Wrong size on B_BGA_BotTurret_C_PassBotInfo");
static_assert(offsetof(B_BGA_BotTurret_C_PassBotInfo, WarmupTime_0) == 0x000000, "Member 'B_BGA_BotTurret_C_PassBotInfo::WarmupTime_0' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_PassBotInfo, BotDuration) == 0x000004, "Member 'B_BGA_BotTurret_C_PassBotInfo::BotDuration' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_PassBotInfo, FireRate_0) == 0x000008, "Member 'B_BGA_BotTurret_C_PassBotInfo::FireRate_0' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_PassBotInfo, Radius) == 0x00000C, "Member 'B_BGA_BotTurret_C_PassBotInfo::Radius' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct B_BGA_BotTurret_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_UserConstructionScript) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_UserConstructionScript");
static_assert(sizeof(B_BGA_BotTurret_C_UserConstructionScript) == 0x000004, "Wrong size on B_BGA_BotTurret_C_UserConstructionScript");
static_assert(offsetof(B_BGA_BotTurret_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'B_BGA_BotTurret_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnRep_ShootingGun
// 0x0001 (0x0001 - 0x0000)
struct B_BGA_BotTurret_C_OnRep_ShootingGun final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_OnRep_ShootingGun) == 0x000001, "Wrong alignment on B_BGA_BotTurret_C_OnRep_ShootingGun");
static_assert(sizeof(B_BGA_BotTurret_C_OnRep_ShootingGun) == 0x000001, "Wrong size on B_BGA_BotTurret_C_OnRep_ShootingGun");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_ShootingGun, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'B_BGA_BotTurret_C_OnRep_ShootingGun::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.Perform_Bot_Rotation
// 0x0060 (0x0060 - 0x0000)
struct B_BGA_BotTurret_C_Perform_Bot_Rotation final
{
public:
	class AActor*                                 LookAtActor;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActorRotation_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_Perform_Bot_Rotation) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_Perform_Bot_Rotation");
static_assert(sizeof(B_BGA_BotTurret_C_Perform_Bot_Rotation) == 0x000060, "Wrong size on B_BGA_BotTurret_C_Perform_Bot_Rotation");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, LookAtActor) == 0x000000, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::LookAtActor' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000014, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000020, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00002C, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_RInterpTo_ReturnValue) == 0x000038, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_Perform_Bot_Rotation, CallFunc_SetActorRotation_ReturnValue) == 0x00005C, "Member 'B_BGA_BotTurret_C_Perform_Bot_Rotation::CallFunc_SetActorRotation_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnNewPotentialTargetTouched
// 0x0010 (0x0010 - 0x0000)
struct B_BGA_BotTurret_C_OnNewPotentialTargetTouched final
{
public:
	class AFortPawn*                              PotentialTargetPawn;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidTarget_ValidTarget;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_OnNewPotentialTargetTouched");
static_assert(sizeof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched) == 0x000010, "Wrong size on B_BGA_BotTurret_C_OnNewPotentialTargetTouched");
static_assert(offsetof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched, PotentialTargetPawn) == 0x000000, "Member 'B_BGA_BotTurret_C_OnNewPotentialTargetTouched::PotentialTargetPawn' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_C_OnNewPotentialTargetTouched::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched, CallFunc_IsValidTarget_ValidTarget) == 0x000005, "Member 'B_BGA_BotTurret_C_OnNewPotentialTargetTouched::CallFunc_IsValidTarget_ValidTarget' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'B_BGA_BotTurret_C_OnNewPotentialTargetTouched::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnNewPotentialTargetTouched, CallFunc_IsValid_ReturnValue2) == 0x00000C, "Member 'B_BGA_BotTurret_C_OnNewPotentialTargetTouched::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.IsValidTarget
// 0x0130 (0x0130 - 0x0000)
struct B_BGA_BotTurret_C_IsValidTarget final
{
public:
	class AFortPawn*                              PotentialTarget;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeSimpleRangeCheck;                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeFireLimitCheck;                             // 0x0005(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeObstructionCheck;                           // 0x0006(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidTarget;                                       // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTargetingSourceTransform_ReturnValue;  // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x009C(0x000C)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_NEW_OutHit;               // 0x00A8(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_NEW_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_IsValidTarget) == 0x000010, "Wrong alignment on B_BGA_BotTurret_C_IsValidTarget");
static_assert(sizeof(B_BGA_BotTurret_C_IsValidTarget) == 0x000130, "Wrong size on B_BGA_BotTurret_C_IsValidTarget");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, PotentialTarget) == 0x000000, "Member 'B_BGA_BotTurret_C_IsValidTarget::PotentialTarget' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, IncludeSimpleRangeCheck) == 0x000004, "Member 'B_BGA_BotTurret_C_IsValidTarget::IncludeSimpleRangeCheck' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, IncludeFireLimitCheck) == 0x000005, "Member 'B_BGA_BotTurret_C_IsValidTarget::IncludeFireLimitCheck' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, IncludeObstructionCheck) == 0x000006, "Member 'B_BGA_BotTurret_C_IsValidTarget::IncludeObstructionCheck' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, ValidTarget) == 0x000007, "Member 'B_BGA_BotTurret_C_IsValidTarget::ValidTarget' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_GetTargetingSourceTransform_ReturnValue) == 0x000010, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_GetTargetingSourceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_BreakTransform_Location) == 0x000040, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_IsDead_ReturnValue) == 0x000074, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000078, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000084, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_VSizeSquared_ReturnValue) == 0x000094, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_GetTeamAffiliation_ReturnValue) == 0x000099, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, K2Node_SwitchEnum_CmpSuccess) == 0x00009A, "Member 'B_BGA_BotTurret_C_IsValidTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, Temp_bool_Variable) == 0x00009B, "Member 'B_BGA_BotTurret_C_IsValidTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, Temp_object_Variable) == 0x00009C, "Member 'B_BGA_BotTurret_C_IsValidTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_LineTraceSingle_NEW_OutHit) == 0x0000A8, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_LineTraceSingle_NEW_OutHit' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_IsValidTarget, CallFunc_LineTraceSingle_NEW_ReturnValue) == 0x000128, "Member 'B_BGA_BotTurret_C_IsValidTarget::CallFunc_LineTraceSingle_NEW_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetTrackingTarget
// 0x0008 (0x0008 - 0x0000)
struct B_BGA_BotTurret_C_SetTrackingTarget final
{
public:
	class AFortPawn*                              Target;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_SetTrackingTarget) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_SetTrackingTarget");
static_assert(sizeof(B_BGA_BotTurret_C_SetTrackingTarget) == 0x000008, "Wrong size on B_BGA_BotTurret_C_SetTrackingTarget");
static_assert(offsetof(B_BGA_BotTurret_C_SetTrackingTarget, Target) == 0x000000, "Member 'B_BGA_BotTurret_C_SetTrackingTarget::Target' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTrackingTarget, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_C_SetTrackingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTrackingTarget, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'B_BGA_BotTurret_C_SetTrackingTarget::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTrackingTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000006, "Member 'B_BGA_BotTurret_C_SetTrackingTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTrackingTarget, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'B_BGA_BotTurret_C_SetTrackingTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetTargetAcquisitionTimer
// 0x0004 (0x0004 - 0x0000)
struct B_BGA_BotTurret_C_SetTargetAcquisitionTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0004)()
};
static_assert(alignof(B_BGA_BotTurret_C_SetTargetAcquisitionTimer) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_SetTargetAcquisitionTimer");
static_assert(sizeof(B_BGA_BotTurret_C_SetTargetAcquisitionTimer) == 0x000004, "Wrong size on B_BGA_BotTurret_C_SetTargetAcquisitionTimer");
static_assert(offsetof(B_BGA_BotTurret_C_SetTargetAcquisitionTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'B_BGA_BotTurret_C_SetTargetAcquisitionTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnPotentialTargetUntouched
// 0x0008 (0x0008 - 0x0000)
struct B_BGA_BotTurret_C_OnPotentialTargetUntouched final
{
public:
	class AFortPawn*                              UntouchedPotentialTarget;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_OnPotentialTargetUntouched) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_OnPotentialTargetUntouched");
static_assert(sizeof(B_BGA_BotTurret_C_OnPotentialTargetUntouched) == 0x000008, "Wrong size on B_BGA_BotTurret_C_OnPotentialTargetUntouched");
static_assert(offsetof(B_BGA_BotTurret_C_OnPotentialTargetUntouched, UntouchedPotentialTarget) == 0x000000, "Member 'B_BGA_BotTurret_C_OnPotentialTargetUntouched::UntouchedPotentialTarget' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnPotentialTargetUntouched, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_C_OnPotentialTargetUntouched::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnPotentialTargetUntouched, CallFunc_Array_RemoveItem_ReturnValue) == 0x000005, "Member 'B_BGA_BotTurret_C_OnPotentialTargetUntouched::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetFiringTimer
// 0x0004 (0x0004 - 0x0000)
struct B_BGA_BotTurret_C_SetFiringTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0004)()
};
static_assert(alignof(B_BGA_BotTurret_C_SetFiringTimer) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_SetFiringTimer");
static_assert(sizeof(B_BGA_BotTurret_C_SetFiringTimer) == 0x000004, "Wrong size on B_BGA_BotTurret_C_SetFiringTimer");
static_assert(offsetof(B_BGA_BotTurret_C_SetFiringTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'B_BGA_BotTurret_C_SetFiringTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.AttemptAcquireTarget
// 0x0038 (0x0038 - 0x0000)
struct B_BGA_BotTurret_C_AttemptAcquireTarget final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidTarget_ValidTarget;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        Temp_object_Variable;                              // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_AttemptAcquireTarget) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_AttemptAcquireTarget");
static_assert(sizeof(B_BGA_BotTurret_C_AttemptAcquireTarget) == 0x000038, "Wrong size on B_BGA_BotTurret_C_AttemptAcquireTarget");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Array_Length_ReturnValue2) == 0x000020, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_IsValidTarget_ValidTarget) == 0x00002D, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_IsValidTarget_ValidTarget' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, Temp_object_Variable) == 0x000030, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_AttemptAcquireTarget, CallFunc_Array_RemoveItem_ReturnValue) == 0x000034, "Member 'B_BGA_BotTurret_C_AttemptAcquireTarget::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.UpdateScannerRay
// 0x0001 (0x0001 - 0x0000)
struct B_BGA_BotTurret_C_UpdateScannerRay final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_UpdateScannerRay) == 0x000001, "Wrong alignment on B_BGA_BotTurret_C_UpdateScannerRay");
static_assert(sizeof(B_BGA_BotTurret_C_UpdateScannerRay) == 0x000001, "Wrong size on B_BGA_BotTurret_C_UpdateScannerRay");
static_assert(offsetof(B_BGA_BotTurret_C_UpdateScannerRay, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'B_BGA_BotTurret_C_UpdateScannerRay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.SetTeamColorsVFX
// 0x00D8 (0x00D8 - 0x0000)
struct B_BGA_BotTurret_C_SetTeamColorsVFX final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue2;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue3;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue2;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue3;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue4;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue4;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue3;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue4;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue5;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue5;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue5;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue3;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue4;                 // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue2;    // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue6;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue5;                 // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue6;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue6;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue6;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue3;    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_SetTeamColorsVFX) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_SetTeamColorsVFX");
static_assert(sizeof(B_BGA_BotTurret_C_SetTeamColorsVFX) == 0x0000D8, "Wrong size on B_BGA_BotTurret_C_SetTeamColorsVFX");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_OnSameTeam_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_GetPlayerController_ReturnValue2) == 0x000008, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_OnSameTeam_ReturnValue2) == 0x000014, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_OnSameTeam_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_GetPlayerController_ReturnValue3) == 0x000018, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_GetPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Not_PreBool_ReturnValue2) == 0x00001C, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_BoolToFloat_ReturnValue2) == 0x000020, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_BoolToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_OnSameTeam_ReturnValue3) == 0x000024, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_OnSameTeam_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_GetPlayerController_ReturnValue4) == 0x000028, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_GetPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Not_PreBool_ReturnValue3) == 0x00002C, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_OnSameTeam_ReturnValue4) == 0x00002D, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_OnSameTeam_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_BoolToFloat_ReturnValue3) == 0x000030, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_BoolToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Not_PreBool_ReturnValue4) == 0x000034, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_SelectColor_ReturnValue) == 0x000038, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_BoolToFloat_ReturnValue4) == 0x000048, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_BoolToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_SelectColor_ReturnValue2) == 0x00004C, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_GetPlayerController_ReturnValue5) == 0x00005C, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_GetPlayerController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_OnSameTeam_ReturnValue5) == 0x000060, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_OnSameTeam_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Not_PreBool_ReturnValue5) == 0x000061, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_BoolToFloat_ReturnValue5) == 0x000064, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_BoolToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_SelectColor_ReturnValue3) == 0x000068, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_SelectColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000078, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_SelectColor_ReturnValue4) == 0x000084, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_SelectColor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_LinearColorToVector_ReturnValue2) == 0x000094, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_LinearColorToVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_GetPlayerController_ReturnValue6) == 0x0000A0, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_GetPlayerController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_SelectColor_ReturnValue5) == 0x0000A4, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_SelectColor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_OnSameTeam_ReturnValue6) == 0x0000B4, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_OnSameTeam_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Not_PreBool_ReturnValue6) == 0x0000B5, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_SelectColor_ReturnValue6) == 0x0000B8, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_SelectColor_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_BoolToFloat_ReturnValue6) == 0x0000C8, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_BoolToFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_SetTeamColorsVFX, CallFunc_Conv_LinearColorToVector_ReturnValue3) == 0x0000CC, "Member 'B_BGA_BotTurret_C_SetTeamColorsVFX::CallFunc_Conv_LinearColorToVector_ReturnValue3' has a wrong offset!");

// Function B_BGA_BotTurret.B_BGA_BotTurret_C.OnRep_Left_Right_Gun
// 0x0180 (0x0180 - 0x0000)
struct B_BGA_BotTurret_C_OnRep_Left_Right_Gun final
{
public:
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue3;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue2;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue4;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue2;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue3;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue5;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue4;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue3;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue4;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue6;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue5;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue7;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue5;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue6;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue3;                 // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue6;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue8;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue7;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue7;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue4;                 // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue9;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue8;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue5;                 // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue8;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue2;    // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue9;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue6;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue3;    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue9;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue7;                 // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue8;                 // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue4;    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue9;                 // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue5;    // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue10;        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue10;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue10;           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue10;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue6;    // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun) == 0x000004, "Wrong alignment on B_BGA_BotTurret_C_OnRep_Left_Right_Gun");
static_assert(sizeof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun) == 0x000180, "Wrong size on B_BGA_BotTurret_C_OnRep_Left_Right_Gun");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, Temp_bool_Has_Been_Initd_Variable) == 0x000000, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue2) == 0x000008, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue) == 0x00000C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue3) == 0x000010, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000018, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue2) == 0x00001C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue4) == 0x000020, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue2) == 0x000024, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue2) == 0x000028, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue3) == 0x00002C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue5) == 0x000030, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue3) == 0x000034, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue4) == 0x000035, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue3) == 0x000038, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue4) == 0x00003C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue) == 0x000040, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue4) == 0x000050, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue6) == 0x000054, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue5) == 0x000058, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue7) == 0x00005C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue5) == 0x000060, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue2) == 0x000064, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue5) == 0x000074, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, Temp_bool_IsClosed_Variable) == 0x000078, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue6) == 0x000079, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue6) == 0x00007A, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue3) == 0x00007C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue6) == 0x00008C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, Temp_bool_Has_Been_Initd_Variable2) == 0x000090, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, Temp_bool_IsClosed_Variable2) == 0x000091, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue8) == 0x000094, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue7) == 0x000098, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue7) == 0x000099, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue7) == 0x00009C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue4) == 0x0000A0, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0000B0, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue9) == 0x0000BC, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue9' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue8) == 0x0000C0, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue8) == 0x0000C1, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue5) == 0x0000C4, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue8) == 0x0000D4, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_LinearColorToVector_ReturnValue2) == 0x0000D8, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_LinearColorToVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue9) == 0x0000E4, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue9' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue6) == 0x0000E8, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue9) == 0x0000F8, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_LinearColorToVector_ReturnValue3) == 0x0000FC, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_LinearColorToVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue9) == 0x000108, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue7) == 0x00010C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue8) == 0x00011C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_LinearColorToVector_ReturnValue4) == 0x00012C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_LinearColorToVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue9) == 0x000138, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue9' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_LinearColorToVector_ReturnValue5) == 0x000148, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_LinearColorToVector_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_GetPlayerController_ReturnValue10) == 0x000154, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_GetPlayerController_ReturnValue10' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_OnSameTeam_ReturnValue10) == 0x000158, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_OnSameTeam_ReturnValue10' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Not_PreBool_ReturnValue10) == 0x000159, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_BoolToFloat_ReturnValue10) == 0x00015C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_BoolToFloat_ReturnValue10' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_SelectColor_ReturnValue10) == 0x000160, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_SelectColor_ReturnValue10' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_Conv_LinearColorToVector_ReturnValue6) == 0x000170, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_Conv_LinearColorToVector_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_C_OnRep_Left_Right_Gun, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00017C, "Member 'B_BGA_BotTurret_C_OnRep_Left_Right_Gun::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
