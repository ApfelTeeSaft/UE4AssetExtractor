#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Melee_Generic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_Melee_Generic.B_Melee_Generic_C
// 0x0070 (0x0664 - 0x05F4)
class AB_Melee_Generic_C : public AFortWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F4(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   Light_Melee;                                       // 0x05F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               Rocket_Hammer_Idle_Effect;                         // 0x05FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               Laser_Axe_Idle_Effect;                             // 0x0600(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UBoxComponent*                          Box1;                                              // 0x0604(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	bool                                          Has_Idle_Effect;                                   // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Idle_Effect;                                       // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Effects_Color_Level;                               // 0x0610(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Has_Swing_Effect;                                  // 0x061C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Swing_Effect;                                      // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Use_Effect_Color_Override;                         // 0x0624(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Main_Effects_Color_Lv;                             // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Lv2_wpn;                                           // 0x0638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Lv3_Wpn;                                           // 0x0639(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A[0x2];                                      // 0x063A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Main_Effects_Color2_Lv;                            // 0x063C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               AnimTrail_PSC;                                     // 0x064C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        AnimTrail_ParticleSystem;                          // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               MeleeHeavy_PSC;                                    // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        MeleeHeavy_ParticleSystem;                         // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewVar;                                            // 0x065C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65D[0x3];                                      // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               AnimTrailMaterial;                                 // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_Melee_Generic(int32 EntryPoint);
	void PlayRClickImpacts();
	void OnPlayWeaponFireFX(bool bPersistentFire);
	void ReceiveBeginPlay();
	void FootStepRight();
	void FootStepLeft();
	void MeleeSwingLeft();
	void MeleeSwingRight();
	void UserConstructionScript();
	void SetWpnRarity();
	void Melee_Effect_Color(struct FVector* Melee_Color_Set);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Melee_Generic_C">();
	}
	static class AB_Melee_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Melee_Generic_C>();
	}
};
static_assert(alignof(AB_Melee_Generic_C) == 0x000004, "Wrong alignment on AB_Melee_Generic_C");
static_assert(sizeof(AB_Melee_Generic_C) == 0x000664, "Wrong size on AB_Melee_Generic_C");
static_assert(offsetof(AB_Melee_Generic_C, UberGraphFrame) == 0x0005F4, "Member 'AB_Melee_Generic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Light_Melee) == 0x0005F8, "Member 'AB_Melee_Generic_C::Light_Melee' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Rocket_Hammer_Idle_Effect) == 0x0005FC, "Member 'AB_Melee_Generic_C::Rocket_Hammer_Idle_Effect' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Laser_Axe_Idle_Effect) == 0x000600, "Member 'AB_Melee_Generic_C::Laser_Axe_Idle_Effect' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Box1) == 0x000604, "Member 'AB_Melee_Generic_C::Box1' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Has_Idle_Effect) == 0x000608, "Member 'AB_Melee_Generic_C::Has_Idle_Effect' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Idle_Effect) == 0x00060C, "Member 'AB_Melee_Generic_C::Idle_Effect' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Effects_Color_Level) == 0x000610, "Member 'AB_Melee_Generic_C::Effects_Color_Level' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Has_Swing_Effect) == 0x00061C, "Member 'AB_Melee_Generic_C::Has_Swing_Effect' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Swing_Effect) == 0x000620, "Member 'AB_Melee_Generic_C::Swing_Effect' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Use_Effect_Color_Override) == 0x000624, "Member 'AB_Melee_Generic_C::Use_Effect_Color_Override' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Main_Effects_Color_Lv) == 0x000628, "Member 'AB_Melee_Generic_C::Main_Effects_Color_Lv' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Lv2_wpn) == 0x000638, "Member 'AB_Melee_Generic_C::Lv2_wpn' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Lv3_Wpn) == 0x000639, "Member 'AB_Melee_Generic_C::Lv3_Wpn' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, Main_Effects_Color2_Lv) == 0x00063C, "Member 'AB_Melee_Generic_C::Main_Effects_Color2_Lv' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, AnimTrail_PSC) == 0x00064C, "Member 'AB_Melee_Generic_C::AnimTrail_PSC' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, AnimTrail_ParticleSystem) == 0x000650, "Member 'AB_Melee_Generic_C::AnimTrail_ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, MeleeHeavy_PSC) == 0x000654, "Member 'AB_Melee_Generic_C::MeleeHeavy_PSC' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, MeleeHeavy_ParticleSystem) == 0x000658, "Member 'AB_Melee_Generic_C::MeleeHeavy_ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, NewVar) == 0x00065C, "Member 'AB_Melee_Generic_C::NewVar' has a wrong offset!");
static_assert(offsetof(AB_Melee_Generic_C, AnimTrailMaterial) == 0x000660, "Member 'AB_Melee_Generic_C::AnimTrailMaterial' has a wrong offset!");

}

#pragma pack(pop)
