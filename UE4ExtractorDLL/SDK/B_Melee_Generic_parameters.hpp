#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Melee_Generic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Melee_Generic.B_Melee_Generic_C.ExecuteUbergraph_B_Melee_Generic
// 0x0088 (0x0088 - 0x0000)
struct B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_R;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_G;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_B;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_A;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_R2;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_G2;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_B2;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_A2;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue2;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_R3;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_G3;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_B3;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_A3;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_R4;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_G4;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_B4;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakColor_A4;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue4;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPersistentFire;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic) == 0x000004, "Wrong alignment on B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic");
static_assert(sizeof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic) == 0x000088, "Wrong size on B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, EntryPoint) == 0x000000, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_R) == 0x000004, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_G) == 0x000008, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_B) == 0x00000C, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_A) == 0x000010, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_R2) == 0x000020, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_R2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_G2) == 0x000024, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_G2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_B2) == 0x000028, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_B2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_A2) == 0x00002C, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_A2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000030, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_MakeVector_ReturnValue2) == 0x000034, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000040, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_K2_GetRootComponent_ReturnValue2) == 0x000044, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_K2_GetRootComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_SpawnEmitterAttached_ReturnValue2) == 0x000048, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_SpawnEmitterAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_R3) == 0x00004C, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_R3' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_G3) == 0x000050, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_G3' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_B3) == 0x000054, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_B3' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_A3) == 0x000058, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_A3' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_MakeVector_ReturnValue3) == 0x00005C, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_R4) == 0x000068, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_R4' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_G4) == 0x00006C, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_G4' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_B4) == 0x000070, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_B4' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_BreakColor_A4) == 0x000074, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_BreakColor_A4' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, CallFunc_MakeVector_ReturnValue4) == 0x000078, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::CallFunc_MakeVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic, K2Node_Event_bPersistentFire) == 0x000084, "Member 'B_Melee_Generic_C_ExecuteUbergraph_B_Melee_Generic::K2Node_Event_bPersistentFire' has a wrong offset!");

// Function B_Melee_Generic.B_Melee_Generic_C.OnPlayWeaponFireFX
// 0x0001 (0x0001 - 0x0000)
struct B_Melee_Generic_C_OnPlayWeaponFireFX final
{
public:
	bool                                          bPersistentFire;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Melee_Generic_C_OnPlayWeaponFireFX) == 0x000001, "Wrong alignment on B_Melee_Generic_C_OnPlayWeaponFireFX");
static_assert(sizeof(B_Melee_Generic_C_OnPlayWeaponFireFX) == 0x000001, "Wrong size on B_Melee_Generic_C_OnPlayWeaponFireFX");
static_assert(offsetof(B_Melee_Generic_C_OnPlayWeaponFireFX, bPersistentFire) == 0x000000, "Member 'B_Melee_Generic_C_OnPlayWeaponFireFX::bPersistentFire' has a wrong offset!");

// Function B_Melee_Generic.B_Melee_Generic_C.SetWpnRarity
// 0x001C (0x001C - 0x0000)
struct B_Melee_Generic_C_SetWpnRarity final
{
public:
	uint8                                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable2;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable3;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable4;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable5;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable6;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable7;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable8;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable9;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   Temp_byte_Variable10;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable11;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor)
};
static_assert(alignof(B_Melee_Generic_C_SetWpnRarity) == 0x000004, "Wrong alignment on B_Melee_Generic_C_SetWpnRarity");
static_assert(sizeof(B_Melee_Generic_C_SetWpnRarity) == 0x00001C, "Wrong size on B_Melee_Generic_C_SetWpnRarity");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable) == 0x000000, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable2) == 0x000001, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable3) == 0x000002, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable4) == 0x000003, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable5) == 0x000004, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable6) == 0x000005, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable7) == 0x000006, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable8) == 0x000007, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable9) == 0x000008, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable10) == 0x000009, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, Temp_byte_Variable11) == 0x00000A, "Member 'B_Melee_Generic_C_SetWpnRarity::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, K2Node_Select_Default) == 0x00000B, "Member 'B_Melee_Generic_C_SetWpnRarity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x00000C, "Member 'B_Melee_Generic_C_SetWpnRarity::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Melee_Generic_C_SetWpnRarity, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'B_Melee_Generic_C_SetWpnRarity::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function B_Melee_Generic.B_Melee_Generic_C.Melee_Effect_Color
// 0x000C (0x000C - 0x0000)
struct B_Melee_Generic_C_Melee_Effect_Color final
{
public:
	struct FVector                                Melee_Color_Set;                                   // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Melee_Generic_C_Melee_Effect_Color) == 0x000004, "Wrong alignment on B_Melee_Generic_C_Melee_Effect_Color");
static_assert(sizeof(B_Melee_Generic_C_Melee_Effect_Color) == 0x00000C, "Wrong size on B_Melee_Generic_C_Melee_Effect_Color");
static_assert(offsetof(B_Melee_Generic_C_Melee_Effect_Color, Melee_Color_Set) == 0x000000, "Member 'B_Melee_Generic_C_Melee_Effect_Color::Melee_Color_Set' has a wrong offset!");

}

#pragma pack(pop)
