#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Placement_Preview_AirStrike

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AirStrikesPatterns_structs.hpp"
#include "StrikePatternEnum_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_Placement_Preview_AirStrike.B_Placement_Preview_AirStrike_C
// 0x0154 (0x04B0 - 0x035C)
class AB_Placement_Preview_AirStrike_C final : public AFortDecoPreview
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x035C(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   GridDecal_Mesh;                                    // 0x0360(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        airstrike_incoming_place_audiocomponent;           // 0x0364(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   dashedLine;                                        // 0x0368(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   Sm_SupplyDrop_TargetRay_01;                        // 0x036C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UDecalComponent*                        GridDecal;                                         // 0x0370(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UBoxComponent*                          Box1;                                              // 0x0374(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Spawn_Arrow_NewTrack_0_D8CAB91943322A93E0FF2CA94190A798; // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Spawn_Arrow__Direction_D8CAB91943322A93E0FF2CA94190A798; // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Spawn_Arrow;                                       // 0x0380(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ReticuleRestartDelay;                              // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ReticuleIntermittentDelay;                         // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BombsDelay;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Can_212_x1_Repeat_;                                // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Can_212_x2_Repeat_;                                // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecalRotation;                                     // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         Dotted_Lines_Amount;                               // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Dotted_Lines_Spacing_in_Z;                         // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UStaticMeshComponent*>           Dotted_Lines_Spacing;                              // 0x03A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Threedline_MID;                                    // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ArrowheadStartLocation;                            // 0x03B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ArrowheadEndLocation;                              // 0x03BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Bomb_Init_Transform;                               // 0x03D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Bomb_Start_Location;                               // 0x0400(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         ForLoopCounter;                                    // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FAirStrikesPatterns                    StrikePatternType;                                 // 0x0410(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance)
	EStrikePatternEnum                            Current_Air_Strike_Pattern;                        // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingBetweenObjects;                             // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UParticleSystemComponent*>       Current_Particle_Array;                            // 0x0424(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        Position_Array_Cleaned_of_duplicates;              // 0x0430(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<int32>                                 Duplicate_Positions;                               // 0x043C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<int32>                                 Double_Entries;                                    // 0x0448(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        One_Hit_Particle_Indicator;                        // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Two_Hit_Particle_Indicator;                        // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        Position_Array_With_duplicates;                    // 0x045C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         MultiGateIndex;                                    // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        TargetEmitterLocations;                            // 0x046C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                 TargetEmitterNewMovementStartTimes;                // 0x0478(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UParticleSystemComponent*>       DefaultPositonParticles;                           // 0x0484(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        Default_Location_Template;                         // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Line_MID;                                          // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Placement_is_Valid;                                // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Placement_is_Valid_Previously;                     // 0x0499(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Valid_state_changed;                               // 0x049A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Valid_State_Changed_Override;                      // 0x049B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Reinit_Particles;                                  // 0x049C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x049D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Recreate_particles_if_valid;                       // 0x049E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49F[0x1];                                      // 0x049F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay_Between_Particle_Spawns;                     // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_Placement_Preview_AirStrike(int32 EntryPoint);
	void RestartLineReticule();
	void ReceiveBeginPlay();
	void SwitchType(const TArray<struct FVector>& Positions_With_Duplicates, const TArray<struct FVector>& Cleaned_Positions, const TArray<int32>& Duplicated_Entries);
	void SetVectorParameterValueOnAllPreviewMIDs(class FName ParamName, const struct FLinearColor& ParamValue);
	void SetScalarParameterValueOnAllPreviewMIDs(class FName ParamName, float ParamValue);
	void OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace);
	void OnUpdateScale(float Scale, const struct FVector& InWorldSpacePivot);
	void OnInitializeDecoPreview(const class ABuildingActor* NewBuildingActor, const class UFortDecoItemDefinition* NewDecoItemDefinition);
	void OnBounceMotionUpdate(float VectorScale);
	void Spawn_Arrow__UpdateFunc();
	void Spawn_Arrow__FinishedFunc();
	void UserConstructionScript();
	void Kill_Emitters_and_Start_Times();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Placement_Preview_AirStrike_C">();
	}
	static class AB_Placement_Preview_AirStrike_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Placement_Preview_AirStrike_C>();
	}
};
static_assert(alignof(AB_Placement_Preview_AirStrike_C) == 0x000010, "Wrong alignment on AB_Placement_Preview_AirStrike_C");
static_assert(sizeof(AB_Placement_Preview_AirStrike_C) == 0x0004B0, "Wrong size on AB_Placement_Preview_AirStrike_C");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, UberGraphFrame) == 0x00035C, "Member 'AB_Placement_Preview_AirStrike_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, GridDecal_Mesh) == 0x000360, "Member 'AB_Placement_Preview_AirStrike_C::GridDecal_Mesh' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, airstrike_incoming_place_audiocomponent) == 0x000364, "Member 'AB_Placement_Preview_AirStrike_C::airstrike_incoming_place_audiocomponent' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, dashedLine) == 0x000368, "Member 'AB_Placement_Preview_AirStrike_C::dashedLine' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Sm_SupplyDrop_TargetRay_01) == 0x00036C, "Member 'AB_Placement_Preview_AirStrike_C::Sm_SupplyDrop_TargetRay_01' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, GridDecal) == 0x000370, "Member 'AB_Placement_Preview_AirStrike_C::GridDecal' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Box1) == 0x000374, "Member 'AB_Placement_Preview_AirStrike_C::Box1' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Spawn_Arrow_NewTrack_0_D8CAB91943322A93E0FF2CA94190A798) == 0x000378, "Member 'AB_Placement_Preview_AirStrike_C::Spawn_Arrow_NewTrack_0_D8CAB91943322A93E0FF2CA94190A798' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Spawn_Arrow__Direction_D8CAB91943322A93E0FF2CA94190A798) == 0x00037C, "Member 'AB_Placement_Preview_AirStrike_C::Spawn_Arrow__Direction_D8CAB91943322A93E0FF2CA94190A798' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Spawn_Arrow) == 0x000380, "Member 'AB_Placement_Preview_AirStrike_C::Spawn_Arrow' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ReticuleRestartDelay) == 0x000384, "Member 'AB_Placement_Preview_AirStrike_C::ReticuleRestartDelay' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ReticuleIntermittentDelay) == 0x000388, "Member 'AB_Placement_Preview_AirStrike_C::ReticuleIntermittentDelay' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, BombsDelay) == 0x00038C, "Member 'AB_Placement_Preview_AirStrike_C::BombsDelay' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Can_212_x1_Repeat_) == 0x000390, "Member 'AB_Placement_Preview_AirStrike_C::Can_212_x1_Repeat_' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Can_212_x2_Repeat_) == 0x000391, "Member 'AB_Placement_Preview_AirStrike_C::Can_212_x2_Repeat_' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, DecalRotation) == 0x000394, "Member 'AB_Placement_Preview_AirStrike_C::DecalRotation' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Dotted_Lines_Amount) == 0x000398, "Member 'AB_Placement_Preview_AirStrike_C::Dotted_Lines_Amount' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Dotted_Lines_Spacing_in_Z) == 0x00039C, "Member 'AB_Placement_Preview_AirStrike_C::Dotted_Lines_Spacing_in_Z' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Dotted_Lines_Spacing) == 0x0003A0, "Member 'AB_Placement_Preview_AirStrike_C::Dotted_Lines_Spacing' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Threedline_MID) == 0x0003AC, "Member 'AB_Placement_Preview_AirStrike_C::Threedline_MID' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ArrowheadStartLocation) == 0x0003B0, "Member 'AB_Placement_Preview_AirStrike_C::ArrowheadStartLocation' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ArrowheadEndLocation) == 0x0003BC, "Member 'AB_Placement_Preview_AirStrike_C::ArrowheadEndLocation' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Bomb_Init_Transform) == 0x0003D0, "Member 'AB_Placement_Preview_AirStrike_C::Bomb_Init_Transform' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Bomb_Start_Location) == 0x000400, "Member 'AB_Placement_Preview_AirStrike_C::Bomb_Start_Location' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ForLoopCounter) == 0x00040C, "Member 'AB_Placement_Preview_AirStrike_C::ForLoopCounter' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, StrikePatternType) == 0x000410, "Member 'AB_Placement_Preview_AirStrike_C::StrikePatternType' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Current_Air_Strike_Pattern) == 0x00041C, "Member 'AB_Placement_Preview_AirStrike_C::Current_Air_Strike_Pattern' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, SpacingBetweenObjects) == 0x000420, "Member 'AB_Placement_Preview_AirStrike_C::SpacingBetweenObjects' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Current_Particle_Array) == 0x000424, "Member 'AB_Placement_Preview_AirStrike_C::Current_Particle_Array' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Position_Array_Cleaned_of_duplicates) == 0x000430, "Member 'AB_Placement_Preview_AirStrike_C::Position_Array_Cleaned_of_duplicates' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Duplicate_Positions) == 0x00043C, "Member 'AB_Placement_Preview_AirStrike_C::Duplicate_Positions' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Double_Entries) == 0x000448, "Member 'AB_Placement_Preview_AirStrike_C::Double_Entries' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, One_Hit_Particle_Indicator) == 0x000454, "Member 'AB_Placement_Preview_AirStrike_C::One_Hit_Particle_Indicator' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Two_Hit_Particle_Indicator) == 0x000458, "Member 'AB_Placement_Preview_AirStrike_C::Two_Hit_Particle_Indicator' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Position_Array_With_duplicates) == 0x00045C, "Member 'AB_Placement_Preview_AirStrike_C::Position_Array_With_duplicates' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, MultiGateIndex) == 0x000468, "Member 'AB_Placement_Preview_AirStrike_C::MultiGateIndex' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, TargetEmitterLocations) == 0x00046C, "Member 'AB_Placement_Preview_AirStrike_C::TargetEmitterLocations' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, TargetEmitterNewMovementStartTimes) == 0x000478, "Member 'AB_Placement_Preview_AirStrike_C::TargetEmitterNewMovementStartTimes' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, DefaultPositonParticles) == 0x000484, "Member 'AB_Placement_Preview_AirStrike_C::DefaultPositonParticles' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Default_Location_Template) == 0x000490, "Member 'AB_Placement_Preview_AirStrike_C::Default_Location_Template' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Line_MID) == 0x000494, "Member 'AB_Placement_Preview_AirStrike_C::Line_MID' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Placement_is_Valid) == 0x000498, "Member 'AB_Placement_Preview_AirStrike_C::Placement_is_Valid' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Placement_is_Valid_Previously) == 0x000499, "Member 'AB_Placement_Preview_AirStrike_C::Placement_is_Valid_Previously' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Valid_state_changed) == 0x00049A, "Member 'AB_Placement_Preview_AirStrike_C::Valid_state_changed' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Valid_State_Changed_Override) == 0x00049B, "Member 'AB_Placement_Preview_AirStrike_C::Valid_State_Changed_Override' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Reinit_Particles) == 0x00049C, "Member 'AB_Placement_Preview_AirStrike_C::Reinit_Particles' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, NewVar_0) == 0x00049D, "Member 'AB_Placement_Preview_AirStrike_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Recreate_particles_if_valid) == 0x00049E, "Member 'AB_Placement_Preview_AirStrike_C::Recreate_particles_if_valid' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Delay_Between_Particle_Spawns) == 0x0004A0, "Member 'AB_Placement_Preview_AirStrike_C::Delay_Between_Particle_Spawns' has a wrong offset!");

}

#pragma pack(pop)
