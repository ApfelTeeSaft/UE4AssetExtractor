#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Placement_SupplyDrop

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.ExecuteUbergraph_B_Placement_SupplyDrop
// 0x0054 (0x0054 - 0x0000)
struct B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_VectorScale;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	const class ABuildingActor*                   K2Node_Event_NewBuildingActor;                     // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	const class UFortDecoItemDefinition*          K2Node_Event_NewDecoItemDefinition;                // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Scale;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_InWorldSpacePivot;                    // 0x0018(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSafeToPlace;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ParamName2;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_ParamValue2;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_ParamName;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Event_ParamValue;                           // 0x0040(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop");
static_assert(sizeof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop) == 0x000054, "Wrong size on B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, EntryPoint) == 0x000000, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, Temp_bool_Has_Been_Initd_Variable2) == 0x000006, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_VectorScale) == 0x000008, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_VectorScale' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_NewBuildingActor) == 0x00000C, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_NewBuildingActor' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_NewDecoItemDefinition) == 0x000010, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_NewDecoItemDefinition' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_Scale) == 0x000014, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_Scale' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_InWorldSpacePivot) == 0x000018, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_InWorldSpacePivot' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_bSafeToPlace) == 0x000028, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_bSafeToPlace' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_ParamName2) == 0x00002C, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_ParamName2' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_ParamValue2) == 0x000034, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_ParamValue2' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_ParamName) == 0x000038, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_ParamName' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, K2Node_Event_ParamValue) == 0x000040, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::K2Node_Event_ParamValue' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop, Temp_bool_IsClosed_Variable2) == 0x000050, "Member 'B_Placement_SupplyDrop_C_ExecuteUbergraph_B_Placement_SupplyDrop::Temp_bool_IsClosed_Variable2' has a wrong offset!");

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.SetVectorParameterValueOnAllPreviewMIDs
// 0x0018 (0x0018 - 0x0000)
struct B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           ParamValue;                                        // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs");
static_assert(sizeof(B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs) == 0x000018, "Wrong size on B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs");
static_assert(offsetof(B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs, ParamName) == 0x000000, "Member 'B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs::ParamName' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs, ParamValue) == 0x000008, "Member 'B_Placement_SupplyDrop_C_SetVectorParameterValueOnAllPreviewMIDs::ParamValue' has a wrong offset!");

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.SetScalarParameterValueOnAllPreviewMIDs
// 0x000C (0x000C - 0x0000)
struct B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ParamValue;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs");
static_assert(sizeof(B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs) == 0x00000C, "Wrong size on B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs");
static_assert(offsetof(B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs, ParamName) == 0x000000, "Member 'B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs::ParamName' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs, ParamValue) == 0x000008, "Member 'B_Placement_SupplyDrop_C_SetScalarParameterValueOnAllPreviewMIDs::ParamValue' has a wrong offset!");

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.OnUpdateVisuals
// 0x0008 (0x0008 - 0x0000)
struct B_Placement_SupplyDrop_C_OnUpdateVisuals final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSafeToPlace;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_OnUpdateVisuals) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_OnUpdateVisuals");
static_assert(sizeof(B_Placement_SupplyDrop_C_OnUpdateVisuals) == 0x000008, "Wrong size on B_Placement_SupplyDrop_C_OnUpdateVisuals");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnUpdateVisuals, DeltaSeconds) == 0x000000, "Member 'B_Placement_SupplyDrop_C_OnUpdateVisuals::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnUpdateVisuals, bSafeToPlace) == 0x000004, "Member 'B_Placement_SupplyDrop_C_OnUpdateVisuals::bSafeToPlace' has a wrong offset!");

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.OnUpdateScale
// 0x0010 (0x0010 - 0x0000)
struct B_Placement_SupplyDrop_C_OnUpdateScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                InWorldSpacePivot;                                 // 0x0004(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_OnUpdateScale) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_OnUpdateScale");
static_assert(sizeof(B_Placement_SupplyDrop_C_OnUpdateScale) == 0x000010, "Wrong size on B_Placement_SupplyDrop_C_OnUpdateScale");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnUpdateScale, Scale) == 0x000000, "Member 'B_Placement_SupplyDrop_C_OnUpdateScale::Scale' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnUpdateScale, InWorldSpacePivot) == 0x000004, "Member 'B_Placement_SupplyDrop_C_OnUpdateScale::InWorldSpacePivot' has a wrong offset!");

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.OnInitializeDecoPreview
// 0x0008 (0x0008 - 0x0000)
struct B_Placement_SupplyDrop_C_OnInitializeDecoPreview final
{
public:
	const class ABuildingActor*                   NewBuildingActor;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	const class UFortDecoItemDefinition*          NewDecoItemDefinition;                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_OnInitializeDecoPreview) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_OnInitializeDecoPreview");
static_assert(sizeof(B_Placement_SupplyDrop_C_OnInitializeDecoPreview) == 0x000008, "Wrong size on B_Placement_SupplyDrop_C_OnInitializeDecoPreview");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnInitializeDecoPreview, NewBuildingActor) == 0x000000, "Member 'B_Placement_SupplyDrop_C_OnInitializeDecoPreview::NewBuildingActor' has a wrong offset!");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnInitializeDecoPreview, NewDecoItemDefinition) == 0x000004, "Member 'B_Placement_SupplyDrop_C_OnInitializeDecoPreview::NewDecoItemDefinition' has a wrong offset!");

// Function B_Placement_SupplyDrop.B_Placement_SupplyDrop_C.OnBounceMotionUpdate
// 0x0004 (0x0004 - 0x0000)
struct B_Placement_SupplyDrop_C_OnBounceMotionUpdate final
{
public:
	float                                         VectorScale;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Placement_SupplyDrop_C_OnBounceMotionUpdate) == 0x000004, "Wrong alignment on B_Placement_SupplyDrop_C_OnBounceMotionUpdate");
static_assert(sizeof(B_Placement_SupplyDrop_C_OnBounceMotionUpdate) == 0x000004, "Wrong size on B_Placement_SupplyDrop_C_OnBounceMotionUpdate");
static_assert(offsetof(B_Placement_SupplyDrop_C_OnBounceMotionUpdate, VectorScale) == 0x000000, "Member 'B_Placement_SupplyDrop_C_OnBounceMotionUpdate::VectorScale' has a wrong offset!");

}

#pragma pack(pop)
