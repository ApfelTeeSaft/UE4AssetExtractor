#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Banner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_Prj_Banner.B_Prj_Banner_C
// 0x024C (0x0664 - 0x0418)
class AB_Prj_Banner_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SK_Banner;                                         // 0x041C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_FlagGroundSymbol;                                // 0x0420(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_Banner_Shockwave;                                // 0x0424(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               Place_FX;                                          // 0x0428(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        Audio1;                                            // 0x042C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Initial_Delay;                                     // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             PlacementCue;                                      // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             ExplosionCue;                                      // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             SecondExplosionCue;                                // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Explosion;                                       // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         MuzzleFlashCounter;                                // 0x0444(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	float                                         MaxSlope;                                          // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RepairRadius;                                      // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RepairWaveIncrement;                               // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RepairWaveDelay;                                   // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         RepairWaveCounter;                                 // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class ABuildingActor*>                 BuildingsToRepair;                                 // 0x045C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bHasShockwave;                                     // 0x0468(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShockWaveRadius;                                   // 0x046C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PlayerRotation;                                    // 0x0470(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFortTeamMemberInfo                    TeamMemberInfo;                                    // 0x047C(0x01E8)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)

public:
	void ExecuteUbergraph_B_Prj_Banner(int32 EntryPoint);
	void DestroyBanner();
	void Pass_Info(bool Shockwave, float Radius, const struct FRotator& PlayerRotation_0);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnStop(const struct FHitResult& Hit);
	void FlashShield();
	void UserConstructionScript();
	void OnRep_bHasShockwave();
	void OnRep_TeamMemberInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Banner_C">();
	}
	static class AB_Prj_Banner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Banner_C>();
	}
};
static_assert(alignof(AB_Prj_Banner_C) == 0x000004, "Wrong alignment on AB_Prj_Banner_C");
static_assert(sizeof(AB_Prj_Banner_C) == 0x000664, "Wrong size on AB_Prj_Banner_C");
static_assert(offsetof(AB_Prj_Banner_C, UberGraphFrame) == 0x000418, "Member 'AB_Prj_Banner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, SK_Banner) == 0x00041C, "Member 'AB_Prj_Banner_C::SK_Banner' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, P_FlagGroundSymbol) == 0x000420, "Member 'AB_Prj_Banner_C::P_FlagGroundSymbol' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, P_Banner_Shockwave) == 0x000424, "Member 'AB_Prj_Banner_C::P_Banner_Shockwave' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, Place_FX) == 0x000428, "Member 'AB_Prj_Banner_C::Place_FX' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, Audio1) == 0x00042C, "Member 'AB_Prj_Banner_C::Audio1' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, Initial_Delay) == 0x000430, "Member 'AB_Prj_Banner_C::Initial_Delay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, PlacementCue) == 0x000434, "Member 'AB_Prj_Banner_C::PlacementCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, ExplosionCue) == 0x000438, "Member 'AB_Prj_Banner_C::ExplosionCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, SecondExplosionCue) == 0x00043C, "Member 'AB_Prj_Banner_C::SecondExplosionCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, P_Explosion) == 0x000440, "Member 'AB_Prj_Banner_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, MuzzleFlashCounter) == 0x000444, "Member 'AB_Prj_Banner_C::MuzzleFlashCounter' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, MaxSlope) == 0x000448, "Member 'AB_Prj_Banner_C::MaxSlope' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, RepairRadius) == 0x00044C, "Member 'AB_Prj_Banner_C::RepairRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, RepairWaveIncrement) == 0x000450, "Member 'AB_Prj_Banner_C::RepairWaveIncrement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, RepairWaveDelay) == 0x000454, "Member 'AB_Prj_Banner_C::RepairWaveDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, RepairWaveCounter) == 0x000458, "Member 'AB_Prj_Banner_C::RepairWaveCounter' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, BuildingsToRepair) == 0x00045C, "Member 'AB_Prj_Banner_C::BuildingsToRepair' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, bHasShockwave) == 0x000468, "Member 'AB_Prj_Banner_C::bHasShockwave' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, ShockWaveRadius) == 0x00046C, "Member 'AB_Prj_Banner_C::ShockWaveRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, PlayerRotation) == 0x000470, "Member 'AB_Prj_Banner_C::PlayerRotation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Banner_C, TeamMemberInfo) == 0x00047C, "Member 'AB_Prj_Banner_C::TeamMemberInfo' has a wrong offset!");

}

#pragma pack(pop)
