#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Banner

#include "Basic.hpp"

#include "B_Prj_Banner_classes.hpp"
#include "B_Prj_Banner_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function B_Prj_Banner.B_Prj_Banner_C.ExecuteUbergraph_B_Prj_Banner
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_Prj_Banner_C::ExecuteUbergraph_B_Prj_Banner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "ExecuteUbergraph_B_Prj_Banner");

	Params::B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Banner.B_Prj_Banner_C.DestroyBanner
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_Prj_Banner_C::DestroyBanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "DestroyBanner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Banner.B_Prj_Banner_C.Pass_Info
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Shockwave                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FRotator&                  PlayerRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_Prj_Banner_C::Pass_Info(bool Shockwave, float Radius, const struct FRotator& PlayerRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "Pass_Info");

	Params::B_Prj_Banner_C_Pass_Info Parms{};

	Parms.Shockwave = Shockwave;
	Parms.Radius = Radius;
	Parms.PlayerRotation_0 = std::move(PlayerRotation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Banner.B_Prj_Banner_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelfMoved                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitNormal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_Prj_Banner_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "ReceiveHit");

	Params::B_Prj_Banner_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Banner.B_Prj_Banner_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_Prj_Banner_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "ReceiveEndPlay");

	Params::B_Prj_Banner_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Banner.B_Prj_Banner_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void AB_Prj_Banner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Banner.B_Prj_Banner_C.OnStop
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_Prj_Banner_C::OnStop(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "OnStop");

	Params::B_Prj_Banner_C_OnStop Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Banner.B_Prj_Banner_C.FlashShield
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_Banner_C::FlashShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "FlashShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Banner.B_Prj_Banner_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_Banner_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Banner.B_Prj_Banner_C.OnRep_bHasShockwave
// (BlueprintCallable, BlueprintEvent)

void AB_Prj_Banner_C::OnRep_bHasShockwave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "OnRep_bHasShockwave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Banner.B_Prj_Banner_C.OnRep_TeamMemberInfo
// (BlueprintCallable, BlueprintEvent)

void AB_Prj_Banner_C::OnRep_TeamMemberInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Banner_C", "OnRep_TeamMemberInfo");

	UObject::ProcessEvent(Func, nullptr);
}

}

#pragma pack(pop)
