#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Banner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Prj_Banner.B_Prj_Banner_C.ExecuteUbergraph_B_Prj_Banner
// 0x0260 (0x0260 - 0x0000)
struct B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit2;                                 // 0x0018(0x0080)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_Other;                                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0158(0x0080)(ConstParm, ContainsInstancedReference)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn2;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Shockwave;                      // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E7[0x1];                                      // 0x01E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Radius;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_CustomEvent_PlayerRotation;                 // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActorRotation_ReturnValue;             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0xB];                                      // 0x0215(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_Post_Banner_Impact_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner) == 0x000010, "Wrong alignment on B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner");
static_assert(sizeof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner) == 0x000260, "Wrong size on B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, EntryPoint) == 0x000000, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_GetInstigator_ReturnValue) == 0x000004, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_DynamicCast_AsFort_Pawn) == 0x000008, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_DynamicCast_bSuccess) == 0x00000C, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_DynamicCast_AsFort_Player_State) == 0x000010, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_DynamicCast_bSuccess2) == 0x000014, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_IsDedicatedServer_ReturnValue) == 0x000015, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_Hit2) == 0x000018, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_Hit2' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_Location) == 0x0000A0, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_ImpactPoint) == 0x0000AC, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_Normal) == 0x0000B8, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C4, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_HitActor) == 0x0000D4, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_HitBoneName) == 0x0000DC, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_HitItem) == 0x0000E4, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_TraceStart) == 0x0000E8, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakHitResult_TraceEnd) == 0x0000F4, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, Temp_bool_Has_Been_Initd_Variable) == 0x000100, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000104, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_HasAuthority_ReturnValue) == 0x000110, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_EndPlayReason) == 0x000111, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000114, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000120, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_MyComp) == 0x000124, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_Other) == 0x000128, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_OtherComp) == 0x00012C, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_bSelfMoved) == 0x000130, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_HitLocation) == 0x000134, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_HitNormal) == 0x000140, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_NormalImpulse) == 0x00014C, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_Event_Hit) == 0x000158, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001D8, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_DegAcos_ReturnValue) == 0x0001DC, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_DynamicCast_AsFort_Pawn2) == 0x0001E0, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_DynamicCast_AsFort_Pawn2' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_DynamicCast_bSuccess3) == 0x0001E4, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001E5, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_CustomEvent_Shockwave) == 0x0001E6, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_CustomEvent_Shockwave' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_CustomEvent_Radius) == 0x0001E8, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, K2Node_CustomEvent_PlayerRotation) == 0x0001EC, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::K2Node_CustomEvent_PlayerRotation' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakRotator_Roll) == 0x0001F8, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakRotator_Pitch) == 0x0001FC, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BreakRotator_Yaw) == 0x000200, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, Temp_bool_IsClosed_Variable) == 0x000204, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_MakeRotator_ReturnValue) == 0x000208, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_SetActorRotation_ReturnValue) == 0x000214, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_GetTransform_ReturnValue) == 0x000220, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000250, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_FinishSpawningActor_ReturnValue) == 0x000254, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000258, "Member 'B_Prj_Banner_C_ExecuteUbergraph_B_Prj_Banner::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");

// Function B_Prj_Banner.B_Prj_Banner_C.Pass_Info
// 0x0014 (0x0014 - 0x0000)
struct B_Prj_Banner_C_Pass_Info final
{
public:
	bool                                          Shockwave;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               PlayerRotation_0;                                  // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Banner_C_Pass_Info) == 0x000004, "Wrong alignment on B_Prj_Banner_C_Pass_Info");
static_assert(sizeof(B_Prj_Banner_C_Pass_Info) == 0x000014, "Wrong size on B_Prj_Banner_C_Pass_Info");
static_assert(offsetof(B_Prj_Banner_C_Pass_Info, Shockwave) == 0x000000, "Member 'B_Prj_Banner_C_Pass_Info::Shockwave' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_Pass_Info, Radius) == 0x000004, "Member 'B_Prj_Banner_C_Pass_Info::Radius' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_Pass_Info, PlayerRotation_0) == 0x000008, "Member 'B_Prj_Banner_C_Pass_Info::PlayerRotation_0' has a wrong offset!");

// Function B_Prj_Banner.B_Prj_Banner_C.ReceiveHit
// 0x00B4 (0x00B4 - 0x0000)
struct B_Prj_Banner_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Other;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelfMoved;                                        // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                NormalImpulse;                                     // 0x0028(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             Hit;                                               // 0x0034(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Banner_C_ReceiveHit) == 0x000004, "Wrong alignment on B_Prj_Banner_C_ReceiveHit");
static_assert(sizeof(B_Prj_Banner_C_ReceiveHit) == 0x0000B4, "Wrong size on B_Prj_Banner_C_ReceiveHit");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Prj_Banner_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, Other) == 0x000004, "Member 'B_Prj_Banner_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, OtherComp) == 0x000008, "Member 'B_Prj_Banner_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, bSelfMoved) == 0x00000C, "Member 'B_Prj_Banner_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, HitLocation) == 0x000010, "Member 'B_Prj_Banner_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, HitNormal) == 0x00001C, "Member 'B_Prj_Banner_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, NormalImpulse) == 0x000028, "Member 'B_Prj_Banner_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_ReceiveHit, Hit) == 0x000034, "Member 'B_Prj_Banner_C_ReceiveHit::Hit' has a wrong offset!");

// Function B_Prj_Banner.B_Prj_Banner_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_Prj_Banner_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Banner_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_Prj_Banner_C_ReceiveEndPlay");
static_assert(sizeof(B_Prj_Banner_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_Prj_Banner_C_ReceiveEndPlay");
static_assert(offsetof(B_Prj_Banner_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_Prj_Banner_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function B_Prj_Banner.B_Prj_Banner_C.OnStop
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_Banner_C_OnStop final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Banner_C_OnStop) == 0x000004, "Wrong alignment on B_Prj_Banner_C_OnStop");
static_assert(sizeof(B_Prj_Banner_C_OnStop) == 0x000080, "Wrong size on B_Prj_Banner_C_OnStop");
static_assert(offsetof(B_Prj_Banner_C_OnStop, Hit) == 0x000000, "Member 'B_Prj_Banner_C_OnStop::Hit' has a wrong offset!");

// Function B_Prj_Banner.B_Prj_Banner_C.OnRep_bHasShockwave
// 0x0010 (0x0010 - 0x0000)
struct B_Prj_Banner_C_OnRep_bHasShockwave final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Banner_C_OnRep_bHasShockwave) == 0x000004, "Wrong alignment on B_Prj_Banner_C_OnRep_bHasShockwave");
static_assert(sizeof(B_Prj_Banner_C_OnRep_bHasShockwave) == 0x000010, "Wrong size on B_Prj_Banner_C_OnRep_bHasShockwave");
static_assert(offsetof(B_Prj_Banner_C_OnRep_bHasShockwave, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Prj_Banner_C_OnRep_bHasShockwave::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Banner_C_OnRep_bHasShockwave, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'B_Prj_Banner_C_OnRep_bHasShockwave::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
