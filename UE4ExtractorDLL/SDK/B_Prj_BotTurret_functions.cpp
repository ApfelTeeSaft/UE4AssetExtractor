#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_BotTurret

#include "Basic.hpp"

#include "B_Prj_BotTurret_classes.hpp"
#include "B_Prj_BotTurret_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ExecuteUbergraph_B_Prj_BotTurret
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_Prj_BotTurret_C::ExecuteUbergraph_B_Prj_BotTurret(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "ExecuteUbergraph_B_Prj_BotTurret");

	Params::B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.OnBounce
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_Prj_BotTurret_C::OnBounce(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "OnBounce");

	Params::B_Prj_BotTurret_C_OnBounce Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.OnExploded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class AActor*>&            HitActors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// const TArray<struct FHitResult>&        HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)

void AB_Prj_BotTurret_C::OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "OnExploded");

	Params::B_Prj_BotTurret_C_OnExploded Parms{};

	Parms.HitActors = std::move(HitActors);
	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.Hit Pawn
// (BlueprintCallable, BlueprintEvent)

void AB_Prj_BotTurret_C::Hit_Pawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "Hit Pawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.HitStaticMesh
// (BlueprintCallable, BlueprintEvent)

void AB_Prj_BotTurret_C::HitStaticMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "HitStaticMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_Prj_BotTurret_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "ReceiveActorBeginOverlap");

	Params::B_Prj_BotTurret_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelfMoved                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitNormal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_Prj_BotTurret_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "ReceiveHit");

	Params::B_Prj_BotTurret_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void AB_Prj_BotTurret_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_BotTurret_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.OnRep_ShouldBounce
// (BlueprintCallable, BlueprintEvent)

void AB_Prj_BotTurret_C::OnRep_ShouldBounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "OnRep_ShouldBounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.OnRep_Bounce
// (BlueprintCallable, BlueprintEvent)

void AB_Prj_BotTurret_C::OnRep_Bounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "OnRep_Bounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_BotTurret.B_Prj_BotTurret_C.SetTeamColorVFX
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_BotTurret_C::SetTeamColorVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_BotTurret_C", "SetTeamColorVFX");

	UObject::ProcessEvent(Func, nullptr);
}

}

#pragma pack(pop)
