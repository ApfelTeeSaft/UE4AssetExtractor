#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_BotTurret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ExecuteUbergraph_B_Prj_BotTurret
// 0x02C0 (0x02C0 - 0x0000)
struct B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_HitActors;                            // 0x0008(0x000C)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     K2Node_Event_HitResults;                           // 0x0014(0x000C)(ConstParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x002C(0x000C)()
	struct FGameplayCueParameters                 K2Node_MakeStruct_GameplayCueParameters;           // 0x0038(0x0084)()
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_Other;                                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_Hit2;                                 // 0x0140(0x0080)(ConstParm, ContainsInstancedReference)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn2;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x01C8(0x0080)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue2;                // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue2;      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret");
static_assert(sizeof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret) == 0x0002C0, "Wrong size on B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, EntryPoint) == 0x000000, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_HitActors) == 0x000008, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_HitResults) == 0x000014, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_HitResults' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_GetInstigator_ReturnValue) == 0x000020, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000024, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_MakeEffectContext_ReturnValue) == 0x00002C, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_MakeStruct_GameplayCueParameters) == 0x000038, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_MakeStruct_GameplayCueParameters' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000BC, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C8, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D4, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_MakeRotFromX_ReturnValue) == 0x0000E0, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000EC, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_GetTeamAffiliation_ReturnValue) == 0x0000F0, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_SwitchEnum_CmpSuccess) == 0x0000F1, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_OtherActor) == 0x0000F4, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x0000F8, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_DynamicCast_AsFort_Pawn) == 0x000104, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_MyComp) == 0x00010C, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_Other) == 0x000110, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_OtherComp) == 0x000114, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_bSelfMoved) == 0x000118, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_HitLocation) == 0x00011C, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_HitNormal) == 0x000128, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_NormalImpulse) == 0x000134, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_Hit2) == 0x000140, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_Hit2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_DynamicCast_AsFort_Pawn2) == 0x0001C0, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_DynamicCast_AsFort_Pawn2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_DynamicCast_bSuccess2) == 0x0001C4, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, K2Node_Event_Hit) == 0x0001C8, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_bBlockingHit) == 0x000248, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_bInitialOverlap) == 0x000249, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_Time) == 0x00024C, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_Location) == 0x000250, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_ImpactPoint) == 0x00025C, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_Normal) == 0x000268, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_ImpactNormal) == 0x000274, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_PhysMat) == 0x000280, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_HitActor) == 0x000284, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_HitComponent) == 0x000288, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_HitBoneName) == 0x00028C, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_HitItem) == 0x000294, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_TraceStart) == 0x000298, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_BreakHitResult_TraceEnd) == 0x0002A4, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_MakeRotFromX_ReturnValue2) == 0x0002B0, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_MakeRotFromX_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret, CallFunc_SpawnEmitterAtLocation_ReturnValue2) == 0x0002BC, "Member 'B_Prj_BotTurret_C_ExecuteUbergraph_B_Prj_BotTurret::CallFunc_SpawnEmitterAtLocation_ReturnValue2' has a wrong offset!");

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.OnBounce
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_BotTurret_C_OnBounce final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_BotTurret_C_OnBounce) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_OnBounce");
static_assert(sizeof(B_Prj_BotTurret_C_OnBounce) == 0x000080, "Wrong size on B_Prj_BotTurret_C_OnBounce");
static_assert(offsetof(B_Prj_BotTurret_C_OnBounce, Hit) == 0x000000, "Member 'B_Prj_BotTurret_C_OnBounce::Hit' has a wrong offset!");

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.OnExploded
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_BotTurret_C_OnExploded final
{
public:
	TArray<class AActor*>                         HitActors;                                         // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     HitResults;                                        // 0x000C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_BotTurret_C_OnExploded) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_OnExploded");
static_assert(sizeof(B_Prj_BotTurret_C_OnExploded) == 0x000018, "Wrong size on B_Prj_BotTurret_C_OnExploded");
static_assert(offsetof(B_Prj_BotTurret_C_OnExploded, HitActors) == 0x000000, "Member 'B_Prj_BotTurret_C_OnExploded::HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_OnExploded, HitResults) == 0x00000C, "Member 'B_Prj_BotTurret_C_OnExploded::HitResults' has a wrong offset!");

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ReceiveActorBeginOverlap
// 0x0004 (0x0004 - 0x0000)
struct B_Prj_BotTurret_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_BotTurret_C_ReceiveActorBeginOverlap) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_ReceiveActorBeginOverlap");
static_assert(sizeof(B_Prj_BotTurret_C_ReceiveActorBeginOverlap) == 0x000004, "Wrong size on B_Prj_BotTurret_C_ReceiveActorBeginOverlap");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'B_Prj_BotTurret_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.ReceiveHit
// 0x00B4 (0x00B4 - 0x0000)
struct B_Prj_BotTurret_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Other;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelfMoved;                                        // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                NormalImpulse;                                     // 0x0028(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             Hit;                                               // 0x0034(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_BotTurret_C_ReceiveHit) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_ReceiveHit");
static_assert(sizeof(B_Prj_BotTurret_C_ReceiveHit) == 0x0000B4, "Wrong size on B_Prj_BotTurret_C_ReceiveHit");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Prj_BotTurret_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, Other) == 0x000004, "Member 'B_Prj_BotTurret_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, OtherComp) == 0x000008, "Member 'B_Prj_BotTurret_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, bSelfMoved) == 0x00000C, "Member 'B_Prj_BotTurret_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, HitLocation) == 0x000010, "Member 'B_Prj_BotTurret_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, HitNormal) == 0x00001C, "Member 'B_Prj_BotTurret_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, NormalImpulse) == 0x000028, "Member 'B_Prj_BotTurret_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_ReceiveHit, Hit) == 0x000034, "Member 'B_Prj_BotTurret_C_ReceiveHit::Hit' has a wrong offset!");

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct B_Prj_BotTurret_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_BotTurret_C_UserConstructionScript) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_UserConstructionScript");
static_assert(sizeof(B_Prj_BotTurret_C_UserConstructionScript) == 0x000004, "Wrong size on B_Prj_BotTurret_C_UserConstructionScript");
static_assert(offsetof(B_Prj_BotTurret_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'B_Prj_BotTurret_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function B_Prj_BotTurret.B_Prj_BotTurret_C.SetTeamColorVFX
// 0x008C (0x008C - 0x0000)
struct B_Prj_BotTurret_C_SetTeamColorVFX final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue2;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue3;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue2;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue3;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue3;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue4;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue4;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue4;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue3;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue5;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue4;                 // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue5;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue5;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue5;                 // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_BotTurret_C_SetTeamColorVFX) == 0x000004, "Wrong alignment on B_Prj_BotTurret_C_SetTeamColorVFX");
static_assert(sizeof(B_Prj_BotTurret_C_SetTeamColorVFX) == 0x00008C, "Wrong size on B_Prj_BotTurret_C_SetTeamColorVFX");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_GetPlayerController_ReturnValue2) == 0x000004, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_OnSameTeam_ReturnValue) == 0x000008, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_OnSameTeam_ReturnValue2) == 0x00000A, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_OnSameTeam_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00000C, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Not_PreBool_ReturnValue2) == 0x000010, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_GetPlayerController_ReturnValue3) == 0x000014, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_GetPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Conv_BoolToFloat_ReturnValue2) == 0x000018, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Conv_BoolToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_OnSameTeam_ReturnValue3) == 0x00001C, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_OnSameTeam_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Not_PreBool_ReturnValue3) == 0x00001D, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Conv_BoolToFloat_ReturnValue3) == 0x000030, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Conv_BoolToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_GetPlayerController_ReturnValue4) == 0x000034, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_GetPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_OnSameTeam_ReturnValue4) == 0x000038, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_OnSameTeam_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Not_PreBool_ReturnValue4) == 0x000039, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Conv_BoolToFloat_ReturnValue4) == 0x00003C, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Conv_BoolToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_SelectColor_ReturnValue2) == 0x000040, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_SelectColor_ReturnValue3) == 0x000050, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_SelectColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_GetPlayerController_ReturnValue5) == 0x000060, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_GetPlayerController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_SelectColor_ReturnValue4) == 0x000064, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_SelectColor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_OnSameTeam_ReturnValue5) == 0x000074, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_OnSameTeam_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Not_PreBool_ReturnValue5) == 0x000075, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_Conv_BoolToFloat_ReturnValue5) == 0x000078, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_Conv_BoolToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Prj_BotTurret_C_SetTeamColorVFX, CallFunc_SelectColor_ReturnValue5) == 0x00007C, "Member 'B_Prj_BotTurret_C_SetTeamColorVFX::CallFunc_SelectColor_ReturnValue5' has a wrong offset!");

}

#pragma pack(pop)
