#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Commando_FragGrenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C
// 0x00DC (0x04F4 - 0x0418)
class AB_Prj_Commando_FragGrenade_C final : public AFortProj_M80
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Fuse_Particle;                                     // 0x041C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0420(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        GrenadeFuse_AudioComponent;                        // 0x0424(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               Effect_Distance;                                   // 0x0428(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Prj_Rotation_NewTrack_0_6A6D6ECD4380FB32CEB9EE9E659BA233; // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Prj_Rotation__Direction_6A6D6ECD4380FB32CEB9EE9E659BA233; // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Prj_Rotation;                                      // 0x0434(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ParticleGuide_Size;                                // 0x0438(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Material_MID;                                      // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Explosion;                                       // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                HitLocation;                                       // 0x044C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Cue_DistantSound;                                  // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Cue_CloseSound;                                    // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ExplosionRadius;                                   // 0x0460(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         NumberOfBouncesTillExplode;                        // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentNumberOfBounces;                            // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Cue_GrenadeFuseSound;                              // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BouncePawnAgainstPawnGravityScale;                 // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FHitResult                             StoredHit;                                         // 0x0474(0x0080)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, ContainsInstancedReference)

public:
	void ExecuteUbergraph_B_Prj_Commando_FragGrenade(int32 EntryPoint);
	void OnBounce(const struct FHitResult& Hit);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void Stop_Rotation();
	void OnStop(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void Prj_Rotation__UpdateFunc();
	void Prj_Rotation__FinishedFunc();
	void UserConstructionScript();
	void OnRep_StoredHit();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Commando_FragGrenade_C">();
	}
	static class AB_Prj_Commando_FragGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Commando_FragGrenade_C>();
	}
};
static_assert(alignof(AB_Prj_Commando_FragGrenade_C) == 0x000004, "Wrong alignment on AB_Prj_Commando_FragGrenade_C");
static_assert(sizeof(AB_Prj_Commando_FragGrenade_C) == 0x0004F4, "Wrong size on AB_Prj_Commando_FragGrenade_C");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, UberGraphFrame) == 0x000418, "Member 'AB_Prj_Commando_FragGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Fuse_Particle) == 0x00041C, "Member 'AB_Prj_Commando_FragGrenade_C::Fuse_Particle' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Mesh) == 0x000420, "Member 'AB_Prj_Commando_FragGrenade_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, GrenadeFuse_AudioComponent) == 0x000424, "Member 'AB_Prj_Commando_FragGrenade_C::GrenadeFuse_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Effect_Distance) == 0x000428, "Member 'AB_Prj_Commando_FragGrenade_C::Effect_Distance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Prj_Rotation_NewTrack_0_6A6D6ECD4380FB32CEB9EE9E659BA233) == 0x00042C, "Member 'AB_Prj_Commando_FragGrenade_C::Prj_Rotation_NewTrack_0_6A6D6ECD4380FB32CEB9EE9E659BA233' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Prj_Rotation__Direction_6A6D6ECD4380FB32CEB9EE9E659BA233) == 0x000430, "Member 'AB_Prj_Commando_FragGrenade_C::Prj_Rotation__Direction_6A6D6ECD4380FB32CEB9EE9E659BA233' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Prj_Rotation) == 0x000434, "Member 'AB_Prj_Commando_FragGrenade_C::Prj_Rotation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, ParticleGuide_Size) == 0x000438, "Member 'AB_Prj_Commando_FragGrenade_C::ParticleGuide_Size' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Material_MID) == 0x000444, "Member 'AB_Prj_Commando_FragGrenade_C::Material_MID' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, P_Explosion) == 0x000448, "Member 'AB_Prj_Commando_FragGrenade_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, HitLocation) == 0x00044C, "Member 'AB_Prj_Commando_FragGrenade_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Cue_DistantSound) == 0x000458, "Member 'AB_Prj_Commando_FragGrenade_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Cue_CloseSound) == 0x00045C, "Member 'AB_Prj_Commando_FragGrenade_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, ExplosionRadius) == 0x000460, "Member 'AB_Prj_Commando_FragGrenade_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, NumberOfBouncesTillExplode) == 0x000464, "Member 'AB_Prj_Commando_FragGrenade_C::NumberOfBouncesTillExplode' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, CurrentNumberOfBounces) == 0x000468, "Member 'AB_Prj_Commando_FragGrenade_C::CurrentNumberOfBounces' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, Cue_GrenadeFuseSound) == 0x00046C, "Member 'AB_Prj_Commando_FragGrenade_C::Cue_GrenadeFuseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, BouncePawnAgainstPawnGravityScale) == 0x000470, "Member 'AB_Prj_Commando_FragGrenade_C::BouncePawnAgainstPawnGravityScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_C, StoredHit) == 0x000474, "Member 'AB_Prj_Commando_FragGrenade_C::StoredHit' has a wrong offset!");

}

#pragma pack(pop)
