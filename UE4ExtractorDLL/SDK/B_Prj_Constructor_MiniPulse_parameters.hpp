#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Constructor_MiniPulse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Prj_Constructor_MiniPulse.B_Prj_Constructor_MiniPulse_C.ExecuteUbergraph_B_Prj_Constructor_MiniPulse
// 0x0180 (0x0180 - 0x0000)
struct B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_Event_HitActors;                            // 0x0004(0x000C)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     K2Node_Event_HitResults;                           // 0x0010(0x000C)(ConstParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0020(0x0080)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_Post_Explosion_Generic_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_Post_Explosion_PlasmaBomb_C*         K2Node_DynamicCast_AsB_Post_Explosion_Plasma_Bomb; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse) == 0x000010, "Wrong alignment on B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse");
static_assert(sizeof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse) == 0x000180, "Wrong size on B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, EntryPoint) == 0x000000, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_Event_HitActors) == 0x000004, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_Event_HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_Event_HitResults) == 0x000010, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_Event_HitResults' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_RandomFloatInRange_ReturnValue) == 0x00001C, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_Event_Hit) == 0x000020, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A0, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A1, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_HitActor) == 0x0000DC, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_HitBoneName) == 0x0000E4, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_HitItem) == 0x0000EC, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_DynamicCast_AsFort_Pawn) == 0x000108, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_DynamicCast_bSuccess) == 0x00010C, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_IsDedicatedServer_ReturnValue) == 0x00010D, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_GetTeamAffiliation_ReturnValue) == 0x00010E, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_SwitchEnum_CmpSuccess) == 0x00010F, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00011C, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000130, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000160, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000164, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, CallFunc_FinishSpawningActor_ReturnValue) == 0x000168, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_DynamicCast_AsB_Post_Explosion_Plasma_Bomb) == 0x00016C, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_DynamicCast_AsB_Post_Explosion_Plasma_Bomb' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse, K2Node_DynamicCast_bSuccess2) == 0x000170, "Member 'B_Prj_Constructor_MiniPulse_C_ExecuteUbergraph_B_Prj_Constructor_MiniPulse::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function B_Prj_Constructor_MiniPulse.B_Prj_Constructor_MiniPulse_C.OnExploded
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_Constructor_MiniPulse_C_OnExploded final
{
public:
	TArray<class AActor*>                         HitActors;                                         // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     HitResults;                                        // 0x000C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Constructor_MiniPulse_C_OnExploded) == 0x000004, "Wrong alignment on B_Prj_Constructor_MiniPulse_C_OnExploded");
static_assert(sizeof(B_Prj_Constructor_MiniPulse_C_OnExploded) == 0x000018, "Wrong size on B_Prj_Constructor_MiniPulse_C_OnExploded");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_OnExploded, HitActors) == 0x000000, "Member 'B_Prj_Constructor_MiniPulse_C_OnExploded::HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_OnExploded, HitResults) == 0x00000C, "Member 'B_Prj_Constructor_MiniPulse_C_OnExploded::HitResults' has a wrong offset!");

// Function B_Prj_Constructor_MiniPulse.B_Prj_Constructor_MiniPulse_C.OnBounce
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_Constructor_MiniPulse_C_OnBounce final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Constructor_MiniPulse_C_OnBounce) == 0x000004, "Wrong alignment on B_Prj_Constructor_MiniPulse_C_OnBounce");
static_assert(sizeof(B_Prj_Constructor_MiniPulse_C_OnBounce) == 0x000080, "Wrong size on B_Prj_Constructor_MiniPulse_C_OnBounce");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_OnBounce, Hit) == 0x000000, "Member 'B_Prj_Constructor_MiniPulse_C_OnBounce::Hit' has a wrong offset!");

// Function B_Prj_Constructor_MiniPulse.B_Prj_Constructor_MiniPulse_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct B_Prj_Constructor_MiniPulse_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Constructor_MiniPulse_C_UserConstructionScript) == 0x000004, "Wrong alignment on B_Prj_Constructor_MiniPulse_C_UserConstructionScript");
static_assert(sizeof(B_Prj_Constructor_MiniPulse_C_UserConstructionScript) == 0x000004, "Wrong size on B_Prj_Constructor_MiniPulse_C_UserConstructionScript");
static_assert(offsetof(B_Prj_Constructor_MiniPulse_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'B_Prj_Constructor_MiniPulse_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
