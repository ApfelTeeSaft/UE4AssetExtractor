#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Constructor_PlasmaPulse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_Prj_Constructor_PlasmaPulse.B_Prj_Constructor_PlasmaPulse_C
// 0x0044 (0x045C - 0x0418)
class AB_Prj_Constructor_PlasmaPulse_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SK_PlasmaPulse;                                    // 0x041C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        Audio1;                                            // 0x0420(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Initial_Delay;                                     // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             PlacementCue;                                      // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             ExplosionCue;                                      // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             SecondExplosionCue;                                // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Explosion;                                       // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 B_PostFX;                                          // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PostFX_BoxScale;                                   // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PostFX_UseCameraShake;                             // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Explode;                                           // 0x0441(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impact_Loc;                                        // 0x0444(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Hit_Normal;                                        // 0x0450(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_Prj_Constructor_PlasmaPulse(int32 EntryPoint);
	void BaseDestroyed();
	void AttachedObj_Died(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnBounce(const struct FHitResult& Hit);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnStop(const struct FHitResult& Hit);
	void FlashShield();
	void UserConstructionScript();
	void OnRep_Explode();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Constructor_PlasmaPulse_C">();
	}
	static class AB_Prj_Constructor_PlasmaPulse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Constructor_PlasmaPulse_C>();
	}
};
static_assert(alignof(AB_Prj_Constructor_PlasmaPulse_C) == 0x000004, "Wrong alignment on AB_Prj_Constructor_PlasmaPulse_C");
static_assert(sizeof(AB_Prj_Constructor_PlasmaPulse_C) == 0x00045C, "Wrong size on AB_Prj_Constructor_PlasmaPulse_C");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, UberGraphFrame) == 0x000418, "Member 'AB_Prj_Constructor_PlasmaPulse_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, SK_PlasmaPulse) == 0x00041C, "Member 'AB_Prj_Constructor_PlasmaPulse_C::SK_PlasmaPulse' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, Audio1) == 0x000420, "Member 'AB_Prj_Constructor_PlasmaPulse_C::Audio1' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, Initial_Delay) == 0x000424, "Member 'AB_Prj_Constructor_PlasmaPulse_C::Initial_Delay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, PlacementCue) == 0x000428, "Member 'AB_Prj_Constructor_PlasmaPulse_C::PlacementCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, ExplosionCue) == 0x00042C, "Member 'AB_Prj_Constructor_PlasmaPulse_C::ExplosionCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, SecondExplosionCue) == 0x000430, "Member 'AB_Prj_Constructor_PlasmaPulse_C::SecondExplosionCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, P_Explosion) == 0x000434, "Member 'AB_Prj_Constructor_PlasmaPulse_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, B_PostFX) == 0x000438, "Member 'AB_Prj_Constructor_PlasmaPulse_C::B_PostFX' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, PostFX_BoxScale) == 0x00043C, "Member 'AB_Prj_Constructor_PlasmaPulse_C::PostFX_BoxScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, PostFX_UseCameraShake) == 0x000440, "Member 'AB_Prj_Constructor_PlasmaPulse_C::PostFX_UseCameraShake' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, Explode) == 0x000441, "Member 'AB_Prj_Constructor_PlasmaPulse_C::Explode' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, Impact_Loc) == 0x000444, "Member 'AB_Prj_Constructor_PlasmaPulse_C::Impact_Loc' has a wrong offset!");
static_assert(offsetof(AB_Prj_Constructor_PlasmaPulse_C, Hit_Normal) == 0x000450, "Member 'AB_Prj_Constructor_PlasmaPulse_C::Hit_Normal' has a wrong offset!");

}

#pragma pack(pop)
