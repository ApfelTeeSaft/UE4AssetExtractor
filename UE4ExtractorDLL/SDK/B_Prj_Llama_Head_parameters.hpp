#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Llama_Head

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Prj_Llama_Head.B_Prj_Llama_Head_C.ExecuteUbergraph_B_Prj_Llama_Head
// 0x0290 (0x0290 - 0x0000)
struct B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FHitResult& ImpactResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0014(0x0080)(ConstParm, ContainsInstancedReference)
	struct FHitResult                             CallFunc_SpawnBounceFX_HitResult;                  // 0x0094(0x0080)(ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_SpawnBounceFX_SurfaceType;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SpawnBounceFX_HitResultRotation;          // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_CustomEvent_ImpactResult;                   // 0x0130(0x0080)(ConstParm, ContainsInstancedReference)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x01E0(0x0080)(ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue2;          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AProp_Explorer_OutlanderFragment_Llama_C* K2Node_DynamicCast_AsProp_Explorer_Outlander_Fragment_Llama; // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head) == 0x000004, "Wrong alignment on B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head");
static_assert(sizeof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head) == 0x000290, "Wrong size on B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, EntryPoint) == 0x000000, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, K2Node_Event_Hit) == 0x000014, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnBounceFX_HitResult) == 0x000094, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnBounceFX_HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnBounceFX_SurfaceType) == 0x000114, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnBounceFX_SurfaceType' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnBounceFX_HitResultRotation) == 0x000118, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnBounceFX_HitResultRotation' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000124, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000128, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, K2Node_Event_DeltaSeconds) == 0x00012C, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, K2Node_CustomEvent_ImpactResult) == 0x000130, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::K2Node_CustomEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001B0, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_BreakRotator_Roll) == 0x0001B4, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_BreakRotator_Pitch) == 0x0001B8, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_BreakRotator_Yaw) == 0x0001BC, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, Temp_bool_Has_Been_Initd_Variable) == 0x0001C0, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, Temp_bool_IsClosed_Variable) == 0x0001C1, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001C4, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_MakeRotator_ReturnValue) == 0x0001C8, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x0001D4, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x0001E0, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000260, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_GetSocketRotation_ReturnValue) == 0x00026C, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000278, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_SpawnSoundAttached_ReturnValue2) == 0x00027C, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_SpawnSoundAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_BooleanAND_ReturnValue) == 0x000280, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, CallFunc_GetOwner_ReturnValue) == 0x000284, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, K2Node_DynamicCast_AsProp_Explorer_Outlander_Fragment_Llama) == 0x000288, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::K2Node_DynamicCast_AsProp_Explorer_Outlander_Fragment_Llama' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head, K2Node_DynamicCast_bSuccess) == 0x00028C, "Member 'B_Prj_Llama_Head_C_ExecuteUbergraph_B_Prj_Llama_Head::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_Prj_Llama_Head.B_Prj_Llama_Head_C.OnProjectileStop_Event_0
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_Llama_Head_C_OnProjectileStop_Event_0 final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Llama_Head_C_OnProjectileStop_Event_0) == 0x000004, "Wrong alignment on B_Prj_Llama_Head_C_OnProjectileStop_Event_0");
static_assert(sizeof(B_Prj_Llama_Head_C_OnProjectileStop_Event_0) == 0x000080, "Wrong size on B_Prj_Llama_Head_C_OnProjectileStop_Event_0");
static_assert(offsetof(B_Prj_Llama_Head_C_OnProjectileStop_Event_0, ImpactResult) == 0x000000, "Member 'B_Prj_Llama_Head_C_OnProjectileStop_Event_0::ImpactResult' has a wrong offset!");

// Function B_Prj_Llama_Head.B_Prj_Llama_Head_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_Prj_Llama_Head_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Llama_Head_C_ReceiveTick) == 0x000004, "Wrong alignment on B_Prj_Llama_Head_C_ReceiveTick");
static_assert(sizeof(B_Prj_Llama_Head_C_ReceiveTick) == 0x000004, "Wrong size on B_Prj_Llama_Head_C_ReceiveTick");
static_assert(offsetof(B_Prj_Llama_Head_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_Prj_Llama_Head_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_Prj_Llama_Head.B_Prj_Llama_Head_C.OnBounce
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_Llama_Head_C_OnBounce final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Llama_Head_C_OnBounce) == 0x000004, "Wrong alignment on B_Prj_Llama_Head_C_OnBounce");
static_assert(sizeof(B_Prj_Llama_Head_C_OnBounce) == 0x000080, "Wrong size on B_Prj_Llama_Head_C_OnBounce");
static_assert(offsetof(B_Prj_Llama_Head_C_OnBounce, Hit) == 0x000000, "Member 'B_Prj_Llama_Head_C_OnBounce::Hit' has a wrong offset!");

// Function B_Prj_Llama_Head.B_Prj_Llama_Head_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct B_Prj_Llama_Head_C_UserConstructionScript final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue2;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Llama_Head_C_UserConstructionScript) == 0x000010, "Wrong alignment on B_Prj_Llama_Head_C_UserConstructionScript");
static_assert(sizeof(B_Prj_Llama_Head_C_UserConstructionScript) == 0x000070, "Wrong size on B_Prj_Llama_Head_C_UserConstructionScript");
static_assert(offsetof(B_Prj_Llama_Head_C_UserConstructionScript, Temp_struct_Variable) == 0x000000, "Member 'B_Prj_Llama_Head_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'B_Prj_Llama_Head_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'B_Prj_Llama_Head_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue2) == 0x000064, "Member 'B_Prj_Llama_Head_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'B_Prj_Llama_Head_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function B_Prj_Llama_Head.B_Prj_Llama_Head_C.SpawnBounceFX
// 0x0194 (0x0194 - 0x0000)
struct B_Prj_Llama_Head_C_SpawnBounceFX final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FHitResult                             HitResult;                                         // 0x0080(0x0080)(Parm, OutParm, ContainsInstancedReference)
	EPhysicalSurface                              SurfaceType;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HitResultRotation;                                 // 0x0104(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetFortPhysicalSurface_ReturnValue;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue2;      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Llama_Head_C_SpawnBounceFX) == 0x000004, "Wrong alignment on B_Prj_Llama_Head_C_SpawnBounceFX");
static_assert(sizeof(B_Prj_Llama_Head_C_SpawnBounceFX) == 0x000194, "Wrong size on B_Prj_Llama_Head_C_SpawnBounceFX");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, Hit) == 0x000000, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, HitResult) == 0x000080, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, SurfaceType) == 0x000100, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::SurfaceType' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, HitResultRotation) == 0x000104, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::HitResultRotation' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000124, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_ImpactNormal) == 0x00013C, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_HitActor) == 0x00014C, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_HitComponent) == 0x000150, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_HitBoneName) == 0x000154, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_HitItem) == 0x00015C, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_GetFortPhysicalSurface_ReturnValue) == 0x000178, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_GetFortPhysicalSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, K2Node_SwitchEnum_CmpSuccess) == 0x000179, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00017C, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000188, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x00018C, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Llama_Head_C_SpawnBounceFX, CallFunc_SpawnEmitterAtLocation_ReturnValue2) == 0x000190, "Member 'B_Prj_Llama_Head_C_SpawnBounceFX::CallFunc_SpawnEmitterAtLocation_ReturnValue2' has a wrong offset!");

}

#pragma pack(pop)
