#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Rift_Portals

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Rift_Portals.B_Rift_Portals_C.ExecuteUbergraph_B_Rift_Portals
// 0x007C (0x007C - 0x0000)
struct B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X2;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals) == 0x000004, "Wrong alignment on B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals");
static_assert(sizeof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals) == 0x00007C, "Wrong size on B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, EntryPoint) == 0x000000, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, K2Node_Event_EndPlayReason) == 0x000004, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_BreakVector_X) == 0x000014, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_BreakVector_Y) == 0x000018, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_BreakVector_Z) == 0x00001C, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000030, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_BreakVector_X2) == 0x000040, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_BreakVector_Y2) == 0x000044, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_BreakVector_Z2) == 0x000048, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00004C, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_MakeVector_ReturnValue2) == 0x000050, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x00005C, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_RandomFloatInRange_ReturnValue) == 0x000060, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_IsValid_ReturnValue2) == 0x000064, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_MakeVector_ReturnValue3) == 0x000068, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000074, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000078, "Member 'B_Rift_Portals_C_ExecuteUbergraph_B_Rift_Portals::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function B_Rift_Portals.B_Rift_Portals_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_Rift_Portals_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Rift_Portals_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_Rift_Portals_C_ReceiveEndPlay");
static_assert(sizeof(B_Rift_Portals_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_Rift_Portals_C_ReceiveEndPlay");
static_assert(offsetof(B_Rift_Portals_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_Rift_Portals_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

#pragma pack(pop)
