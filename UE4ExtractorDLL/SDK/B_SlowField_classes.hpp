#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SlowField

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass B_SlowField.B_SlowField_C
// 0x0190 (0x0618 - 0x0488)
class AB_SlowField_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0488(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Slowfield_Beacon_01;                             // 0x048C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        WarmUp_Warrning_AudioComponent;                    // 0x0490(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_Slowfield_ActivateRays_01;                       // 0x0494(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UPostProcessComponent*                  SlowPostProcess;                                   // 0x0498(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        SlowFieldAudioComponent;                           // 0x049C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SlowFieldOverlapCylinder;                          // 0x04A0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 SlowFieldGeneratorMesh;                            // 0x04A4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UBoxComponent*                          ProjCollision;                                     // 0x04A8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UProjectileMovementComponent*           ProjMovementComp;                                  // 0x04AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Audio_Powerdown_PitchCurve_C8D7334746A8A7EB557C1CBA73016E49; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Audio_Powerdown__Direction_C8D7334746A8A7EB557C1CBA73016E49; // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Audio_Powerdown;                                   // 0x04B8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeCylinder_OffsetOnZ_A2EB343B46944EB7215B3BB14FDAA3D5; // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeCylinder_Fresnel_A2EB343B46944EB7215B3BB14FDAA3D5; // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeCylinder_ActivateLERP_A2EB343B46944EB7215B3BB14FDAA3D5; // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeCylinder_Materialize_A2EB343B46944EB7215B3BB14FDAA3D5; // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            MaterializeCylinder__Direction_A2EB343B46944EB7215B3BB14FDAA3D5; // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MaterializeCylinder;                               // 0x04D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         SlowPP_PP_Weight_5E23169C446B32FE34B254B7E75DB7B4; // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            SlowPP__Direction_5E23169C446B32FE34B254B7E75DB7B4; // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SlowPP;                                            // 0x04DC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        DeathEffects;                                      // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDeployed;                                        // 0x04E4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             DeploymentSound;                                   // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             DeactivateSound;                                   // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 InsideSlowFieldGE;                                 // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 SlowGE;                                            // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ProjectileSpeedMultiplier;                         // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           SlowTag;                                           // 0x04FC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Radius;                                            // 0x0504(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	float                                         Height;                                            // 0x0508(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          AffectsTeammates;                                  // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SlowFieldOverlapMID;                               // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         HeightOffsetZ;                                     // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Activation_Delay;                                  // 0x0518(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	float                                         Refraction_Strength_Active;                        // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Emissive_Boost_Active;                             // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Fresnel_Opacity_Active;                            // 0x0524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Fresnel_Opacity_Inactive;                          // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Fresnel_Exponent_Active;                           // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Rays_Activate_Size_Y;                              // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Rays_Activate_Size_Z;                              // 0x0534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Transition_In__seconds_;                           // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InWarmup;                                          // 0x053C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Beacon_Final_Speed;                                // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Beacon_Start_Speed;                                // 0x0544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Beacon_Speedup_Play_Speed;                         // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Beacon_Speedup_Play_Speed_Chip_OffTime;            // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Beacon_Can_Play_;                                  // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Activate_Rays_Color__Friendly_;                    // 0x0554(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Activate_Rays_Color__Enemy_;                       // 0x0564(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Activate_Rays_Core_Color__Friendly_;               // 0x0574(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Activate_Rays_Core_Color__Enemy_;                  // 0x0584(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Beacon_Core_Color__Friendly_;                      // 0x0594(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Beacon_Core_Color__Enemy_;                         // 0x05A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Beacon_Streak_Color__Friendly_;                    // 0x05B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Beacon_Streak_Color__Enemy_;                       // 0x05C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Slowfield_Inner_Color__Friendly_;                  // 0x05D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Slowfield_Inner_Color__Enemy_;                     // 0x05E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Slowfield_PP_Color__Friendly_;                     // 0x05F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Slowfield_PP_Color__Enemy_;                        // 0x0604(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LocalPostProcessOn;                                // 0x0614(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_SlowField(int32 EntryPoint);
	void OnLocalPlayerDeath(class AActor* DeadActor, float Damage, class AFortPawn* InstigatedBy, const struct FVector& HitLocation, class AActor* DamageCauser);
	void BndEvt__ProjMovementComp_K2Node_ComponentBoundEvent_228_OnProjectileBounceDelegate__DelegateSignature(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void Beacon_Loop();
	void PassInfo(float Height_0, float Radius_0, float Activation_Delay_0);
	void PP_Deactivate();
	void PP_Activate();
	void BndEvt__SlowFieldOverlapCylinder_K2Node_ComponentBoundEvent_242_ComponentEndOverlapSignature__DelegateSignature(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__SlowFieldOverlapCylinder_K2Node_ComponentBoundEvent_233_ComponentBeginOverlapSignature__DelegateSignature(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void MaterializeCylinder__UpdateFunc();
	void MaterializeCylinder__FinishedFunc();
	void Audio_Powerdown__UpdateFunc();
	void Audio_Powerdown__FinishedFunc();
	void SlowPP__UpdateFunc();
	void SlowPP__FinishedFunc();
	void UserConstructionScript();
	void OnRep_IsDeployed();
	void SetTeamColorsVFX();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SlowField_C">();
	}
	static class AB_SlowField_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SlowField_C>();
	}
};
static_assert(alignof(AB_SlowField_C) == 0x000004, "Wrong alignment on AB_SlowField_C");
static_assert(sizeof(AB_SlowField_C) == 0x000618, "Wrong size on AB_SlowField_C");
static_assert(offsetof(AB_SlowField_C, UberGraphFrame) == 0x000488, "Member 'AB_SlowField_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, P_Slowfield_Beacon_01) == 0x00048C, "Member 'AB_SlowField_C::P_Slowfield_Beacon_01' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, WarmUp_Warrning_AudioComponent) == 0x000490, "Member 'AB_SlowField_C::WarmUp_Warrning_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, P_Slowfield_ActivateRays_01) == 0x000494, "Member 'AB_SlowField_C::P_Slowfield_ActivateRays_01' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowPostProcess) == 0x000498, "Member 'AB_SlowField_C::SlowPostProcess' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowFieldAudioComponent) == 0x00049C, "Member 'AB_SlowField_C::SlowFieldAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowFieldOverlapCylinder) == 0x0004A0, "Member 'AB_SlowField_C::SlowFieldOverlapCylinder' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowFieldGeneratorMesh) == 0x0004A4, "Member 'AB_SlowField_C::SlowFieldGeneratorMesh' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, ProjCollision) == 0x0004A8, "Member 'AB_SlowField_C::ProjCollision' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, ProjMovementComp) == 0x0004AC, "Member 'AB_SlowField_C::ProjMovementComp' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Audio_Powerdown_PitchCurve_C8D7334746A8A7EB557C1CBA73016E49) == 0x0004B0, "Member 'AB_SlowField_C::Audio_Powerdown_PitchCurve_C8D7334746A8A7EB557C1CBA73016E49' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Audio_Powerdown__Direction_C8D7334746A8A7EB557C1CBA73016E49) == 0x0004B4, "Member 'AB_SlowField_C::Audio_Powerdown__Direction_C8D7334746A8A7EB557C1CBA73016E49' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Audio_Powerdown) == 0x0004B8, "Member 'AB_SlowField_C::Audio_Powerdown' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, MaterializeCylinder_OffsetOnZ_A2EB343B46944EB7215B3BB14FDAA3D5) == 0x0004BC, "Member 'AB_SlowField_C::MaterializeCylinder_OffsetOnZ_A2EB343B46944EB7215B3BB14FDAA3D5' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, MaterializeCylinder_Fresnel_A2EB343B46944EB7215B3BB14FDAA3D5) == 0x0004C0, "Member 'AB_SlowField_C::MaterializeCylinder_Fresnel_A2EB343B46944EB7215B3BB14FDAA3D5' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, MaterializeCylinder_ActivateLERP_A2EB343B46944EB7215B3BB14FDAA3D5) == 0x0004C4, "Member 'AB_SlowField_C::MaterializeCylinder_ActivateLERP_A2EB343B46944EB7215B3BB14FDAA3D5' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, MaterializeCylinder_Materialize_A2EB343B46944EB7215B3BB14FDAA3D5) == 0x0004C8, "Member 'AB_SlowField_C::MaterializeCylinder_Materialize_A2EB343B46944EB7215B3BB14FDAA3D5' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, MaterializeCylinder__Direction_A2EB343B46944EB7215B3BB14FDAA3D5) == 0x0004CC, "Member 'AB_SlowField_C::MaterializeCylinder__Direction_A2EB343B46944EB7215B3BB14FDAA3D5' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, MaterializeCylinder) == 0x0004D0, "Member 'AB_SlowField_C::MaterializeCylinder' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowPP_PP_Weight_5E23169C446B32FE34B254B7E75DB7B4) == 0x0004D4, "Member 'AB_SlowField_C::SlowPP_PP_Weight_5E23169C446B32FE34B254B7E75DB7B4' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowPP__Direction_5E23169C446B32FE34B254B7E75DB7B4) == 0x0004D8, "Member 'AB_SlowField_C::SlowPP__Direction_5E23169C446B32FE34B254B7E75DB7B4' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowPP) == 0x0004DC, "Member 'AB_SlowField_C::SlowPP' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, DeathEffects) == 0x0004E0, "Member 'AB_SlowField_C::DeathEffects' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, IsDeployed) == 0x0004E4, "Member 'AB_SlowField_C::IsDeployed' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, DeploymentSound) == 0x0004E8, "Member 'AB_SlowField_C::DeploymentSound' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, DeactivateSound) == 0x0004EC, "Member 'AB_SlowField_C::DeactivateSound' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, InsideSlowFieldGE) == 0x0004F0, "Member 'AB_SlowField_C::InsideSlowFieldGE' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowGE) == 0x0004F4, "Member 'AB_SlowField_C::SlowGE' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, ProjectileSpeedMultiplier) == 0x0004F8, "Member 'AB_SlowField_C::ProjectileSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowTag) == 0x0004FC, "Member 'AB_SlowField_C::SlowTag' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Radius) == 0x000504, "Member 'AB_SlowField_C::Radius' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Height) == 0x000508, "Member 'AB_SlowField_C::Height' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, AffectsTeammates) == 0x00050C, "Member 'AB_SlowField_C::AffectsTeammates' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, SlowFieldOverlapMID) == 0x000510, "Member 'AB_SlowField_C::SlowFieldOverlapMID' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, HeightOffsetZ) == 0x000514, "Member 'AB_SlowField_C::HeightOffsetZ' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Activation_Delay) == 0x000518, "Member 'AB_SlowField_C::Activation_Delay' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Refraction_Strength_Active) == 0x00051C, "Member 'AB_SlowField_C::Refraction_Strength_Active' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Emissive_Boost_Active) == 0x000520, "Member 'AB_SlowField_C::Emissive_Boost_Active' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Fresnel_Opacity_Active) == 0x000524, "Member 'AB_SlowField_C::Fresnel_Opacity_Active' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Fresnel_Opacity_Inactive) == 0x000528, "Member 'AB_SlowField_C::Fresnel_Opacity_Inactive' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Fresnel_Exponent_Active) == 0x00052C, "Member 'AB_SlowField_C::Fresnel_Exponent_Active' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Rays_Activate_Size_Y) == 0x000530, "Member 'AB_SlowField_C::Rays_Activate_Size_Y' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Rays_Activate_Size_Z) == 0x000534, "Member 'AB_SlowField_C::Rays_Activate_Size_Z' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Transition_In__seconds_) == 0x000538, "Member 'AB_SlowField_C::Transition_In__seconds_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, InWarmup) == 0x00053C, "Member 'AB_SlowField_C::InWarmup' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Final_Speed) == 0x000540, "Member 'AB_SlowField_C::Beacon_Final_Speed' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Start_Speed) == 0x000544, "Member 'AB_SlowField_C::Beacon_Start_Speed' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Speedup_Play_Speed) == 0x000548, "Member 'AB_SlowField_C::Beacon_Speedup_Play_Speed' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Speedup_Play_Speed_Chip_OffTime) == 0x00054C, "Member 'AB_SlowField_C::Beacon_Speedup_Play_Speed_Chip_OffTime' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Can_Play_) == 0x000550, "Member 'AB_SlowField_C::Beacon_Can_Play_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Activate_Rays_Color__Friendly_) == 0x000554, "Member 'AB_SlowField_C::Activate_Rays_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Activate_Rays_Color__Enemy_) == 0x000564, "Member 'AB_SlowField_C::Activate_Rays_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Activate_Rays_Core_Color__Friendly_) == 0x000574, "Member 'AB_SlowField_C::Activate_Rays_Core_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Activate_Rays_Core_Color__Enemy_) == 0x000584, "Member 'AB_SlowField_C::Activate_Rays_Core_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Core_Color__Friendly_) == 0x000594, "Member 'AB_SlowField_C::Beacon_Core_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Core_Color__Enemy_) == 0x0005A4, "Member 'AB_SlowField_C::Beacon_Core_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Streak_Color__Friendly_) == 0x0005B4, "Member 'AB_SlowField_C::Beacon_Streak_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Beacon_Streak_Color__Enemy_) == 0x0005C4, "Member 'AB_SlowField_C::Beacon_Streak_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Slowfield_Inner_Color__Friendly_) == 0x0005D4, "Member 'AB_SlowField_C::Slowfield_Inner_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Slowfield_Inner_Color__Enemy_) == 0x0005E4, "Member 'AB_SlowField_C::Slowfield_Inner_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Slowfield_PP_Color__Friendly_) == 0x0005F4, "Member 'AB_SlowField_C::Slowfield_PP_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, Slowfield_PP_Color__Enemy_) == 0x000604, "Member 'AB_SlowField_C::Slowfield_PP_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_SlowField_C, LocalPostProcessOn) == 0x000614, "Member 'AB_SlowField_C::LocalPostProcessOn' has a wrong offset!");

}

#pragma pack(pop)
