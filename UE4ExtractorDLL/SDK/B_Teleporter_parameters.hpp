#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Teleporter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function B_Teleporter.B_Teleporter_C.ExecuteUbergraph_B_Teleporter
// 0x04BC (0x04BC - 0x0000)
struct B_Teleporter_C_ExecuteUbergraph_B_Teleporter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue2;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue3;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue3;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue3;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0054(0x0004)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue4;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue4;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue4;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate2;             // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue3;                 // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue4;                 // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue2;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue3;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0100(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0114(0x0080)(ConstParm, ContainsInstancedReference)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PickUpActor_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage2;                              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags2;                          // 0x01A8(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum2;                            // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo2;                             // 0x01CC(0x0080)(ConstParm, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy2;                        // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser2;                        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext2;                       // 0x0254(0x000C)()
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue5;         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue4;                        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue5;                  // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue5;            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue5;                 // 0x0294(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue6;         // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue6;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue6;            // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue6;                 // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue2;       // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimelineLength_ReturnValue2;           // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue7;         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue7;                  // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue7;                 // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue7;            // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x034C(0x0080)(ContainsInstancedReference)
	float                                         CallFunc_Lerp_ReturnValue5;                        // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage;                               // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x03D8(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x03FC(0x0080)(ConstParm, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0484(0x000C)()
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue8;         // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_TeleportedActor;                // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue8;                  // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn2;                        // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x04A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A7[0x1];                                      // 0x04A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue8;            // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue8;                 // 0x04AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter) == 0x000004, "Wrong alignment on B_Teleporter_C_ExecuteUbergraph_B_Teleporter");
static_assert(sizeof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter) == 0x0004BC, "Wrong size on B_Teleporter_C_ExecuteUbergraph_B_Teleporter");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, EntryPoint) == 0x000000, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue) == 0x000004, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue) == 0x000008, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue2) == 0x00000C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000014, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue2) == 0x000018, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue3) == 0x00001C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue2) == 0x000020, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue2) == 0x000024, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue3) == 0x000028, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue3) == 0x000029, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue3) == 0x00002C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000034, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_HasAuthority_ReturnValue2) == 0x000040, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000054, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, Temp_int_Array_Index_Variable) == 0x000060, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue4) == 0x000064, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue4) == 0x000068, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue4) == 0x000069, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue4) == 0x00006C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsDedicatedServer_ReturnValue) == 0x000070, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Lerp_ReturnValue) == 0x000074, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000078, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CreateDelegate_OutputDelegate2) == 0x00007C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue) == 0x00008C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue2) == 0x00009C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue3) == 0x0000AC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue4) == 0x0000BC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000CC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsDedicatedServer_ReturnValue3) == 0x0000DC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_FCeil_ReturnValue) == 0x0000E4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Divide_IntInt_ReturnValue) == 0x0000E8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000EC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsDedicatedServer_ReturnValue4) == 0x0000F0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Lerp_ReturnValue2) == 0x0000F8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Lerp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Lerp_ReturnValue3) == 0x0000FC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Lerp_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_InteractingPawn) == 0x000100, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CustomEvent_OtherActor) == 0x000104, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CustomEvent_OtherComp) == 0x000108, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CustomEvent_OtherBodyIndex) == 0x00010C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CustomEvent_bFromSweep) == 0x000110, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CustomEvent_SweepResult) == 0x000114, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000194, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_DynamicCast_AsPawn) == 0x000198, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_DynamicCast_bSuccess) == 0x00019C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00019D, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x00019E, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_BooleanOR_ReturnValue) == 0x00019F, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_PickUpActor_ReturnValue) == 0x0001A0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_PickUpActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_Damage2) == 0x0001A4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_Damage2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_DamageTags2) == 0x0001A8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_DamageTags2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_Momentum2) == 0x0001C0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_Momentum2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_HitInfo2) == 0x0001CC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_HitInfo2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_InstigatedBy2) == 0x00024C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_InstigatedBy2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_DamageCauser2) == 0x000250, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_DamageCauser2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_EffectContext2) == 0x000254, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_EffectContext2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000260, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Array_Add_ReturnValue) == 0x000264, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetAttachParent_ReturnValue) == 0x000268, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsValid_ReturnValue) == 0x00026C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetOwner_ReturnValue) == 0x000270, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsValid_ReturnValue2) == 0x000274, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Array_Get_Item) == 0x000278, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Array_Length_ReturnValue) == 0x00027C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Less_IntInt_ReturnValue) == 0x000280, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue5) == 0x000284, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Lerp_ReturnValue4) == 0x000288, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Lerp_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue5) == 0x00028C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue5) == 0x00028D, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue5) == 0x000290, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue5) == 0x000294, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue6) == 0x0002A4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue6) == 0x0002A8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue6) == 0x0002A9, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue6) == 0x0002AC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue6) == 0x0002B0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002C0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Multiply_VectorVector_ReturnValue2) == 0x0002CC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Multiply_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetTimelineLength_ReturnValue) == 0x0002D8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002DC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x0002E0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetTimelineLength_ReturnValue2) == 0x0002E4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetTimelineLength_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue7) == 0x0002E8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue7) == 0x0002EC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue7) == 0x0002ED, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue7) == 0x0002F0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue7) == 0x000300, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000304, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000310, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00031C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_BreakRotator_Roll) == 0x000328, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_BreakRotator_Pitch) == 0x00032C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_BreakRotator_Yaw) == 0x000330, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_MakeRotator_ReturnValue) == 0x000334, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_RLerp_ReturnValue) == 0x000340, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00034C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Lerp_ReturnValue5) == 0x0003CC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Lerp_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0003D0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_Damage) == 0x0003D4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_DamageTags) == 0x0003D8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_Momentum) == 0x0003F0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_HitInfo) == 0x0003FC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_InstigatedBy) == 0x00047C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_DamageCauser) == 0x000480, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_Event_EffectContext) == 0x000484, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsValid_ReturnValue3) == 0x000490, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_GetPlayerController_ReturnValue8) == 0x000494, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_GetPlayerController_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_CustomEvent_TeleportedActor) == 0x000498, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_CustomEvent_TeleportedActor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_OnSameTeam_ReturnValue8) == 0x00049C, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_OnSameTeam_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_DynamicCast_AsPawn2) == 0x0004A0, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_DynamicCast_AsPawn2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, K2Node_DynamicCast_bSuccess2) == 0x0004A4, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Not_PreBool_ReturnValue8) == 0x0004A5, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_IsLocallyControlled_ReturnValue) == 0x0004A6, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_Conv_BoolToFloat_ReturnValue8) == 0x0004A8, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_Conv_BoolToFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_ExecuteUbergraph_B_Teleporter, CallFunc_SelectColor_ReturnValue8) == 0x0004AC, "Member 'B_Teleporter_C_ExecuteUbergraph_B_Teleporter::CallFunc_SelectColor_ReturnValue8' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.ClientActorsTeleported
// 0x0004 (0x0004 - 0x0000)
struct B_Teleporter_C_ClientActorsTeleported final
{
public:
	class AActor*                                 TeleportedActor;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_ClientActorsTeleported) == 0x000004, "Wrong alignment on B_Teleporter_C_ClientActorsTeleported");
static_assert(sizeof(B_Teleporter_C_ClientActorsTeleported) == 0x000004, "Wrong size on B_Teleporter_C_ClientActorsTeleported");
static_assert(offsetof(B_Teleporter_C_ClientActorsTeleported, TeleportedActor) == 0x000000, "Member 'B_Teleporter_C_ClientActorsTeleported::TeleportedActor' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnDeathPlayEffects
// 0x00BC (0x00BC - 0x0000)
struct B_Teleporter_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(B_Teleporter_C_OnDeathPlayEffects) == 0x000004, "Wrong alignment on B_Teleporter_C_OnDeathPlayEffects");
static_assert(sizeof(B_Teleporter_C_OnDeathPlayEffects) == 0x0000BC, "Wrong size on B_Teleporter_C_OnDeathPlayEffects");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'B_Teleporter_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, DamageTags) == 0x000004, "Member 'B_Teleporter_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, Momentum) == 0x00001C, "Member 'B_Teleporter_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, HitInfo) == 0x000028, "Member 'B_Teleporter_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, InstigatedBy) == 0x0000A8, "Member 'B_Teleporter_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, DamageCauser) == 0x0000AC, "Member 'B_Teleporter_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathPlayEffects, EffectContext) == 0x0000B0, "Member 'B_Teleporter_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnDeathServer
// 0x00BC (0x00BC - 0x0000)
struct B_Teleporter_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(B_Teleporter_C_OnDeathServer) == 0x000004, "Wrong alignment on B_Teleporter_C_OnDeathServer");
static_assert(sizeof(B_Teleporter_C_OnDeathServer) == 0x0000BC, "Wrong size on B_Teleporter_C_OnDeathServer");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, Damage) == 0x000000, "Member 'B_Teleporter_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, DamageTags) == 0x000004, "Member 'B_Teleporter_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, Momentum) == 0x00001C, "Member 'B_Teleporter_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, HitInfo) == 0x000028, "Member 'B_Teleporter_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, InstigatedBy) == 0x0000A8, "Member 'B_Teleporter_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, DamageCauser) == 0x0000AC, "Member 'B_Teleporter_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnDeathServer, EffectContext) == 0x0000B0, "Member 'B_Teleporter_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnComponentBeginOverlap_Event_0
// 0x0090 (0x0090 - 0x0000)
struct B_Teleporter_C_OnComponentBeginOverlap_Event_0 final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         OtherBodyIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromSweep;                                        // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0010(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Teleporter_C_OnComponentBeginOverlap_Event_0) == 0x000004, "Wrong alignment on B_Teleporter_C_OnComponentBeginOverlap_Event_0");
static_assert(sizeof(B_Teleporter_C_OnComponentBeginOverlap_Event_0) == 0x000090, "Wrong size on B_Teleporter_C_OnComponentBeginOverlap_Event_0");
static_assert(offsetof(B_Teleporter_C_OnComponentBeginOverlap_Event_0, OtherActor) == 0x000000, "Member 'B_Teleporter_C_OnComponentBeginOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnComponentBeginOverlap_Event_0, OtherComp) == 0x000004, "Member 'B_Teleporter_C_OnComponentBeginOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnComponentBeginOverlap_Event_0, OtherBodyIndex) == 0x000008, "Member 'B_Teleporter_C_OnComponentBeginOverlap_Event_0::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnComponentBeginOverlap_Event_0, bFromSweep) == 0x00000C, "Member 'B_Teleporter_C_OnComponentBeginOverlap_Event_0::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnComponentBeginOverlap_Event_0, SweepResult) == 0x000010, "Member 'B_Teleporter_C_OnComponentBeginOverlap_Event_0::SweepResult' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.BlueprintOnInteract
// 0x0004 (0x0004 - 0x0000)
struct B_Teleporter_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_BlueprintOnInteract) == 0x000004, "Wrong alignment on B_Teleporter_C_BlueprintOnInteract");
static_assert(sizeof(B_Teleporter_C_BlueprintOnInteract) == 0x000004, "Wrong size on B_Teleporter_C_BlueprintOnInteract");
static_assert(offsetof(B_Teleporter_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'B_Teleporter_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.UserConstructionScript
// 0x0024 (0x0024 - 0x0000)
struct B_Teleporter_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue2; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue3; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue4; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue5; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue6; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_UserConstructionScript) == 0x000004, "Wrong alignment on B_Teleporter_C_UserConstructionScript");
static_assert(sizeof(B_Teleporter_C_UserConstructionScript) == 0x000024, "Wrong size on B_Teleporter_C_UserConstructionScript");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue2) == 0x000004, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000008, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue3) == 0x000014, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue4) == 0x000018, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue5) == 0x00001C, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue6) == 0x000020, "Member 'B_Teleporter_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue6' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.SetTargetTeleporter
// 0x0004 (0x0004 - 0x0000)
struct B_Teleporter_C_SetTargetTeleporter final
{
public:
	class AB_Teleporter_C*                        NewTarget;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_SetTargetTeleporter) == 0x000004, "Wrong alignment on B_Teleporter_C_SetTargetTeleporter");
static_assert(sizeof(B_Teleporter_C_SetTargetTeleporter) == 0x000004, "Wrong size on B_Teleporter_C_SetTargetTeleporter");
static_assert(offsetof(B_Teleporter_C_SetTargetTeleporter, NewTarget) == 0x000000, "Member 'B_Teleporter_C_SetTargetTeleporter::NewTarget' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.TeleportToTarget
// 0x00FC (0x00FC - 0x0000)
struct B_Teleporter_C_TeleportToTarget final
{
public:
	class AActor*                                 ActorToTeleport;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue2;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UMovementComponent*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValidActorToTeleport_ValidActor;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovementComponent*                     CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TeleportingActor;                                  // 0x00F8(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_TeleportToTarget) == 0x000004, "Wrong alignment on B_Teleporter_C_TeleportToTarget");
static_assert(sizeof(B_Teleporter_C_TeleportToTarget) == 0x0000FC, "Wrong size on B_Teleporter_C_TeleportToTarget");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, ActorToTeleport) == 0x000000, "Member 'B_Teleporter_C_TeleportToTarget::ActorToTeleport' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_Teleporter_C_TeleportToTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_K2_GetActorRotation_ReturnValue2) == 0x000014, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_K2_GetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_GetComponentsByClass_ReturnValue) == 0x00002C, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_IsValidActorToTeleport_ValidActor) == 0x000038, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_IsValidActorToTeleport_ValidActor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Array_Get_Item) == 0x00003C, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000044, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakRotator_Roll2) == 0x000054, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakRotator_Pitch2) == 0x000058, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakRotator_Yaw2) == 0x00005C, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000070, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Add_IntInt_ReturnValue2) == 0x000088, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000098, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakVector_X) == 0x0000A4, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakVector_X2) == 0x0000B0, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakVector_Y2) == 0x0000B4, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_BreakVector_Z2) == 0x0000B8, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x0000C0, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_FMax_ReturnValue) == 0x0000CC, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'B_Teleporter_C_TeleportToTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_MakeVector_ReturnValue) == 0x0000D4, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_K2_TeleportTo_ReturnValue) == 0x0000ED, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_Add_IntInt_ReturnValue3) == 0x0000F0, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'B_Teleporter_C_TeleportToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_TeleportToTarget, TeleportingActor) == 0x0000F8, "Member 'B_Teleporter_C_TeleportToTarget::TeleportingActor' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.IsValidActorToTeleport
// 0x0040 (0x0040 - 0x0000)
struct B_Teleporter_C_IsValidActorToTeleport final
{
public:
	class AActor*                                 ActorToTeleport;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidActor;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Temp_object_Variable;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortAttachToActorInterface> K2Node_DynamicCast_AsFort_Attach_to_Actor_Interface; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActorAttachedTo_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue2;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TeleportActor;                                     // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          RetVal;                                            // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_IsValidActorToTeleport) == 0x000004, "Wrong alignment on B_Teleporter_C_IsValidActorToTeleport");
static_assert(sizeof(B_Teleporter_C_IsValidActorToTeleport) == 0x000040, "Wrong size on B_Teleporter_C_IsValidActorToTeleport");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, ActorToTeleport) == 0x000000, "Member 'B_Teleporter_C_IsValidActorToTeleport::ActorToTeleport' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, ValidActor) == 0x000004, "Member 'B_Teleporter_C_IsValidActorToTeleport::ValidActor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, Temp_object_Variable) == 0x000008, "Member 'B_Teleporter_C_IsValidActorToTeleport::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, K2Node_DynamicCast_AsBuilding_Actor) == 0x000010, "Member 'B_Teleporter_C_IsValidActorToTeleport::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, K2Node_DynamicCast_bSuccess) == 0x000014, "Member 'B_Teleporter_C_IsValidActorToTeleport::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, K2Node_DynamicCast_AsFort_Attach_to_Actor_Interface) == 0x000018, "Member 'B_Teleporter_C_IsValidActorToTeleport::K2Node_DynamicCast_AsFort_Attach_to_Actor_Interface' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, K2Node_DynamicCast_bSuccess2) == 0x000020, "Member 'B_Teleporter_C_IsValidActorToTeleport::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_IsValid_ReturnValue2) == 0x000021, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_GetActorAttachedTo_ReturnValue) == 0x000024, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_GetActorAttachedTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_K2_GetRootComponent_ReturnValue2) == 0x00002C, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_K2_GetRootComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_GetAttachParent_ReturnValue) == 0x000030, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, CallFunc_IsValid_ReturnValue3) == 0x000035, "Member 'B_Teleporter_C_IsValidActorToTeleport::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, TeleportActor) == 0x000038, "Member 'B_Teleporter_C_IsValidActorToTeleport::TeleportActor' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsValidActorToTeleport, RetVal) == 0x00003C, "Member 'B_Teleporter_C_IsValidActorToTeleport::RetVal' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.UpdateTeleportersActive
// 0x0004 (0x0004 - 0x0000)
struct B_Teleporter_C_UpdateTeleportersActive final
{
public:
	bool                                          CallFunc_IsExclusivelyActive_IsActive;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExclusivelyActive_IsActive2;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_UpdateTeleportersActive) == 0x000001, "Wrong alignment on B_Teleporter_C_UpdateTeleportersActive");
static_assert(sizeof(B_Teleporter_C_UpdateTeleportersActive) == 0x000004, "Wrong size on B_Teleporter_C_UpdateTeleportersActive");
static_assert(offsetof(B_Teleporter_C_UpdateTeleportersActive, CallFunc_IsExclusivelyActive_IsActive) == 0x000000, "Member 'B_Teleporter_C_UpdateTeleportersActive::CallFunc_IsExclusivelyActive_IsActive' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateTeleportersActive, CallFunc_IsExclusivelyActive_IsActive2) == 0x000001, "Member 'B_Teleporter_C_UpdateTeleportersActive::CallFunc_IsExclusivelyActive_IsActive2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateTeleportersActive, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'B_Teleporter_C_UpdateTeleportersActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateTeleportersActive, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'B_Teleporter_C_UpdateTeleportersActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.IsExclusivelyActive
// 0x0038 (0x0038 - 0x0000)
struct B_Teleporter_C_IsExclusivelyActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRetVal;                                           // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_IsExclusivelyActive) == 0x000004, "Wrong alignment on B_Teleporter_C_IsExclusivelyActive");
static_assert(sizeof(B_Teleporter_C_IsExclusivelyActive) == 0x000038, "Wrong size on B_Teleporter_C_IsExclusivelyActive");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, IsActive) == 0x000000, "Member 'B_Teleporter_C_IsExclusivelyActive::IsActive' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000024, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_GetAttachParent_ReturnValue) == 0x000028, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, CallFunc_IsValid_ReturnValue2) == 0x000034, "Member 'B_Teleporter_C_IsExclusivelyActive::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsExclusivelyActive, bRetVal) == 0x000035, "Member 'B_Teleporter_C_IsExclusivelyActive::bRetVal' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnRep_bTeleporterActive
// 0x0001 (0x0001 - 0x0000)
struct B_Teleporter_C_OnRep_bTeleporterActive final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_OnRep_bTeleporterActive) == 0x000001, "Wrong alignment on B_Teleporter_C_OnRep_bTeleporterActive");
static_assert(sizeof(B_Teleporter_C_OnRep_bTeleporterActive) == 0x000001, "Wrong size on B_Teleporter_C_OnRep_bTeleporterActive");
static_assert(offsetof(B_Teleporter_C_OnRep_bTeleporterActive, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_OnRep_bTeleporterActive::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.RechargeComplete
// 0x0004 (0x0004 - 0x0000)
struct B_Teleporter_C_RechargeComplete final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_RechargeComplete) == 0x000004, "Wrong alignment on B_Teleporter_C_RechargeComplete");
static_assert(sizeof(B_Teleporter_C_RechargeComplete) == 0x000004, "Wrong size on B_Teleporter_C_RechargeComplete");
static_assert(offsetof(B_Teleporter_C_RechargeComplete, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_RechargeComplete::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnRep_TeleportCount
// 0x002C (0x002C - 0x0000)
struct B_Teleporter_C_OnRep_TeleportCount final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_OnRep_TeleportCount) == 0x000004, "Wrong alignment on B_Teleporter_C_OnRep_TeleportCount");
static_assert(sizeof(B_Teleporter_C_OnRep_TeleportCount) == 0x00002C, "Wrong size on B_Teleporter_C_OnRep_TeleportCount");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_GetPlayerController_ReturnValue) == 0x000004, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_OnSameTeam_ReturnValue) == 0x000008, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00000C, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_SelectColor_ReturnValue) == 0x000010, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleportCount, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000020, "Member 'B_Teleporter_C_OnRep_TeleportCount::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.UpdateTargetTeleporterLocation
// 0x000C (0x000C - 0x0000)
struct B_Teleporter_C_UpdateTargetTeleporterLocation final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_UpdateTargetTeleporterLocation) == 0x000004, "Wrong alignment on B_Teleporter_C_UpdateTargetTeleporterLocation");
static_assert(sizeof(B_Teleporter_C_UpdateTargetTeleporterLocation) == 0x00000C, "Wrong size on B_Teleporter_C_UpdateTargetTeleporterLocation");
static_assert(offsetof(B_Teleporter_C_UpdateTargetTeleporterLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_UpdateTargetTeleporterLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnRep_bBeingCarried
// 0x0001 (0x0001 - 0x0000)
struct B_Teleporter_C_OnRep_bBeingCarried final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_OnRep_bBeingCarried) == 0x000001, "Wrong alignment on B_Teleporter_C_OnRep_bBeingCarried");
static_assert(sizeof(B_Teleporter_C_OnRep_bBeingCarried) == 0x000001, "Wrong size on B_Teleporter_C_OnRep_bBeingCarried");
static_assert(offsetof(B_Teleporter_C_OnRep_bBeingCarried, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_OnRep_bBeingCarried::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.UpdateGlowVisuals
// 0x00A8 (0x00A8 - 0x0000)
struct B_Teleporter_C_UpdateGlowVisuals final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue2;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue3;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue4;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue3;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue5;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue4;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue3;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue3;                 // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue4;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue5;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue4;                 // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue5;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue5;                 // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_UpdateGlowVisuals) == 0x000004, "Wrong alignment on B_Teleporter_C_UpdateGlowVisuals");
static_assert(sizeof(B_Teleporter_C_UpdateGlowVisuals) == 0x0000A8, "Wrong size on B_Teleporter_C_UpdateGlowVisuals");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_GetPlayerController_ReturnValue2) == 0x000004, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_OnSameTeam_ReturnValue) == 0x000008, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_OnSameTeam_ReturnValue2) == 0x00000A, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_OnSameTeam_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue2) == 0x00000B, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue3) == 0x00000C, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Conv_BoolToFloat_ReturnValue2) == 0x000014, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Conv_BoolToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_SelectColor_ReturnValue2) == 0x000028, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_GetPlayerController_ReturnValue3) == 0x000038, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_GetPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_GetPlayerController_ReturnValue4) == 0x00003C, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_GetPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_OnSameTeam_ReturnValue3) == 0x000040, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_OnSameTeam_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_GetPlayerController_ReturnValue5) == 0x000044, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_GetPlayerController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue4) == 0x000048, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_OnSameTeam_ReturnValue4) == 0x000049, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_OnSameTeam_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Conv_BoolToFloat_ReturnValue3) == 0x00004C, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Conv_BoolToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue5) == 0x000050, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_SelectColor_ReturnValue3) == 0x000054, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_SelectColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Conv_BoolToFloat_ReturnValue4) == 0x000064, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Conv_BoolToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_IsDedicatedServer_ReturnValue) == 0x000068, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_OnSameTeam_ReturnValue5) == 0x000069, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_OnSameTeam_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue6) == 0x00006A, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue7) == 0x00006B, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_SelectColor_ReturnValue4) == 0x00006C, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_SelectColor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Conv_BoolToFloat_ReturnValue5) == 0x00007C, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Conv_BoolToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, Temp_bool_Has_Been_Initd_Variable) == 0x000080, "Member 'B_Teleporter_C_UpdateGlowVisuals::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_SelectColor_ReturnValue5) == 0x000084, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_SelectColor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000094, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue8) == 0x0000A0, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, Temp_bool_IsClosed_Variable) == 0x0000A1, "Member 'B_Teleporter_C_UpdateGlowVisuals::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue9) == 0x0000A3, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_UpdateGlowVisuals, CallFunc_Not_PreBool_ReturnValue10) == 0x0000A4, "Member 'B_Teleporter_C_UpdateGlowVisuals::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.SetShowGlow
// 0x0001 (0x0001 - 0x0000)
struct B_Teleporter_C_SetShowGlow final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_SetShowGlow) == 0x000001, "Wrong alignment on B_Teleporter_C_SetShowGlow");
static_assert(sizeof(B_Teleporter_C_SetShowGlow) == 0x000001, "Wrong size on B_Teleporter_C_SetShowGlow");
static_assert(offsetof(B_Teleporter_C_SetShowGlow, Show) == 0x000000, "Member 'B_Teleporter_C_SetShowGlow::Show' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.InitializeTeleporter
// 0x001C (0x001C - 0x0000)
struct B_Teleporter_C_InitializeTeleporter final
{
public:
	float                                         NewMaxRange;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         NewRechargeDecay;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           TeleporterArrowColor_0;                            // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_InitializeTeleporter) == 0x000004, "Wrong alignment on B_Teleporter_C_InitializeTeleporter");
static_assert(sizeof(B_Teleporter_C_InitializeTeleporter) == 0x00001C, "Wrong size on B_Teleporter_C_InitializeTeleporter");
static_assert(offsetof(B_Teleporter_C_InitializeTeleporter, NewMaxRange) == 0x000000, "Member 'B_Teleporter_C_InitializeTeleporter::NewMaxRange' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_InitializeTeleporter, NewRechargeDecay) == 0x000004, "Member 'B_Teleporter_C_InitializeTeleporter::NewRechargeDecay' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_InitializeTeleporter, TeleporterArrowColor_0) == 0x000008, "Member 'B_Teleporter_C_InitializeTeleporter::TeleporterArrowColor_0' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_InitializeTeleporter, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'B_Teleporter_C_InitializeTeleporter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.OnRep_TeleporterArrowColor
// 0x0001 (0x0001 - 0x0000)
struct B_Teleporter_C_OnRep_TeleporterArrowColor final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_OnRep_TeleporterArrowColor) == 0x000001, "Wrong alignment on B_Teleporter_C_OnRep_TeleporterArrowColor");
static_assert(sizeof(B_Teleporter_C_OnRep_TeleporterArrowColor) == 0x000001, "Wrong size on B_Teleporter_C_OnRep_TeleporterArrowColor");
static_assert(offsetof(B_Teleporter_C_OnRep_TeleporterArrowColor, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_OnRep_TeleporterArrowColor::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.TriggerRechargeInternal
// 0x0004 (0x0004 - 0x0000)
struct B_Teleporter_C_TriggerRechargeInternal final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0004)()
};
static_assert(alignof(B_Teleporter_C_TriggerRechargeInternal) == 0x000004, "Wrong alignment on B_Teleporter_C_TriggerRechargeInternal");
static_assert(sizeof(B_Teleporter_C_TriggerRechargeInternal) == 0x000004, "Wrong size on B_Teleporter_C_TriggerRechargeInternal");
static_assert(offsetof(B_Teleporter_C_TriggerRechargeInternal, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'B_Teleporter_C_TriggerRechargeInternal::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.InternalSetActive
// 0x0002 (0x0002 - 0x0000)
struct B_Teleporter_C_InternalSetActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_InternalSetActive) == 0x000001, "Wrong alignment on B_Teleporter_C_InternalSetActive");
static_assert(sizeof(B_Teleporter_C_InternalSetActive) == 0x000002, "Wrong size on B_Teleporter_C_InternalSetActive");
static_assert(offsetof(B_Teleporter_C_InternalSetActive, bActive) == 0x000000, "Member 'B_Teleporter_C_InternalSetActive::bActive' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_InternalSetActive, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'B_Teleporter_C_InternalSetActive::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.BlueprintCanInteract
// 0x0018 (0x0018 - 0x0000)
struct B_Teleporter_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetVal;                                            // 0x0016(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_BlueprintCanInteract) == 0x000004, "Wrong alignment on B_Teleporter_C_BlueprintCanInteract");
static_assert(sizeof(B_Teleporter_C_BlueprintCanInteract) == 0x000018, "Wrong size on B_Teleporter_C_BlueprintCanInteract");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'B_Teleporter_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, ReturnValue) == 0x000004, "Member 'B_Teleporter_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, CallFunc_OnSameTeam_ReturnValue) == 0x000005, "Member 'B_Teleporter_C_BlueprintCanInteract::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'B_Teleporter_C_BlueprintCanInteract::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, CallFunc_GetAttachParent_ReturnValue) == 0x00000C, "Member 'B_Teleporter_C_BlueprintCanInteract::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'B_Teleporter_C_BlueprintCanInteract::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'B_Teleporter_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue2) == 0x000015, "Member 'B_Teleporter_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintCanInteract, RetVal) == 0x000016, "Member 'B_Teleporter_C_BlueprintCanInteract::RetVal' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.BlueprintGetInteractionString
// 0x0010 (0x0010 - 0x0000)
struct B_Teleporter_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(B_Teleporter_C_BlueprintGetInteractionString) == 0x000004, "Wrong alignment on B_Teleporter_C_BlueprintGetInteractionString");
static_assert(sizeof(B_Teleporter_C_BlueprintGetInteractionString) == 0x000010, "Wrong size on B_Teleporter_C_BlueprintGetInteractionString");
static_assert(offsetof(B_Teleporter_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'B_Teleporter_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_BlueprintGetInteractionString, ReturnValue) == 0x000004, "Member 'B_Teleporter_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

// Function B_Teleporter.B_Teleporter_C.IsAcceptablePositionForPlacement
// 0x0058 (0x0058 - 0x0000)
struct B_Teleporter_C_IsAcceptablePositionForPlacement final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               InRotation;                                        // 0x000C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AFortDecoTool*                          DecoTool;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsCDO;                                            // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutFailureReason;                                  // 0x0020(0x000C)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FailReason;                                        // 0x0048(0x000C)(Edit)
	bool                                          RetVal;                                            // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Teleporter_C_IsAcceptablePositionForPlacement) == 0x000004, "Wrong alignment on B_Teleporter_C_IsAcceptablePositionForPlacement");
static_assert(sizeof(B_Teleporter_C_IsAcceptablePositionForPlacement) == 0x000058, "Wrong size on B_Teleporter_C_IsAcceptablePositionForPlacement");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, InLocation) == 0x000000, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::InLocation' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, InRotation) == 0x00000C, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::InRotation' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, DecoTool) == 0x000018, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::DecoTool' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, bIsCDO) == 0x00001C, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::bIsCDO' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, OutFailureReason) == 0x000020, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::OutFailureReason' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, ReturnValue) == 0x00002C, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, FailReason) == 0x000048, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::FailReason' has a wrong offset!");
static_assert(offsetof(B_Teleporter_C_IsAcceptablePositionForPlacement, RetVal) == 0x000054, "Member 'B_Teleporter_C_IsAcceptablePositionForPlacement::RetVal' has a wrong offset!");

}

#pragma pack(pop)
