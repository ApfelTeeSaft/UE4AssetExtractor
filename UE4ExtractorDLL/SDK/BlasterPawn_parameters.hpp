#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlasterPawn

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function BlasterPawn.BlasterPawn_C.ExecuteUbergraph_BlasterPawn
// 0x0290 (0x0290 - 0x0000)
struct BlasterPawn_C_ExecuteUbergraph_BlasterPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x0008(0x0084)()
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue;                 // 0x008C(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174[0xC];                                      // 0x0174(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage;                               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x01B4(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x01D8(0x0080)(ConstParm, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0260(0x000C)()
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn) == 0x000010, "Wrong alignment on BlasterPawn_C_ExecuteUbergraph_BlasterPawn");
static_assert(sizeof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn) == 0x000290, "Wrong size on BlasterPawn_C_ExecuteUbergraph_BlasterPawn");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, EntryPoint) == 0x000000, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_GameplayCueEvent_EventType) == 0x000004, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_GameplayCueEvent_Parameters) == 0x000008, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_GetHitResult_ReturnValue) == 0x00008C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_GetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_bBlockingHit) == 0x00010C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010D, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_Time) == 0x000110, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_PhysMat) == 0x000144, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_HitActor) == 0x000148, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_HitComponent) == 0x00014C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_GetSocketTransform_ReturnValue) == 0x000180, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_Damage) == 0x0001B0, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_DamageTags) == 0x0001B4, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_Momentum) == 0x0001CC, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_HitInfo) == 0x0001D8, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_InstigatedBy) == 0x000258, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_DamageCauser) == 0x00025C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, K2Node_Event_EffectContext) == 0x000260, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakTransform_Location) == 0x00026C, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakTransform_Rotation) == 0x000278, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_ExecuteUbergraph_BlasterPawn, CallFunc_BreakTransform_Scale) == 0x000284, "Member 'BlasterPawn_C_ExecuteUbergraph_BlasterPawn::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BlasterPawn.BlasterPawn_C.GameplayCue.Impact.Physical.Energy
// 0x0088 (0x0088 - 0x0000)
struct BlasterPawn_C_GameplayCue_Impact_Physical_Energy final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(BlasterPawn_C_GameplayCue_Impact_Physical_Energy) == 0x000004, "Wrong alignment on BlasterPawn_C_GameplayCue_Impact_Physical_Energy");
static_assert(sizeof(BlasterPawn_C_GameplayCue_Impact_Physical_Energy) == 0x000088, "Wrong size on BlasterPawn_C_GameplayCue_Impact_Physical_Energy");
static_assert(offsetof(BlasterPawn_C_GameplayCue_Impact_Physical_Energy, EventType) == 0x000000, "Member 'BlasterPawn_C_GameplayCue_Impact_Physical_Energy::EventType' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_GameplayCue_Impact_Physical_Energy, Parameters) == 0x000004, "Member 'BlasterPawn_C_GameplayCue_Impact_Physical_Energy::Parameters' has a wrong offset!");

// Function BlasterPawn.BlasterPawn_C.OnDeathServer
// 0x00BC (0x00BC - 0x0000)
struct BlasterPawn_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(BlasterPawn_C_OnDeathServer) == 0x000004, "Wrong alignment on BlasterPawn_C_OnDeathServer");
static_assert(sizeof(BlasterPawn_C_OnDeathServer) == 0x0000BC, "Wrong size on BlasterPawn_C_OnDeathServer");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, Damage) == 0x000000, "Member 'BlasterPawn_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, DamageTags) == 0x000004, "Member 'BlasterPawn_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, Momentum) == 0x00001C, "Member 'BlasterPawn_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, HitInfo) == 0x000028, "Member 'BlasterPawn_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, InstigatedBy) == 0x0000A8, "Member 'BlasterPawn_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, DamageCauser) == 0x0000AC, "Member 'BlasterPawn_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BlasterPawn_C_OnDeathServer, EffectContext) == 0x0000B0, "Member 'BlasterPawn_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function BlasterPawn.BlasterPawn_C.OnRep_HeadEffectStatus
// 0x0004 (0x0004 - 0x0000)
struct BlasterPawn_C_OnRep_HeadEffectStatus final
{
public:
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlasterPawn_C_OnRep_HeadEffectStatus) == 0x000004, "Wrong alignment on BlasterPawn_C_OnRep_HeadEffectStatus");
static_assert(sizeof(BlasterPawn_C_OnRep_HeadEffectStatus) == 0x000004, "Wrong size on BlasterPawn_C_OnRep_HeadEffectStatus");
static_assert(offsetof(BlasterPawn_C_OnRep_HeadEffectStatus, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000000, "Member 'BlasterPawn_C_OnRep_HeadEffectStatus::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
