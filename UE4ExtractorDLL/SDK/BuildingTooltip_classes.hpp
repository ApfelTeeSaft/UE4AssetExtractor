#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass BuildingTooltip.BuildingTooltip_C
// 0x0048 (0x028C - 0x0244)
class UBuildingTooltip_C final : public UFortUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0244(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BuildingIcon;                                      // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBuildingLevelWidget_C*                 BuildingLevelWidget;                               // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             DescriptionText;                                   // 0x0250(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             Gadget_Description_Text;                           // 0x0254(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Gadget_Image;                                      // 0x0258(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             Gadget_Text;                                       // 0x025C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UVerticalBox*                           GadgetInfo_VBox;                                   // 0x0260(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         Level___Rating_Row;                                // 0x0264(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UMovieWidget_C*                         MovieWidget;                                       // 0x0268(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class USizeBox*                               MovieWidget_SizeBox;                               // 0x026C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class URatingWidget_C*                        RatingWidget_Self;                                 // 0x0270(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class URatingWidget_C*                        RatingWidget_Team;                                 // 0x0274(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             TitleText;                                         // 0x0278(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class FString                                 BuildingTemplateId;                                // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	class UHomeBaseBuilding*                      BuildingData;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BuildingTooltip(int32 EntryPoint);
	void Construct();
	void Set_Visible(bool In_Visible);
	class UFortItemDefinition* GetGadget(class UHomeBaseBuilding* Building);
	void SetupTooltip(const class FString& InBuildingTemplateId);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BuildingTooltip_C">();
	}
	static class UBuildingTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBuildingTooltip_C>();
	}
};
static_assert(alignof(UBuildingTooltip_C) == 0x000004, "Wrong alignment on UBuildingTooltip_C");
static_assert(sizeof(UBuildingTooltip_C) == 0x00028C, "Wrong size on UBuildingTooltip_C");
static_assert(offsetof(UBuildingTooltip_C, UberGraphFrame) == 0x000244, "Member 'UBuildingTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, BuildingIcon) == 0x000248, "Member 'UBuildingTooltip_C::BuildingIcon' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, BuildingLevelWidget) == 0x00024C, "Member 'UBuildingTooltip_C::BuildingLevelWidget' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, DescriptionText) == 0x000250, "Member 'UBuildingTooltip_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, Gadget_Description_Text) == 0x000254, "Member 'UBuildingTooltip_C::Gadget_Description_Text' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, Gadget_Image) == 0x000258, "Member 'UBuildingTooltip_C::Gadget_Image' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, Gadget_Text) == 0x00025C, "Member 'UBuildingTooltip_C::Gadget_Text' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, GadgetInfo_VBox) == 0x000260, "Member 'UBuildingTooltip_C::GadgetInfo_VBox' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, Level___Rating_Row) == 0x000264, "Member 'UBuildingTooltip_C::Level___Rating_Row' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, MovieWidget) == 0x000268, "Member 'UBuildingTooltip_C::MovieWidget' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, MovieWidget_SizeBox) == 0x00026C, "Member 'UBuildingTooltip_C::MovieWidget_SizeBox' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, RatingWidget_Self) == 0x000270, "Member 'UBuildingTooltip_C::RatingWidget_Self' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, RatingWidget_Team) == 0x000274, "Member 'UBuildingTooltip_C::RatingWidget_Team' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, TitleText) == 0x000278, "Member 'UBuildingTooltip_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, BuildingTemplateId) == 0x00027C, "Member 'UBuildingTooltip_C::BuildingTemplateId' has a wrong offset!");
static_assert(offsetof(UBuildingTooltip_C, BuildingData) == 0x000288, "Member 'UBuildingTooltip_C::BuildingData' has a wrong offset!");

}

#pragma pack(pop)
