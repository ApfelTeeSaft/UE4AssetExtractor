#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ButtonIconText

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function ButtonIconText.ButtonIconText_C.ExecuteUbergraph_ButtonIconText
// 0x00FC (0x00FC - 0x0000)
struct ButtonIconText_C_ExecuteUbergraph_ButtonIconText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0034)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x003C(0x0060)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x009C(0x0060)(ConstParm)
};
static_assert(alignof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText) == 0x000004, "Wrong alignment on ButtonIconText_C_ExecuteUbergraph_ButtonIconText");
static_assert(sizeof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText) == 0x0000FC, "Wrong size on ButtonIconText_C_ExecuteUbergraph_ButtonIconText");
static_assert(offsetof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText, EntryPoint) == 0x000000, "Member 'ButtonIconText_C_ExecuteUbergraph_ButtonIconText::EntryPoint' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ButtonIconText_C_ExecuteUbergraph_ButtonIconText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText, K2Node_Event_MyGeometry) == 0x000008, "Member 'ButtonIconText_C_ExecuteUbergraph_ButtonIconText::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText, K2Node_Event_MouseEvent2) == 0x00003C, "Member 'ButtonIconText_C_ExecuteUbergraph_ButtonIconText::K2Node_Event_MouseEvent2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_ExecuteUbergraph_ButtonIconText, K2Node_Event_MouseEvent) == 0x00009C, "Member 'ButtonIconText_C_ExecuteUbergraph_ButtonIconText::K2Node_Event_MouseEvent' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.OnMouseLeave
// 0x0060 (0x0060 - 0x0000)
struct ButtonIconText_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ButtonIconText_C_OnMouseLeave) == 0x000004, "Wrong alignment on ButtonIconText_C_OnMouseLeave");
static_assert(sizeof(ButtonIconText_C_OnMouseLeave) == 0x000060, "Wrong size on ButtonIconText_C_OnMouseLeave");
static_assert(offsetof(ButtonIconText_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ButtonIconText_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.OnMouseEnter
// 0x0094 (0x0094 - 0x0000)
struct ButtonIconText_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0034(0x0060)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ButtonIconText_C_OnMouseEnter) == 0x000004, "Wrong alignment on ButtonIconText_C_OnMouseEnter");
static_assert(sizeof(ButtonIconText_C_OnMouseEnter) == 0x000094, "Wrong size on ButtonIconText_C_OnMouseEnter");
static_assert(offsetof(ButtonIconText_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ButtonIconText_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_OnMouseEnter, MouseEvent) == 0x000034, "Member 'ButtonIconText_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ButtonIconText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ButtonIconText_C_PreConstruct) == 0x000001, "Wrong alignment on ButtonIconText_C_PreConstruct");
static_assert(sizeof(ButtonIconText_C_PreConstruct) == 0x000001, "Wrong size on ButtonIconText_C_PreConstruct");
static_assert(offsetof(ButtonIconText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ButtonIconText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Set Text
// 0x0040 (0x0040 - 0x0000)
struct ButtonIconText_C_Set_Text final
{
public:
	class FText                                   InText;                                            // 0x0000(0x000C)(Parm)
	bool                                          RefreshPadding;                                    // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetCurrentFont_ReturnValue;               // 0x0014(0x0028)(ConstParm)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ButtonIconText_C_Set_Text) == 0x000004, "Wrong alignment on ButtonIconText_C_Set_Text");
static_assert(sizeof(ButtonIconText_C_Set_Text) == 0x000040, "Wrong size on ButtonIconText_C_Set_Text");
static_assert(offsetof(ButtonIconText_C_Set_Text, InText) == 0x000000, "Member 'ButtonIconText_C_Set_Text::InText' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, RefreshPadding) == 0x00000C, "Member 'ButtonIconText_C_Set_Text::RefreshPadding' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, CallFunc_TextIsEmpty_ReturnValue) == 0x00000D, "Member 'ButtonIconText_C_Set_Text::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'ButtonIconText_C_Set_Text::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, Temp_byte_Variable) == 0x00000F, "Member 'ButtonIconText_C_Set_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, Temp_byte_Variable2) == 0x000010, "Member 'ButtonIconText_C_Set_Text::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, CallFunc_GetCurrentFont_ReturnValue) == 0x000014, "Member 'ButtonIconText_C_Set_Text::CallFunc_GetCurrentFont_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, Temp_bool_Variable) == 0x00003C, "Member 'ButtonIconText_C_Set_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Text, K2Node_Select_Default) == 0x00003D, "Member 'ButtonIconText_C_Set_Text::K2Node_Select_Default' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Set Icon
// 0x007C (0x007C - 0x0000)
struct ButtonIconText_C_Set_Icon final
{
public:
	struct FSlateBrush                            InBrush;                                           // 0x0000(0x0074)(Parm)
	bool                                          RefreshPadding;                                    // 0x0074(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ButtonIconText_C_Set_Icon) == 0x000004, "Wrong alignment on ButtonIconText_C_Set_Icon");
static_assert(sizeof(ButtonIconText_C_Set_Icon) == 0x00007C, "Wrong size on ButtonIconText_C_Set_Icon");
static_assert(offsetof(ButtonIconText_C_Set_Icon, InBrush) == 0x000000, "Member 'ButtonIconText_C_Set_Icon::InBrush' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Icon, RefreshPadding) == 0x000074, "Member 'ButtonIconText_C_Set_Icon::RefreshPadding' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Icon, Temp_byte_Variable) == 0x000075, "Member 'ButtonIconText_C_Set_Icon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Icon, Temp_byte_Variable2) == 0x000076, "Member 'ButtonIconText_C_Set_Icon::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Icon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000077, "Member 'ButtonIconText_C_Set_Icon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Icon, Temp_bool_Variable) == 0x000078, "Member 'ButtonIconText_C_Set_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Icon, K2Node_Select_Default) == 0x000079, "Member 'ButtonIconText_C_Set_Icon::K2Node_Select_Default' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Update Padding
// 0x0090 (0x0090 - 0x0000)
struct ButtonIconText_C_Update_Padding final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)()
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin2;                         // 0x0028(0x0010)()
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot2;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin3;                         // 0x0040(0x0010)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortButtonStyle*                       CallFunc_GetStyle_ReturnValue;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin4;                         // 0x0060(0x0010)()
	struct FMargin                                CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue; // 0x0070(0x0010)(ConstParm)
	struct FMargin                                Margin;                                            // 0x0080(0x0010)(Edit)
};
static_assert(alignof(ButtonIconText_C_Update_Padding) == 0x000004, "Wrong alignment on ButtonIconText_C_Update_Padding");
static_assert(sizeof(ButtonIconText_C_Update_Padding) == 0x000090, "Wrong size on ButtonIconText_C_Update_Padding");
static_assert(offsetof(ButtonIconText_C_Update_Padding, Temp_bool_Variable) == 0x000000, "Member 'ButtonIconText_C_Update_Padding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, Temp_float_Variable) == 0x000004, "Member 'ButtonIconText_C_Update_Padding::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000008, "Member 'ButtonIconText_C_Update_Padding::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_DynamicCast_bSuccess) == 0x00000C, "Member 'ButtonIconText_C_Update_Padding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_MakeStruct_Margin) == 0x000010, "Member 'ButtonIconText_C_Update_Padding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000020, "Member 'ButtonIconText_C_Update_Padding::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_DynamicCast_bSuccess2) == 0x000024, "Member 'ButtonIconText_C_Update_Padding::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_MakeStruct_Margin2) == 0x000028, "Member 'ButtonIconText_C_Update_Padding::K2Node_MakeStruct_Margin2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_DynamicCast_AsHorizontal_Box_Slot2) == 0x000038, "Member 'ButtonIconText_C_Update_Padding::K2Node_DynamicCast_AsHorizontal_Box_Slot2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_DynamicCast_bSuccess3) == 0x00003C, "Member 'ButtonIconText_C_Update_Padding::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_MakeStruct_Margin3) == 0x000040, "Member 'ButtonIconText_C_Update_Padding::K2Node_MakeStruct_Margin3' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'ButtonIconText_C_Update_Padding::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'ButtonIconText_C_Update_Padding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, CallFunc_GetStyle_ReturnValue) == 0x000058, "Member 'ButtonIconText_C_Update_Padding::CallFunc_GetStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_Select_Default) == 0x00005C, "Member 'ButtonIconText_C_Update_Padding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, K2Node_MakeStruct_Margin4) == 0x000060, "Member 'ButtonIconText_C_Update_Padding::K2Node_MakeStruct_Margin4' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue) == 0x000070, "Member 'ButtonIconText_C_Update_Padding::CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Padding, Margin) == 0x000080, "Member 'ButtonIconText_C_Update_Padding::Margin' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Get Secondary Color
// 0x02E8 (0x02E8 - 0x0000)
struct ButtonIconText_C_Get_Secondary_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FFortStateStyle                        CallFunc_GetCurrentStateStyle_ReturnValue;         // 0x0010(0x02D8)(ConstParm)
};
static_assert(alignof(ButtonIconText_C_Get_Secondary_Color) == 0x000004, "Wrong alignment on ButtonIconText_C_Get_Secondary_Color");
static_assert(sizeof(ButtonIconText_C_Get_Secondary_Color) == 0x0002E8, "Wrong size on ButtonIconText_C_Get_Secondary_Color");
static_assert(offsetof(ButtonIconText_C_Get_Secondary_Color, ReturnValue) == 0x000000, "Member 'ButtonIconText_C_Get_Secondary_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Get_Secondary_Color, CallFunc_GetCurrentStateStyle_ReturnValue) == 0x000010, "Member 'ButtonIconText_C_Get_Secondary_Color::CallFunc_GetCurrentStateStyle_ReturnValue' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Get Primary Color
// 0x0310 (0x0310 - 0x0000)
struct ButtonIconText_C_Get_Primary_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x001C)(Parm, OutParm, ReturnParm)
	struct FFortStateStyle                        CallFunc_GetCurrentStateStyle_ReturnValue;         // 0x001C(0x02D8)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x02F4(0x001C)()
};
static_assert(alignof(ButtonIconText_C_Get_Primary_Color) == 0x000004, "Wrong alignment on ButtonIconText_C_Get_Primary_Color");
static_assert(sizeof(ButtonIconText_C_Get_Primary_Color) == 0x000310, "Wrong size on ButtonIconText_C_Get_Primary_Color");
static_assert(offsetof(ButtonIconText_C_Get_Primary_Color, ReturnValue) == 0x000000, "Member 'ButtonIconText_C_Get_Primary_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Get_Primary_Color, CallFunc_GetCurrentStateStyle_ReturnValue) == 0x00001C, "Member 'ButtonIconText_C_Get_Primary_Color::CallFunc_GetCurrentStateStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Get_Primary_Color, K2Node_MakeStruct_SlateColor) == 0x0002F4, "Member 'ButtonIconText_C_Get_Primary_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Update Size Box
// 0x0080 (0x0080 - 0x0000)
struct ButtonIconText_C_Update_Size_Box final
{
public:
	class UFortButtonStyle*                       CallFunc_GetStyle_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue; // 0x0004(0x0074)(ConstParm)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ButtonIconText_C_Update_Size_Box) == 0x000004, "Wrong alignment on ButtonIconText_C_Update_Size_Box");
static_assert(sizeof(ButtonIconText_C_Update_Size_Box) == 0x000080, "Wrong size on ButtonIconText_C_Update_Size_Box");
static_assert(offsetof(ButtonIconText_C_Update_Size_Box, CallFunc_GetStyle_ReturnValue) == 0x000000, "Member 'ButtonIconText_C_Update_Size_Box::CallFunc_GetStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Size_Box, CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue) == 0x000004, "Member 'ButtonIconText_C_Update_Size_Box::CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Size_Box, CallFunc_BreakVector2D_X) == 0x000078, "Member 'ButtonIconText_C_Update_Size_Box::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Update_Size_Box, CallFunc_BreakVector2D_Y) == 0x00007C, "Member 'ButtonIconText_C_Update_Size_Box::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function ButtonIconText.ButtonIconText_C.Set Alignment
// 0x0018 (0x0018 - 0x0000)
struct ButtonIconText_C_Set_Alignment final
{
public:
	ETextJustify                                  Align;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable3;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable4;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UButtonSlot*                            K2Node_DynamicCast_AsButton_Slot;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ButtonIconText_C_Set_Alignment) == 0x000004, "Wrong alignment on ButtonIconText_C_Set_Alignment");
static_assert(sizeof(ButtonIconText_C_Set_Alignment) == 0x000018, "Wrong size on ButtonIconText_C_Set_Alignment");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, Align) == 0x000000, "Member 'ButtonIconText_C_Set_Alignment::Align' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, Temp_byte_Variable) == 0x000001, "Member 'ButtonIconText_C_Set_Alignment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, Temp_byte_Variable2) == 0x000002, "Member 'ButtonIconText_C_Set_Alignment::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, Temp_byte_Variable3) == 0x000003, "Member 'ButtonIconText_C_Set_Alignment::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, Temp_byte_Variable4) == 0x000004, "Member 'ButtonIconText_C_Set_Alignment::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, K2Node_Select_Default) == 0x000005, "Member 'ButtonIconText_C_Set_Alignment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, K2Node_DynamicCast_AsButton_Slot) == 0x000008, "Member 'ButtonIconText_C_Set_Alignment::K2Node_DynamicCast_AsButton_Slot' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, K2Node_DynamicCast_bSuccess) == 0x00000C, "Member 'ButtonIconText_C_Set_Alignment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000010, "Member 'ButtonIconText_C_Set_Alignment::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(ButtonIconText_C_Set_Alignment, K2Node_DynamicCast_bSuccess2) == 0x000014, "Member 'ButtonIconText_C_Set_Alignment::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

}

#pragma pack(pop)
