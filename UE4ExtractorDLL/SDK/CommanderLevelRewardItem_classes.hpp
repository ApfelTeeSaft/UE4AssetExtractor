#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommanderLevelRewardItem

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass CommanderLevelRewardItem.CommanderLevelRewardItem_C
// 0x0018 (0x025C - 0x0244)
class UCommanderLevelRewardItem_C final : public UFortUserWidget
{
public:
	class UItemStackCounter_C*                    ItemStackCounter;                                  // 0x0244(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 RewardIcon;                                        // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             RewardName;                                        // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UFortItemDefinition*                    ItemReward;                                        // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         Quantity;                                          // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowDescription;                                  // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void Init(const struct FFortItemQuantityPair& InItem);
	class UWidget* Get_RewardIcon_ToolTipWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CommanderLevelRewardItem_C">();
	}
	static class UCommanderLevelRewardItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommanderLevelRewardItem_C>();
	}
};
static_assert(alignof(UCommanderLevelRewardItem_C) == 0x000004, "Wrong alignment on UCommanderLevelRewardItem_C");
static_assert(sizeof(UCommanderLevelRewardItem_C) == 0x00025C, "Wrong size on UCommanderLevelRewardItem_C");
static_assert(offsetof(UCommanderLevelRewardItem_C, ItemStackCounter) == 0x000244, "Member 'UCommanderLevelRewardItem_C::ItemStackCounter' has a wrong offset!");
static_assert(offsetof(UCommanderLevelRewardItem_C, RewardIcon) == 0x000248, "Member 'UCommanderLevelRewardItem_C::RewardIcon' has a wrong offset!");
static_assert(offsetof(UCommanderLevelRewardItem_C, RewardName) == 0x00024C, "Member 'UCommanderLevelRewardItem_C::RewardName' has a wrong offset!");
static_assert(offsetof(UCommanderLevelRewardItem_C, ItemReward) == 0x000250, "Member 'UCommanderLevelRewardItem_C::ItemReward' has a wrong offset!");
static_assert(offsetof(UCommanderLevelRewardItem_C, Quantity) == 0x000254, "Member 'UCommanderLevelRewardItem_C::Quantity' has a wrong offset!");
static_assert(offsetof(UCommanderLevelRewardItem_C, bShowDescription) == 0x000258, "Member 'UCommanderLevelRewardItem_C::bShowDescription' has a wrong offset!");

}

#pragma pack(pop)
