#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommanderLevelRewardItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function CommanderLevelRewardItem.CommanderLevelRewardItem_C.Init
// 0x00C4 (0x00C4 - 0x0000)
struct CommanderLevelRewardItem_C_Init final
{
public:
	struct FFortItemQuantityPair                  InItem;                                            // 0x0000(0x001C)(Parm)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSchematicItemDefinition*           K2Node_DynamicCast_AsFort_Schematic_Item_Definition; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetIconBrush_IconBrush;                   // 0x0028(0x0074)()
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x009C(0x000C)()
	bool                                          Temp_bool_Variable2;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    K2Node_Select_Default;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortItemDefinition*                    CallFunc_GetItemFromItemQuantityPair_ReturnValue;  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortAccountItemDefinition*             K2Node_DynamicCast_AsFort_Account_Item_Definition; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAccountItemDefinition*             LocalItem;                                         // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CommanderLevelRewardItem_C_Init) == 0x000004, "Wrong alignment on CommanderLevelRewardItem_C_Init");
static_assert(sizeof(CommanderLevelRewardItem_C_Init) == 0x0000C4, "Wrong size on CommanderLevelRewardItem_C_Init");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, InItem) == 0x000000, "Member 'CommanderLevelRewardItem_C_Init::InItem' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, Temp_bool_Variable) == 0x00001C, "Member 'CommanderLevelRewardItem_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, K2Node_DynamicCast_AsFort_Schematic_Item_Definition) == 0x000020, "Member 'CommanderLevelRewardItem_C_Init::K2Node_DynamicCast_AsFort_Schematic_Item_Definition' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, K2Node_DynamicCast_bSuccess) == 0x000024, "Member 'CommanderLevelRewardItem_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, CallFunc_GetIconBrush_IconBrush) == 0x000028, "Member 'CommanderLevelRewardItem_C_Init::CallFunc_GetIconBrush_IconBrush' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, CallFunc_GetDisplayName_ReturnValue) == 0x00009C, "Member 'CommanderLevelRewardItem_C_Init::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, Temp_bool_Variable2) == 0x0000A8, "Member 'CommanderLevelRewardItem_C_Init::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, K2Node_Select_Default) == 0x0000AC, "Member 'CommanderLevelRewardItem_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, CallFunc_GetContext_ReturnValue) == 0x0000B0, "Member 'CommanderLevelRewardItem_C_Init::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, CallFunc_GetItemFromItemQuantityPair_ReturnValue) == 0x0000B4, "Member 'CommanderLevelRewardItem_C_Init::CallFunc_GetItemFromItemQuantityPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, K2Node_DynamicCast_AsFort_Account_Item_Definition) == 0x0000B8, "Member 'CommanderLevelRewardItem_C_Init::K2Node_DynamicCast_AsFort_Account_Item_Definition' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, K2Node_DynamicCast_bSuccess2) == 0x0000BC, "Member 'CommanderLevelRewardItem_C_Init::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Init, LocalItem) == 0x0000C0, "Member 'CommanderLevelRewardItem_C_Init::LocalItem' has a wrong offset!");

// Function CommanderLevelRewardItem.CommanderLevelRewardItem_C.Get_RewardIcon_ToolTipWidget
// 0x0034 (0x0034 - 0x0000)
struct CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortTokenType*                         K2Node_DynamicCast_AsFort_Token_Type;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Create_Item_Tooltip_Return_Value;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSingleLineDescription_ReturnValue;     // 0x0018(0x000C)()
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0024(0x000C)()
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget) == 0x000004, "Wrong alignment on CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget");
static_assert(sizeof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget) == 0x000034, "Wrong size on CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, ReturnValue) == 0x000000, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000004, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000008, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, K2Node_DynamicCast_AsFort_Token_Type) == 0x00000C, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::K2Node_DynamicCast_AsFort_Token_Type' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, CallFunc_Create_Item_Tooltip_Return_Value) == 0x000014, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::CallFunc_Create_Item_Tooltip_Return_Value' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, CallFunc_GetSingleLineDescription_ReturnValue) == 0x000018, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::CallFunc_GetSingleLineDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, CallFunc_GetDisplayName_ReturnValue) == 0x000024, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget, CallFunc_Create_Basic_Tooltip_Output) == 0x000030, "Member 'CommanderLevelRewardItem_C_Get_RewardIcon_ToolTipWidget::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");

}

#pragma pack(pop)
