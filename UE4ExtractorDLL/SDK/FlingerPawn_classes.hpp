#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlingerPawn

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "ElementalEnum_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass FlingerPawn.FlingerPawn_C
// 0x00A0 (0x0EF0 - 0x0E50)
class AFlingerPawn_C final : public AFortPawn_Flinger
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E50(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Disolve___Particle_Trigger_Disolve_The_Enemy_F0337528460D20BFFECC03A7A471C144; // 0x0E54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Disolve___Particle_Trigger__Direction_F0337528460D20BFFECC03A7A471C144; // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E59[0x3];                                      // 0x0E59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Disolve___Particle_Trigger;                        // 0x0E5C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Timeline_0_ColorFadeOutTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28; // 0x0E60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Timeline_0_FadeInTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28; // 0x0E64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Timeline_0__Direction_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28; // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E69[0x3];                                      // 0x0E69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0E6C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MontagePlayTime;                                   // 0x0E70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFortAIPawn*                            PawnHeldByFlinger;                                 // 0x0E74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_WasThisAMeleeStrike;                            // 0x0E78(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	ElementalEnum                                 ElementalType;                                     // 0x0E90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_E91[0x3];                                      // 0x0E91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               AmbientParticleEffect;                             // 0x0E94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   ImpactMeleeSocket;                                 // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        ImpactParticles_Default;                           // 0x0EA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        ImpactParticles_Wood;                              // 0x0EA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        ImpactParticles_Stone;                             // 0x0EA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        ImpactParticles_Metal;                             // 0x0EAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        ImpactParticles_HumanFlesh;                        // 0x0EB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MeleeImpact_UseSocketTransforms;                   // 0x0EB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB5[0x3];                                      // 0x0EB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Impact_MeleeSocket;                                // 0x0EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_NPCAbilityNonAttackRoar;                        // 0x0EC0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystemComponent*               FlingerRangedFX;                                   // 0x0ED8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        FlingerRangedSkullFXTemplate;                      // 0x0EDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        FlingerRangedHuskFXTemplate;                       // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_FlingerPawn(int32 EntryPoint);
	void GameplayCue_NPC_Flinger_Ranged_Grab_NPC(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_NPC_Ranged_Throw(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_NPC_Ranged_Grab(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void GameplayCue_Impact_Physical_Creature(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void AdditiveHitReactDelay();
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnForceSpawnEffectCompletion();
	void OnSpawnedFromRift();
	void PortalCollision(bool Collide_);
	void PortalFX();
	void PortalGet(class ABuildingActor* BuildingActor, TArray<class ABuildingActor*>& BuildingActorList, class AActor* BT);
	void TakerSoulSuckInterrupted();
	void PortalClear();
	void PortalAdd(class ABuildingActor* BuildingActor, TArray<class ABuildingActor*>& BuildingActorList);
	void TakerSoulSuckSoundEnd();
	void TakerSoulSuckSoundBegin(bool Success);
	void TakerAttackFSM(bool SuccessfulHit);
	void IsTakerWallPortalAvailable(bool Portal_Available_);
	void TakerWallPortalBehavior(class AActor* BuildingPart, class UBTTask_BlueprintBase* Task, const struct FVector& DesiredMoveLocation, bool Debug);
	void EndTakerSwoopAttack();
	void BeginTakerSwoopAttack();
	void ResetTakerSpecialAttackTimer(bool Swoop, bool SoulSuckMelee, bool Portal);
	void VerifyTakerAttack(bool SpecialAttack, bool Swoop, bool Soul_Suck, bool Portal);
	void HuskEvadeStart();
	void MantleEnd();
	void MantleStart(const struct FVector& StartPos, const struct FVector& MidPos, const struct FVector& EndPos, bool LowWall, bool MidWall, bool FullWall, bool WindowWall);
	void FlingerEnemyDied(class APawn* PawnThatDied);
	void AlertEnemySpawnedByFlinger(const struct FVector& PushMomentum_0, float PushDuration, class APawn* OwningFlinger);
	void FlingerEnemyFailedToSpawn(class AFortProjectileBase* FailedProjectile);
	void FlingerThrewAProjectileContainingAnEnemy(class AFortProjectileBase* Projectile);
	void FlingerCan_tSpawnAnEnemy();
	void FlingerCanSpawnAnEnemy();
	void CanFlingerSpawnAnEnemy(class AActor* ActorWhoAsked);
	void FlingerSpawnedAnEnemy(class AFortAIPawn* EnemySpawned, class AFortProjectileBase* ProjectileThatSpawnedThisEnemy);
	void Disolve___Particle_Trigger__Spawn_Death_FX__EventFunc();
	void Disolve___Particle_Trigger__UpdateFunc();
	void Disolve___Particle_Trigger__FinishedFunc();
	void Timeline_0__Spawn__EventFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	bool OnReceiveSpawnGroup();
	bool IsReadyToReceiveNewSpawnGroup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FlingerPawn_C">();
	}
	static class AFlingerPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlingerPawn_C>();
	}
};
static_assert(alignof(AFlingerPawn_C) == 0x000010, "Wrong alignment on AFlingerPawn_C");
static_assert(sizeof(AFlingerPawn_C) == 0x000EF0, "Wrong size on AFlingerPawn_C");
static_assert(offsetof(AFlingerPawn_C, UberGraphFrame) == 0x000E50, "Member 'AFlingerPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Disolve___Particle_Trigger_Disolve_The_Enemy_F0337528460D20BFFECC03A7A471C144) == 0x000E54, "Member 'AFlingerPawn_C::Disolve___Particle_Trigger_Disolve_The_Enemy_F0337528460D20BFFECC03A7A471C144' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Disolve___Particle_Trigger__Direction_F0337528460D20BFFECC03A7A471C144) == 0x000E58, "Member 'AFlingerPawn_C::Disolve___Particle_Trigger__Direction_F0337528460D20BFFECC03A7A471C144' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Disolve___Particle_Trigger) == 0x000E5C, "Member 'AFlingerPawn_C::Disolve___Particle_Trigger' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0_ColorFadeOutTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28) == 0x000E60, "Member 'AFlingerPawn_C::Timeline_0_ColorFadeOutTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0_FadeInTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28) == 0x000E64, "Member 'AFlingerPawn_C::Timeline_0_FadeInTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0__Direction_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28) == 0x000E68, "Member 'AFlingerPawn_C::Timeline_0__Direction_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0) == 0x000E6C, "Member 'AFlingerPawn_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, MontagePlayTime) == 0x000E70, "Member 'AFlingerPawn_C::MontagePlayTime' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, PawnHeldByFlinger) == 0x000E74, "Member 'AFlingerPawn_C::PawnHeldByFlinger' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, TC_WasThisAMeleeStrike) == 0x000E78, "Member 'AFlingerPawn_C::TC_WasThisAMeleeStrike' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ElementalType) == 0x000E90, "Member 'AFlingerPawn_C::ElementalType' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, AmbientParticleEffect) == 0x000E94, "Member 'AFlingerPawn_C::AmbientParticleEffect' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactMeleeSocket) == 0x000E98, "Member 'AFlingerPawn_C::ImpactMeleeSocket' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Default) == 0x000EA0, "Member 'AFlingerPawn_C::ImpactParticles_Default' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Wood) == 0x000EA4, "Member 'AFlingerPawn_C::ImpactParticles_Wood' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Stone) == 0x000EA8, "Member 'AFlingerPawn_C::ImpactParticles_Stone' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Metal) == 0x000EAC, "Member 'AFlingerPawn_C::ImpactParticles_Metal' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_HumanFlesh) == 0x000EB0, "Member 'AFlingerPawn_C::ImpactParticles_HumanFlesh' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, MeleeImpact_UseSocketTransforms) == 0x000EB4, "Member 'AFlingerPawn_C::MeleeImpact_UseSocketTransforms' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Impact_MeleeSocket) == 0x000EB8, "Member 'AFlingerPawn_C::Impact_MeleeSocket' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, TC_NPCAbilityNonAttackRoar) == 0x000EC0, "Member 'AFlingerPawn_C::TC_NPCAbilityNonAttackRoar' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, FlingerRangedFX) == 0x000ED8, "Member 'AFlingerPawn_C::FlingerRangedFX' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, FlingerRangedSkullFXTemplate) == 0x000EDC, "Member 'AFlingerPawn_C::FlingerRangedSkullFXTemplate' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, FlingerRangedHuskFXTemplate) == 0x000EE0, "Member 'AFlingerPawn_C::FlingerRangedHuskFXTemplate' has a wrong offset!");

}

#pragma pack(pop)
