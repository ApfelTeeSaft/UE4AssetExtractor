#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlingerPawn

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "ElementalEnum_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function FlingerPawn.FlingerPawn_C.ExecuteUbergraph_FlingerPawn
// 0x0B50 (0x0B50 - 0x0000)
struct FlingerPawn_C_ExecuteUbergraph_FlingerPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortAIPawn*                            K2Node_Event_EnemySpawned;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    K2Node_Event_ProjectileThatSpawnedThisEnemy;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_ActorWhoAsked;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    K2Node_Event_Projectile;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    K2Node_Event_FailedProjectile;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_PushMomentum;                         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_PushDuration;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_Event_OwningFlinger;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_Event_PawnThatDied;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_StartPos;                             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_MidPos;                               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_EndPos;                               // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_LowWall;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_MidWall;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_FullWall;                             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_WindowWall;                           // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpecialAttack;                        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Swoop2;                               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Soul_Suck;                            // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Portal2;                              // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Swoop;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SoulSuckMelee;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Portal;                               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_BuildingPart;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBTTask_BlueprintBase*                  K2Node_Event_Task;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_DesiredMoveLocation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Debug;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Portal_Available_;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SuccessfulHit;                        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Success;                              // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABuildingActor*                         K2Node_Event_BuildingActor2;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABuildingActor*>                 K2Node_Event_BuildingActorList2;                   // 0x0080(0x000C)(ZeroConstructor, ReferenceParm)
	class ABuildingActor*                         K2Node_Event_BuildingActor;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABuildingActor*>                 K2Node_Event_BuildingActorList;                    // 0x0090(0x000C)(ZeroConstructor, ReferenceParm)
	class AActor*                                 K2Node_Event_BT;                                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Collide_;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_Rift_Portals_C*                      K2Node_DynamicCast_AsB_Rift_Portals;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue2;       // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue2; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue3; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E4[0xC];                                      // 0x01E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetPawnMID_ReturnValue;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetPawnMID_ReturnValue2;                  // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage3;                              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags3;                          // 0x028C(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum3;                            // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo3;                             // 0x02B0(0x0080)(ConstParm, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy3;                        // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser3;                        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext3;                       // 0x0338(0x000C)()
	bool                                          CallFunc_IsFullBodyHit_ReturnValue;                // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346[0x2];                                      // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_SetFNameBasedOnHitDirection_NameResult;   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0354(0x0004)()
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue;             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue2;            // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage2;                              // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags2;                          // 0x036C(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum2;                            // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo2;                             // 0x0390(0x0080)(ConstParm, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy2;                        // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser2;                        // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext2;                       // 0x0418(0x000C)()
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType4;                // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters4;               // 0x0428(0x0084)()
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x04AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue;                 // 0x04BC(0x0080)(ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetFortPhysicalSurface_ReturnValue;       // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x053E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53F[0x1];                                      // 0x053F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x05A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue2;                // 0x05B0(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit2;             // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap2;          // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_632[0x2];                                      // 0x0632(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time2;                     // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location2;                 // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint2;              // 0x0644(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal2;                   // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal2;             // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat2;                  // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor2;                 // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent2;             // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName2;              // 0x0674(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem2;                  // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart2;               // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd2;                 // 0x068C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                             CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue; // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue2;      // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage;                               // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x06A8(0x0018)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x06CC(0x0080)(ConstParm, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0754(0x000C)()
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue2;          // 0x0760(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit3;             // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap3;          // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_792[0x2];                                      // 0x0792(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time3;                     // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location3;                 // 0x0798(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint3;              // 0x07A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal3;                   // 0x07B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal3;             // 0x07BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat3;                  // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor3;                 // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent3;             // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName3;              // 0x07D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem3;                  // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart3;               // 0x07E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd3;                 // 0x07EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x07F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x0804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x0810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue3;      // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateAbilitiesByTag_ReturnValue;    // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_821[0xF];                                      // 0x0821(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0830(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType3;                // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0x3];                                      // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters3;               // 0x0864(0x0084)()
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType2;                // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters2;               // 0x08EC(0x0084)()
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0974(0x0080)(ContainsInstancedReference)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x09FC(0x0084)()
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue2;        // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A84[0xC];                                      // 0x0A84(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable2;                             // 0x0A90(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue2;                // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult2;     // 0x0AC4(0x0080)(ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_GetPawnMID_ReturnValue3;                  // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn) == 0x000010, "Wrong alignment on FlingerPawn_C_ExecuteUbergraph_FlingerPawn");
static_assert(sizeof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn) == 0x000B50, "Wrong size on FlingerPawn_C_ExecuteUbergraph_FlingerPawn");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, EntryPoint) == 0x000000, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_byte_Variable) == 0x000004, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_HasAuthority_ReturnValue) == 0x000007, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EnemySpawned) == 0x000008, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EnemySpawned' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_ProjectileThatSpawnedThisEnemy) == 0x00000C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_ProjectileThatSpawnedThisEnemy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_ActorWhoAsked) == 0x000010, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_ActorWhoAsked' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Projectile) == 0x000014, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Projectile' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_FailedProjectile) == 0x000018, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_FailedProjectile' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_PushMomentum) == 0x00001C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_PushMomentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_PushDuration) == 0x000028, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_PushDuration' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_OwningFlinger) == 0x00002C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_OwningFlinger' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_PawnThatDied) == 0x000030, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_PawnThatDied' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_StartPos) == 0x000034, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_StartPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_MidPos) == 0x000040, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_MidPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EndPos) == 0x00004C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EndPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_LowWall) == 0x000058, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_LowWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_MidWall) == 0x000059, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_MidWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_FullWall) == 0x00005A, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_FullWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_WindowWall) == 0x00005B, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_WindowWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_SpecialAttack) == 0x00005C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_SpecialAttack' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Swoop2) == 0x00005D, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Swoop2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Soul_Suck) == 0x00005E, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Soul_Suck' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Portal2) == 0x00005F, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Portal2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Swoop) == 0x000060, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Swoop' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_SoulSuckMelee) == 0x000061, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_SoulSuckMelee' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Portal) == 0x000062, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Portal' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingPart) == 0x000064, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingPart' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Task) == 0x000068, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Task' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DesiredMoveLocation) == 0x00006C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DesiredMoveLocation' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Debug) == 0x000078, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Debug' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Portal_Available_) == 0x000079, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Portal_Available_' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_SuccessfulHit) == 0x00007A, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_SuccessfulHit' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Success) == 0x00007B, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Success' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActor2) == 0x00007C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActor2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActorList2) == 0x000080, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActorList2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActor) == 0x00008C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActorList) == 0x000090, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActorList' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BT) == 0x00009C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BT' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Collide_) == 0x0000A0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Collide_' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetActorBounds_Origin) == 0x0000A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetActorBounds_BoxExtent) == 0x0000B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_DynamicCast_AsB_Rift_Portals) == 0x0000BC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_DynamicCast_AsB_Rift_Portals' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000DC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x0000F4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x0000F8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000104, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000110, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_VectorVector_ReturnValue2) == 0x00011C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000128, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Normal_ReturnValue) == 0x000138, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000144, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000150, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeTransform_ReturnValue2) == 0x000190, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue2) == 0x0001C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue3) == 0x0001C4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_Origin) == 0x0001C8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_BoxExtent) == 0x0001D4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_SphereRadius) == 0x0001E0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketTransform_ReturnValue) == 0x0001F0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Location) == 0x000220, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Rotation) == 0x00022C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Scale) == 0x000238, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketLocation_ReturnValue) == 0x000244, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000250, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x000254, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_VSize_ReturnValue) == 0x000260, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_X) == 0x000264, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Y) == 0x000268, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Z) == 0x00026C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000270, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000274, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000278, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetOwner_ReturnValue) == 0x00027C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetPawnMID_ReturnValue) == 0x000280, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetPawnMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetPawnMID_ReturnValue2) == 0x000284, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetPawnMID_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Damage3) == 0x000288, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Damage3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageTags3) == 0x00028C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageTags3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Momentum3) == 0x0002A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Momentum3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_HitInfo3) == 0x0002B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_HitInfo3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_InstigatedBy3) == 0x000330, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_InstigatedBy3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageCauser3) == 0x000334, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageCauser3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EffectContext3) == 0x000338, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EffectContext3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsFullBodyHit_ReturnValue) == 0x000344, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsFullBodyHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Not_PreBool_ReturnValue) == 0x000345, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SetFNameBasedOnHitDirection_NameResult) == 0x000348, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SetFNameBasedOnHitDirection_NameResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_PlayAnimMontage_ReturnValue) == 0x000350, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_SetTimer_ReturnValue) == 0x000354, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetCurrentMontage_ReturnValue) == 0x000358, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue) == 0x00035C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetEncounterInfo_ReturnValue) == 0x000360, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetEncounterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetEncounterInfo_ReturnValue2) == 0x000364, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetEncounterInfo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Damage2) == 0x000368, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Damage2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageTags2) == 0x00036C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageTags2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Momentum2) == 0x000384, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Momentum2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_HitInfo2) == 0x000390, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_HitInfo2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_InstigatedBy2) == 0x000410, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_InstigatedBy2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageCauser2) == 0x000414, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageCauser2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EffectContext2) == 0x000418, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EffectContext2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType4) == 0x000424, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType4' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters4) == 0x000428, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters4' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeColor_ReturnValue) == 0x0004AC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetHitResult_ReturnValue) == 0x0004BC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetFortPhysicalSurface_ReturnValue) == 0x00053C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetFortPhysicalSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bBlockingHit) == 0x00053D, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bInitialOverlap) == 0x00053E, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Time) == 0x000540, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Location) == 0x000544, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactPoint) == 0x000550, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Normal) == 0x00055C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactNormal) == 0x000568, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_PhysMat) == 0x000574, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitActor) == 0x000578, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitComponent) == 0x00057C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitBoneName) == 0x000580, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitItem) == 0x000588, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceStart) == 0x00058C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceEnd) == 0x000598, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeRotFromX_ReturnValue) == 0x0005A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetHitResult_ReturnValue2) == 0x0005B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetHitResult_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bBlockingHit2) == 0x000630, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bBlockingHit2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bInitialOverlap2) == 0x000631, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bInitialOverlap2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Time2) == 0x000634, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Time2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Location2) == 0x000638, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Location2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactPoint2) == 0x000644, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactPoint2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Normal2) == 0x000650, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Normal2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactNormal2) == 0x00065C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactNormal2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_PhysMat2) == 0x000668, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_PhysMat2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitActor2) == 0x00066C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitActor2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitComponent2) == 0x000670, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitComponent2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitBoneName2) == 0x000674, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitBoneName2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitItem2) == 0x00067C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitItem2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceStart2) == 0x000680, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceStart2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceEnd2) == 0x00068C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceEnd2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue) == 0x000698, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Select_Default) == 0x00069C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue2) == 0x0006A0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Damage) == 0x0006A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageTags) == 0x0006A8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Momentum) == 0x0006C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_HitInfo) == 0x0006CC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_InstigatedBy) == 0x00074C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageCauser) == 0x000750, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EffectContext) == 0x000754, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketTransform_ReturnValue2) == 0x000760, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bBlockingHit3) == 0x000790, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bBlockingHit3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bInitialOverlap3) == 0x000791, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bInitialOverlap3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Time3) == 0x000794, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Time3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Location3) == 0x000798, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Location3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactPoint3) == 0x0007A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactPoint3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Normal3) == 0x0007B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Normal3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactNormal3) == 0x0007BC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactNormal3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_PhysMat3) == 0x0007C8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_PhysMat3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitActor3) == 0x0007CC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitActor3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitComponent3) == 0x0007D0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitComponent3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitBoneName3) == 0x0007D4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitBoneName3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitItem3) == 0x0007DC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitItem3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceStart3) == 0x0007E0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceStart3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceEnd3) == 0x0007EC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceEnd3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Location2) == 0x0007F8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Rotation2) == 0x000804, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Scale2) == 0x000810, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue3) == 0x00081C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_TryActivateAbilitiesByTag_ReturnValue) == 0x000820, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_TryActivateAbilitiesByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable) == 0x000830, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType3) == 0x000860, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters3) == 0x000864, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType2) == 0x0008E8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters2) == 0x0008EC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_AddComponent_ReturnValue) == 0x000970, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000974, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0009F4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType) == 0x0009F8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters) == 0x0009FC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue2) == 0x000A80, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable2) == 0x000A90, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_AddComponent_ReturnValue2) == 0x000AC0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_SetWorldTransform_SweepHitResult2) == 0x000AC4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_SetWorldTransform_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetPawnMID_ReturnValue3) == 0x000B44, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetPawnMID_ReturnValue3' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.NPC.Flinger.Ranged.Grab.NPC
// 0x0088 (0x0088 - 0x0000)
struct FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC) == 0x000004, "Wrong alignment on FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC");
static_assert(sizeof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC) == 0x000088, "Wrong size on FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC, Parameters) == 0x000004, "Member 'FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.NPC.Ranged.Throw
// 0x0088 (0x0088 - 0x0000)
struct FlingerPawn_C_GameplayCue_NPC_Ranged_Throw final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw) == 0x000004, "Wrong alignment on FlingerPawn_C_GameplayCue_NPC_Ranged_Throw");
static_assert(sizeof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw) == 0x000088, "Wrong size on FlingerPawn_C_GameplayCue_NPC_Ranged_Throw");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Throw::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw, Parameters) == 0x000004, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Throw::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.NPC.Ranged.Grab
// 0x0088 (0x0088 - 0x0000)
struct FlingerPawn_C_GameplayCue_NPC_Ranged_Grab final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab) == 0x000004, "Wrong alignment on FlingerPawn_C_GameplayCue_NPC_Ranged_Grab");
static_assert(sizeof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab) == 0x000088, "Wrong size on FlingerPawn_C_GameplayCue_NPC_Ranged_Grab");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Grab::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab, Parameters) == 0x000004, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Grab::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnDeathPlayEffects
// 0x00BC (0x00BC - 0x0000)
struct FlingerPawn_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(FlingerPawn_C_OnDeathPlayEffects) == 0x000004, "Wrong alignment on FlingerPawn_C_OnDeathPlayEffects");
static_assert(sizeof(FlingerPawn_C_OnDeathPlayEffects) == 0x0000BC, "Wrong size on FlingerPawn_C_OnDeathPlayEffects");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'FlingerPawn_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, DamageTags) == 0x000004, "Member 'FlingerPawn_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, Momentum) == 0x00001C, "Member 'FlingerPawn_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, HitInfo) == 0x000028, "Member 'FlingerPawn_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, InstigatedBy) == 0x0000A8, "Member 'FlingerPawn_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, DamageCauser) == 0x0000AC, "Member 'FlingerPawn_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, EffectContext) == 0x0000B0, "Member 'FlingerPawn_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.Impact.Physical.Creature
// 0x0088 (0x0088 - 0x0000)
struct FlingerPawn_C_GameplayCue_Impact_Physical_Creature final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature) == 0x000004, "Wrong alignment on FlingerPawn_C_GameplayCue_Impact_Physical_Creature");
static_assert(sizeof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature) == 0x000088, "Wrong size on FlingerPawn_C_GameplayCue_Impact_Physical_Creature");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_Impact_Physical_Creature::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature, Parameters) == 0x000004, "Member 'FlingerPawn_C_GameplayCue_Impact_Physical_Creature::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnDeathServer
// 0x00BC (0x00BC - 0x0000)
struct FlingerPawn_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(FlingerPawn_C_OnDeathServer) == 0x000004, "Wrong alignment on FlingerPawn_C_OnDeathServer");
static_assert(sizeof(FlingerPawn_C_OnDeathServer) == 0x0000BC, "Wrong size on FlingerPawn_C_OnDeathServer");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, Damage) == 0x000000, "Member 'FlingerPawn_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, DamageTags) == 0x000004, "Member 'FlingerPawn_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, Momentum) == 0x00001C, "Member 'FlingerPawn_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, HitInfo) == 0x000028, "Member 'FlingerPawn_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, InstigatedBy) == 0x0000A8, "Member 'FlingerPawn_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, DamageCauser) == 0x0000AC, "Member 'FlingerPawn_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, EffectContext) == 0x0000B0, "Member 'FlingerPawn_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnDamagePlayEffects
// 0x00BC (0x00BC - 0x0000)
struct FlingerPawn_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00B0(0x000C)(Parm)
};
static_assert(alignof(FlingerPawn_C_OnDamagePlayEffects) == 0x000004, "Wrong alignment on FlingerPawn_C_OnDamagePlayEffects");
static_assert(sizeof(FlingerPawn_C_OnDamagePlayEffects) == 0x0000BC, "Wrong size on FlingerPawn_C_OnDamagePlayEffects");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'FlingerPawn_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, DamageTags) == 0x000004, "Member 'FlingerPawn_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, Momentum) == 0x00001C, "Member 'FlingerPawn_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, HitInfo) == 0x000028, "Member 'FlingerPawn_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, InstigatedBy) == 0x0000A8, "Member 'FlingerPawn_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, DamageCauser) == 0x0000AC, "Member 'FlingerPawn_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, EffectContext) == 0x0000B0, "Member 'FlingerPawn_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.PortalCollision
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_PortalCollision final
{
public:
	bool                                          Collide_;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_PortalCollision) == 0x000001, "Wrong alignment on FlingerPawn_C_PortalCollision");
static_assert(sizeof(FlingerPawn_C_PortalCollision) == 0x000001, "Wrong size on FlingerPawn_C_PortalCollision");
static_assert(offsetof(FlingerPawn_C_PortalCollision, Collide_) == 0x000000, "Member 'FlingerPawn_C_PortalCollision::Collide_' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.PortalGet
// 0x0014 (0x0014 - 0x0000)
struct FlingerPawn_C_PortalGet final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABuildingActor*>                 BuildingActorList;                                 // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 BT;                                                // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_PortalGet) == 0x000004, "Wrong alignment on FlingerPawn_C_PortalGet");
static_assert(sizeof(FlingerPawn_C_PortalGet) == 0x000014, "Wrong size on FlingerPawn_C_PortalGet");
static_assert(offsetof(FlingerPawn_C_PortalGet, BuildingActor) == 0x000000, "Member 'FlingerPawn_C_PortalGet::BuildingActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_PortalGet, BuildingActorList) == 0x000004, "Member 'FlingerPawn_C_PortalGet::BuildingActorList' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_PortalGet, BT) == 0x000010, "Member 'FlingerPawn_C_PortalGet::BT' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.PortalAdd
// 0x0010 (0x0010 - 0x0000)
struct FlingerPawn_C_PortalAdd final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABuildingActor*>                 BuildingActorList;                                 // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FlingerPawn_C_PortalAdd) == 0x000004, "Wrong alignment on FlingerPawn_C_PortalAdd");
static_assert(sizeof(FlingerPawn_C_PortalAdd) == 0x000010, "Wrong size on FlingerPawn_C_PortalAdd");
static_assert(offsetof(FlingerPawn_C_PortalAdd, BuildingActor) == 0x000000, "Member 'FlingerPawn_C_PortalAdd::BuildingActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_PortalAdd, BuildingActorList) == 0x000004, "Member 'FlingerPawn_C_PortalAdd::BuildingActorList' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.TakerSoulSuckSoundBegin
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_TakerSoulSuckSoundBegin final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_TakerSoulSuckSoundBegin) == 0x000001, "Wrong alignment on FlingerPawn_C_TakerSoulSuckSoundBegin");
static_assert(sizeof(FlingerPawn_C_TakerSoulSuckSoundBegin) == 0x000001, "Wrong size on FlingerPawn_C_TakerSoulSuckSoundBegin");
static_assert(offsetof(FlingerPawn_C_TakerSoulSuckSoundBegin, Success) == 0x000000, "Member 'FlingerPawn_C_TakerSoulSuckSoundBegin::Success' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.TakerAttackFSM
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_TakerAttackFSM final
{
public:
	bool                                          SuccessfulHit;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_TakerAttackFSM) == 0x000001, "Wrong alignment on FlingerPawn_C_TakerAttackFSM");
static_assert(sizeof(FlingerPawn_C_TakerAttackFSM) == 0x000001, "Wrong size on FlingerPawn_C_TakerAttackFSM");
static_assert(offsetof(FlingerPawn_C_TakerAttackFSM, SuccessfulHit) == 0x000000, "Member 'FlingerPawn_C_TakerAttackFSM::SuccessfulHit' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.IsTakerWallPortalAvailable
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_IsTakerWallPortalAvailable final
{
public:
	bool                                          Portal_Available_;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_IsTakerWallPortalAvailable) == 0x000001, "Wrong alignment on FlingerPawn_C_IsTakerWallPortalAvailable");
static_assert(sizeof(FlingerPawn_C_IsTakerWallPortalAvailable) == 0x000001, "Wrong size on FlingerPawn_C_IsTakerWallPortalAvailable");
static_assert(offsetof(FlingerPawn_C_IsTakerWallPortalAvailable, Portal_Available_) == 0x000000, "Member 'FlingerPawn_C_IsTakerWallPortalAvailable::Portal_Available_' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.TakerWallPortalBehavior
// 0x0018 (0x0018 - 0x0000)
struct FlingerPawn_C_TakerWallPortalBehavior final
{
public:
	class AActor*                                 BuildingPart;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBTTask_BlueprintBase*                  Task;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                DesiredMoveLocation;                               // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_TakerWallPortalBehavior) == 0x000004, "Wrong alignment on FlingerPawn_C_TakerWallPortalBehavior");
static_assert(sizeof(FlingerPawn_C_TakerWallPortalBehavior) == 0x000018, "Wrong size on FlingerPawn_C_TakerWallPortalBehavior");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, BuildingPart) == 0x000000, "Member 'FlingerPawn_C_TakerWallPortalBehavior::BuildingPart' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, Task) == 0x000004, "Member 'FlingerPawn_C_TakerWallPortalBehavior::Task' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, DesiredMoveLocation) == 0x000008, "Member 'FlingerPawn_C_TakerWallPortalBehavior::DesiredMoveLocation' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, Debug) == 0x000014, "Member 'FlingerPawn_C_TakerWallPortalBehavior::Debug' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.ResetTakerSpecialAttackTimer
// 0x0003 (0x0003 - 0x0000)
struct FlingerPawn_C_ResetTakerSpecialAttackTimer final
{
public:
	bool                                          Swoop;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SoulSuckMelee;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Portal;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_ResetTakerSpecialAttackTimer) == 0x000001, "Wrong alignment on FlingerPawn_C_ResetTakerSpecialAttackTimer");
static_assert(sizeof(FlingerPawn_C_ResetTakerSpecialAttackTimer) == 0x000003, "Wrong size on FlingerPawn_C_ResetTakerSpecialAttackTimer");
static_assert(offsetof(FlingerPawn_C_ResetTakerSpecialAttackTimer, Swoop) == 0x000000, "Member 'FlingerPawn_C_ResetTakerSpecialAttackTimer::Swoop' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ResetTakerSpecialAttackTimer, SoulSuckMelee) == 0x000001, "Member 'FlingerPawn_C_ResetTakerSpecialAttackTimer::SoulSuckMelee' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ResetTakerSpecialAttackTimer, Portal) == 0x000002, "Member 'FlingerPawn_C_ResetTakerSpecialAttackTimer::Portal' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.VerifyTakerAttack
// 0x0004 (0x0004 - 0x0000)
struct FlingerPawn_C_VerifyTakerAttack final
{
public:
	bool                                          SpecialAttack;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Swoop;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Soul_Suck;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Portal;                                            // 0x0003(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_VerifyTakerAttack) == 0x000001, "Wrong alignment on FlingerPawn_C_VerifyTakerAttack");
static_assert(sizeof(FlingerPawn_C_VerifyTakerAttack) == 0x000004, "Wrong size on FlingerPawn_C_VerifyTakerAttack");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, SpecialAttack) == 0x000000, "Member 'FlingerPawn_C_VerifyTakerAttack::SpecialAttack' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, Swoop) == 0x000001, "Member 'FlingerPawn_C_VerifyTakerAttack::Swoop' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, Soul_Suck) == 0x000002, "Member 'FlingerPawn_C_VerifyTakerAttack::Soul_Suck' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, Portal) == 0x000003, "Member 'FlingerPawn_C_VerifyTakerAttack::Portal' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.MantleStart
// 0x0028 (0x0028 - 0x0000)
struct FlingerPawn_C_MantleStart final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                MidPos;                                            // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EndPos;                                            // 0x0018(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LowWall;                                           // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MidWall;                                           // 0x0025(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FullWall;                                          // 0x0026(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WindowWall;                                        // 0x0027(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_MantleStart) == 0x000004, "Wrong alignment on FlingerPawn_C_MantleStart");
static_assert(sizeof(FlingerPawn_C_MantleStart) == 0x000028, "Wrong size on FlingerPawn_C_MantleStart");
static_assert(offsetof(FlingerPawn_C_MantleStart, StartPos) == 0x000000, "Member 'FlingerPawn_C_MantleStart::StartPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, MidPos) == 0x00000C, "Member 'FlingerPawn_C_MantleStart::MidPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, EndPos) == 0x000018, "Member 'FlingerPawn_C_MantleStart::EndPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, LowWall) == 0x000024, "Member 'FlingerPawn_C_MantleStart::LowWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, MidWall) == 0x000025, "Member 'FlingerPawn_C_MantleStart::MidWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, FullWall) == 0x000026, "Member 'FlingerPawn_C_MantleStart::FullWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, WindowWall) == 0x000027, "Member 'FlingerPawn_C_MantleStart::WindowWall' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerEnemyDied
// 0x0004 (0x0004 - 0x0000)
struct FlingerPawn_C_FlingerEnemyDied final
{
public:
	class APawn*                                  PawnThatDied;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_FlingerEnemyDied) == 0x000004, "Wrong alignment on FlingerPawn_C_FlingerEnemyDied");
static_assert(sizeof(FlingerPawn_C_FlingerEnemyDied) == 0x000004, "Wrong size on FlingerPawn_C_FlingerEnemyDied");
static_assert(offsetof(FlingerPawn_C_FlingerEnemyDied, PawnThatDied) == 0x000000, "Member 'FlingerPawn_C_FlingerEnemyDied::PawnThatDied' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.AlertEnemySpawnedByFlinger
// 0x0014 (0x0014 - 0x0000)
struct FlingerPawn_C_AlertEnemySpawnedByFlinger final
{
public:
	struct FVector                                PushMomentum_0;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         PushDuration;                                      // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  OwningFlinger;                                     // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_AlertEnemySpawnedByFlinger) == 0x000004, "Wrong alignment on FlingerPawn_C_AlertEnemySpawnedByFlinger");
static_assert(sizeof(FlingerPawn_C_AlertEnemySpawnedByFlinger) == 0x000014, "Wrong size on FlingerPawn_C_AlertEnemySpawnedByFlinger");
static_assert(offsetof(FlingerPawn_C_AlertEnemySpawnedByFlinger, PushMomentum_0) == 0x000000, "Member 'FlingerPawn_C_AlertEnemySpawnedByFlinger::PushMomentum_0' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_AlertEnemySpawnedByFlinger, PushDuration) == 0x00000C, "Member 'FlingerPawn_C_AlertEnemySpawnedByFlinger::PushDuration' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_AlertEnemySpawnedByFlinger, OwningFlinger) == 0x000010, "Member 'FlingerPawn_C_AlertEnemySpawnedByFlinger::OwningFlinger' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerEnemyFailedToSpawn
// 0x0004 (0x0004 - 0x0000)
struct FlingerPawn_C_FlingerEnemyFailedToSpawn final
{
public:
	class AFortProjectileBase*                    FailedProjectile;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_FlingerEnemyFailedToSpawn) == 0x000004, "Wrong alignment on FlingerPawn_C_FlingerEnemyFailedToSpawn");
static_assert(sizeof(FlingerPawn_C_FlingerEnemyFailedToSpawn) == 0x000004, "Wrong size on FlingerPawn_C_FlingerEnemyFailedToSpawn");
static_assert(offsetof(FlingerPawn_C_FlingerEnemyFailedToSpawn, FailedProjectile) == 0x000000, "Member 'FlingerPawn_C_FlingerEnemyFailedToSpawn::FailedProjectile' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerThrewAProjectileContainingAnEnemy
// 0x0004 (0x0004 - 0x0000)
struct FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy final
{
public:
	class AFortProjectileBase*                    Projectile;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy) == 0x000004, "Wrong alignment on FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy");
static_assert(sizeof(FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy) == 0x000004, "Wrong size on FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy");
static_assert(offsetof(FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy, Projectile) == 0x000000, "Member 'FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy::Projectile' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.CanFlingerSpawnAnEnemy
// 0x0004 (0x0004 - 0x0000)
struct FlingerPawn_C_CanFlingerSpawnAnEnemy final
{
public:
	class AActor*                                 ActorWhoAsked;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_CanFlingerSpawnAnEnemy) == 0x000004, "Wrong alignment on FlingerPawn_C_CanFlingerSpawnAnEnemy");
static_assert(sizeof(FlingerPawn_C_CanFlingerSpawnAnEnemy) == 0x000004, "Wrong size on FlingerPawn_C_CanFlingerSpawnAnEnemy");
static_assert(offsetof(FlingerPawn_C_CanFlingerSpawnAnEnemy, ActorWhoAsked) == 0x000000, "Member 'FlingerPawn_C_CanFlingerSpawnAnEnemy::ActorWhoAsked' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerSpawnedAnEnemy
// 0x0008 (0x0008 - 0x0000)
struct FlingerPawn_C_FlingerSpawnedAnEnemy final
{
public:
	class AFortAIPawn*                            EnemySpawned;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    ProjectileThatSpawnedThisEnemy;                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_FlingerSpawnedAnEnemy) == 0x000004, "Wrong alignment on FlingerPawn_C_FlingerSpawnedAnEnemy");
static_assert(sizeof(FlingerPawn_C_FlingerSpawnedAnEnemy) == 0x000008, "Wrong size on FlingerPawn_C_FlingerSpawnedAnEnemy");
static_assert(offsetof(FlingerPawn_C_FlingerSpawnedAnEnemy, EnemySpawned) == 0x000000, "Member 'FlingerPawn_C_FlingerSpawnedAnEnemy::EnemySpawned' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_FlingerSpawnedAnEnemy, ProjectileThatSpawnedThisEnemy) == 0x000004, "Member 'FlingerPawn_C_FlingerSpawnedAnEnemy::ProjectileThatSpawnedThisEnemy' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.UserConstructionScript
// 0x0120 (0x0120 - 0x0000)
struct FlingerPawn_C_UserConstructionScript final
{
public:
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Temp_object_Variable2;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ElementalEnum                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Temp_object_Variable5;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Temp_object_Variable6;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	ElementalEnum                                 Temp_byte_Variable2;                               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Temp_object_Variable7;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Temp_object_Variable8;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0084(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select2_Default;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_UserConstructionScript) == 0x000010, "Wrong alignment on FlingerPawn_C_UserConstructionScript");
static_assert(sizeof(FlingerPawn_C_UserConstructionScript) == 0x000120, "Wrong size on FlingerPawn_C_UserConstructionScript");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable) == 0x000000, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable2) == 0x000004, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_byte_Variable) == 0x000008, "Member 'FlingerPawn_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable3) == 0x00000C, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable4) == 0x000010, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable5) == 0x000014, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable6) == 0x000018, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_struct_Variable) == 0x000020, "Member 'FlingerPawn_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_byte_Variable2) == 0x000050, "Member 'FlingerPawn_C_UserConstructionScript::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000054, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable7) == 0x000058, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue) == 0x00005C, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_GetSocketLocation_ReturnValue) == 0x000064, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable8) == 0x000080, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000084, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000104, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, K2Node_Select_Default) == 0x000108, "Member 'FlingerPawn_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00010C, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x00010D, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, K2Node_Select2_Default) == 0x000110, "Member 'FlingerPawn_C_UserConstructionScript::K2Node_Select2_Default' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnReceiveSpawnGroup
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_OnReceiveSpawnGroup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_OnReceiveSpawnGroup) == 0x000001, "Wrong alignment on FlingerPawn_C_OnReceiveSpawnGroup");
static_assert(sizeof(FlingerPawn_C_OnReceiveSpawnGroup) == 0x000001, "Wrong size on FlingerPawn_C_OnReceiveSpawnGroup");
static_assert(offsetof(FlingerPawn_C_OnReceiveSpawnGroup, ReturnValue) == 0x000000, "Member 'FlingerPawn_C_OnReceiveSpawnGroup::ReturnValue' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.IsReadyToReceiveNewSpawnGroup
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_IsReadyToReceiveNewSpawnGroup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_IsReadyToReceiveNewSpawnGroup) == 0x000001, "Wrong alignment on FlingerPawn_C_IsReadyToReceiveNewSpawnGroup");
static_assert(sizeof(FlingerPawn_C_IsReadyToReceiveNewSpawnGroup) == 0x000001, "Wrong size on FlingerPawn_C_IsReadyToReceiveNewSpawnGroup");
static_assert(offsetof(FlingerPawn_C_IsReadyToReceiveNewSpawnGroup, ReturnValue) == 0x000000, "Member 'FlingerPawn_C_IsReadyToReceiveNewSpawnGroup::ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
