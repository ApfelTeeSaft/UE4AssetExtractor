#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Fort_Entry_Music_Controller_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass Fort_Entry_Music_Controller_BP.Fort_Entry_Music_Controller_BP_C
// 0x0034 (0x0274 - 0x0240)
class AFort_Entry_Music_Controller_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        MenuMusic_B;                                       // 0x0244(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        MenuMusic_A;                                       // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        Hexmap_Music;                                      // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        Homebase_Music;                                    // 0x0250(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        OverView_Music;                                    // 0x0254(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        LobbyMusic;                                        // 0x0258(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        LlamaVO;                                           // 0x025C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        LoginMusic;                                        // 0x0260(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0264(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         FadeOutTime;                                       // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Current_Music_A;                             // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Current_Music_B;                             // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Fort_Entry_Music_Controller_BP(int32 EntryPoint);
	void VBucks_Menu_Enter();
	void Store_Intro_Loop();
	void Store_HitLlamaAndLoop();
	void Store_CardpackSummaryOpenAndLoop();
	void Store_Llama_HangingOut();
	void Store_Transition_To_Purchase();
	void Music_Store_CardIntro_Fadein();
	void Music_Vault_FadeIn();
	void Music_Heroes_FadeIn();
	void Music_Hexmap_FadeIn();
	void Music_HomeBase_FadeIn();
	void Music_WorldOverview_FadeIn();
	void Music_Lobby_FadeIn();
	void Music_Store_FadeIn();
	void Music_Login_FadeIn();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Fort_Entry_Music_Controller_BP_C">();
	}
	static class AFort_Entry_Music_Controller_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFort_Entry_Music_Controller_BP_C>();
	}
};
static_assert(alignof(AFort_Entry_Music_Controller_BP_C) == 0x000004, "Wrong alignment on AFort_Entry_Music_Controller_BP_C");
static_assert(sizeof(AFort_Entry_Music_Controller_BP_C) == 0x000274, "Wrong size on AFort_Entry_Music_Controller_BP_C");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, UberGraphFrame) == 0x000240, "Member 'AFort_Entry_Music_Controller_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, MenuMusic_B) == 0x000244, "Member 'AFort_Entry_Music_Controller_BP_C::MenuMusic_B' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, MenuMusic_A) == 0x000248, "Member 'AFort_Entry_Music_Controller_BP_C::MenuMusic_A' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, Hexmap_Music) == 0x00024C, "Member 'AFort_Entry_Music_Controller_BP_C::Hexmap_Music' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, Homebase_Music) == 0x000250, "Member 'AFort_Entry_Music_Controller_BP_C::Homebase_Music' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, OverView_Music) == 0x000254, "Member 'AFort_Entry_Music_Controller_BP_C::OverView_Music' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, LobbyMusic) == 0x000258, "Member 'AFort_Entry_Music_Controller_BP_C::LobbyMusic' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, LlamaVO) == 0x00025C, "Member 'AFort_Entry_Music_Controller_BP_C::LlamaVO' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, LoginMusic) == 0x000260, "Member 'AFort_Entry_Music_Controller_BP_C::LoginMusic' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, DefaultSceneRoot) == 0x000264, "Member 'AFort_Entry_Music_Controller_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, FadeOutTime) == 0x000268, "Member 'AFort_Entry_Music_Controller_BP_C::FadeOutTime' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, Sound_Current_Music_A) == 0x00026C, "Member 'AFort_Entry_Music_Controller_BP_C::Sound_Current_Music_A' has a wrong offset!");
static_assert(offsetof(AFort_Entry_Music_Controller_BP_C, Sound_Current_Music_B) == 0x000270, "Member 'AFort_Entry_Music_Controller_BP_C::Sound_Current_Music_B' has a wrong offset!");

}

#pragma pack(pop)
