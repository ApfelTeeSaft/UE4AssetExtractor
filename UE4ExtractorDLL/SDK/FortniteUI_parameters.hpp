#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Slate_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function FortniteUI.FortAbstractButtonGroup.HandleButtonClicked
// 0x0004 (0x0004 - 0x0000)
struct FortAbstractButtonGroup_HandleButtonClicked final
{
public:
	class UFortButton*                            Button;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAbstractButtonGroup_HandleButtonClicked) == 0x000004, "Wrong alignment on FortAbstractButtonGroup_HandleButtonClicked");
static_assert(sizeof(FortAbstractButtonGroup_HandleButtonClicked) == 0x000004, "Wrong size on FortAbstractButtonGroup_HandleButtonClicked");
static_assert(offsetof(FortAbstractButtonGroup_HandleButtonClicked, Button) == 0x000000, "Member 'FortAbstractButtonGroup_HandleButtonClicked::Button' has a wrong offset!");

// Function FortniteUI.FortAbstractButtonGroup.SetDataProvider
// 0x000C (0x000C - 0x0000)
struct FortAbstractButtonGroup_SetDataProvider final
{
public:
	TArray<class FText>                           InDataProvider;                                    // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAbstractButtonGroup_SetDataProvider) == 0x000004, "Wrong alignment on FortAbstractButtonGroup_SetDataProvider");
static_assert(sizeof(FortAbstractButtonGroup_SetDataProvider) == 0x00000C, "Wrong size on FortAbstractButtonGroup_SetDataProvider");
static_assert(offsetof(FortAbstractButtonGroup_SetDataProvider, InDataProvider) == 0x000000, "Member 'FortAbstractButtonGroup_SetDataProvider::InDataProvider' has a wrong offset!");

// Function FortniteUI.FortTabButtonGroup.GetTabButton
// 0x0008 (0x0008 - 0x0000)
struct FortTabButtonGroup_GetTabButton final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTabButton*                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabButtonGroup_GetTabButton) == 0x000004, "Wrong alignment on FortTabButtonGroup_GetTabButton");
static_assert(sizeof(FortTabButtonGroup_GetTabButton) == 0x000008, "Wrong size on FortTabButtonGroup_GetTabButton");
static_assert(offsetof(FortTabButtonGroup_GetTabButton, INDEX) == 0x000000, "Member 'FortTabButtonGroup_GetTabButton::INDEX' has a wrong offset!");
static_assert(offsetof(FortTabButtonGroup_GetTabButton, ReturnValue) == 0x000004, "Member 'FortTabButtonGroup_GetTabButton::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTabButtonGroup.SetInitialButtonSelection
// 0x0004 (0x0004 - 0x0000)
struct FortTabButtonGroup_SetInitialButtonSelection final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabButtonGroup_SetInitialButtonSelection) == 0x000004, "Wrong alignment on FortTabButtonGroup_SetInitialButtonSelection");
static_assert(sizeof(FortTabButtonGroup_SetInitialButtonSelection) == 0x000004, "Wrong size on FortTabButtonGroup_SetInitialButtonSelection");
static_assert(offsetof(FortTabButtonGroup_SetInitialButtonSelection, INDEX) == 0x000000, "Member 'FortTabButtonGroup_SetInitialButtonSelection::INDEX' has a wrong offset!");

// Function FortniteUI.FortActorCanvas.AddActorIndicator
// 0x0008 (0x0008 - 0x0000)
struct FortActorCanvas_AddActorIndicator final
{
public:
	class UFortActorIndicatorWidget*              Indicator;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortActorCanvasSlot*                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvas_AddActorIndicator) == 0x000004, "Wrong alignment on FortActorCanvas_AddActorIndicator");
static_assert(sizeof(FortActorCanvas_AddActorIndicator) == 0x000008, "Wrong size on FortActorCanvas_AddActorIndicator");
static_assert(offsetof(FortActorCanvas_AddActorIndicator, Indicator) == 0x000000, "Member 'FortActorCanvas_AddActorIndicator::Indicator' has a wrong offset!");
static_assert(offsetof(FortActorCanvas_AddActorIndicator, ReturnValue) == 0x000004, "Member 'FortActorCanvas_AddActorIndicator::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortActorCanvasSlot.SetCanAutoRemove
// 0x0001 (0x0001 - 0x0000)
struct FortActorCanvasSlot_SetCanAutoRemove final
{
public:
	bool                                          bAllowAutoRemove;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvasSlot_SetCanAutoRemove) == 0x000001, "Wrong alignment on FortActorCanvasSlot_SetCanAutoRemove");
static_assert(sizeof(FortActorCanvasSlot_SetCanAutoRemove) == 0x000001, "Wrong size on FortActorCanvasSlot_SetCanAutoRemove");
static_assert(offsetof(FortActorCanvasSlot_SetCanAutoRemove, bAllowAutoRemove) == 0x000000, "Member 'FortActorCanvasSlot_SetCanAutoRemove::bAllowAutoRemove' has a wrong offset!");

// Function FortniteUI.FortActorCanvasSlot.SetHorizontalAlignment
// 0x0001 (0x0001 - 0x0000)
struct FortActorCanvasSlot_SetHorizontalAlignment final
{
public:
	EHorizontalAlignment                          InHorizontalAlignment;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvasSlot_SetHorizontalAlignment) == 0x000001, "Wrong alignment on FortActorCanvasSlot_SetHorizontalAlignment");
static_assert(sizeof(FortActorCanvasSlot_SetHorizontalAlignment) == 0x000001, "Wrong size on FortActorCanvasSlot_SetHorizontalAlignment");
static_assert(offsetof(FortActorCanvasSlot_SetHorizontalAlignment, InHorizontalAlignment) == 0x000000, "Member 'FortActorCanvasSlot_SetHorizontalAlignment::InHorizontalAlignment' has a wrong offset!");

// Function FortniteUI.FortActorCanvasSlot.SetVerticalAlignment
// 0x0001 (0x0001 - 0x0000)
struct FortActorCanvasSlot_SetVerticalAlignment final
{
public:
	EVerticalAlignment                            InVerticalAlignment;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvasSlot_SetVerticalAlignment) == 0x000001, "Wrong alignment on FortActorCanvasSlot_SetVerticalAlignment");
static_assert(sizeof(FortActorCanvasSlot_SetVerticalAlignment) == 0x000001, "Wrong size on FortActorCanvasSlot_SetVerticalAlignment");
static_assert(offsetof(FortActorCanvasSlot_SetVerticalAlignment, InVerticalAlignment) == 0x000000, "Member 'FortActorCanvasSlot_SetVerticalAlignment::InVerticalAlignment' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_SetUIState.SetUIState
// 0x000C (0x000C - 0x0000)
struct FortAsyncAction_SetUIState_SetUIState final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIState                                  DesiredState;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_SetUIState*            ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_SetUIState_SetUIState) == 0x000004, "Wrong alignment on FortAsyncAction_SetUIState_SetUIState");
static_assert(sizeof(FortAsyncAction_SetUIState_SetUIState) == 0x00000C, "Wrong size on FortAsyncAction_SetUIState_SetUIState");
static_assert(offsetof(FortAsyncAction_SetUIState_SetUIState, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_SetUIState_SetUIState::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_SetUIState_SetUIState, DesiredState) == 0x000004, "Member 'FortAsyncAction_SetUIState_SetUIState::DesiredState' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_SetUIState_SetUIState, ReturnValue) == 0x000008, "Member 'FortAsyncAction_SetUIState_SetUIState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowConfirmation.ShowConfirmationDialog
// 0x0040 (0x0040 - 0x0000)
struct FortAsyncAction_ShowConfirmation_ShowConfirmationDialog final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0004(0x000C)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Message;                                           // 0x0010(0x000C)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ConfirmButtonText;                                 // 0x001C(0x000C)(Parm, NativeAccessSpecifierPublic)
	class FText                                   DeclineButtonText;                                 // 0x0028(0x000C)(Parm, NativeAccessSpecifierPublic)
	class UFortUserWidget*                        InAdditionalContent;                               // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDisplayTime;                                     // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowConfirmation*      ReturnValue;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog) == 0x000004, "Wrong alignment on FortAsyncAction_ShowConfirmation_ShowConfirmationDialog");
static_assert(sizeof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog) == 0x000040, "Wrong size on FortAsyncAction_ShowConfirmation_ShowConfirmationDialog");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, Title) == 0x000004, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::Title' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, Message) == 0x000010, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::Message' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, ConfirmButtonText) == 0x00001C, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::ConfirmButtonText' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, DeclineButtonText) == 0x000028, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::DeclineButtonText' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, InAdditionalContent) == 0x000034, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::InAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, InDisplayTime) == 0x000038, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::InDisplayTime' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, ReturnValue) == 0x00003C, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBangWrapper.SetBangVisibility
// 0x0001 (0x0001 - 0x0000)
struct FortBangWrapper_SetBangVisibility final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBangWrapper_SetBangVisibility) == 0x000001, "Wrong alignment on FortBangWrapper_SetBangVisibility");
static_assert(sizeof(FortBangWrapper_SetBangVisibility) == 0x000001, "Wrong size on FortBangWrapper_SetBangVisibility");
static_assert(offsetof(FortBangWrapper_SetBangVisibility, InVisible) == 0x000000, "Member 'FortBangWrapper_SetBangVisibility::InVisible' has a wrong offset!");

// Function FortniteUI.FortUserWidget._BPInvalidate
// 0x0008 (0x0008 - 0x0000)
struct FortUserWidget__BPInvalidate final
{
public:
	class FName                                   Type;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget__BPInvalidate) == 0x000004, "Wrong alignment on FortUserWidget__BPInvalidate");
static_assert(sizeof(FortUserWidget__BPInvalidate) == 0x000008, "Wrong size on FortUserWidget__BPInvalidate");
static_assert(offsetof(FortUserWidget__BPInvalidate, Type) == 0x000000, "Member 'FortUserWidget__BPInvalidate::Type' has a wrong offset!");

// Function FortniteUI.FortUserWidget.DispatchEvent
// 0x0008 (0x0008 - 0x0000)
struct FortUserWidget_DispatchEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget_DispatchEvent) == 0x000004, "Wrong alignment on FortUserWidget_DispatchEvent");
static_assert(sizeof(FortUserWidget_DispatchEvent) == 0x000008, "Wrong size on FortUserWidget_DispatchEvent");
static_assert(offsetof(FortUserWidget_DispatchEvent, EventName) == 0x000000, "Member 'FortUserWidget_DispatchEvent::EventName' has a wrong offset!");

// Function FortniteUI.FortUserWidget.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FortUserWidget_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget_PreConstruct) == 0x000001, "Wrong alignment on FortUserWidget_PreConstruct");
static_assert(sizeof(FortUserWidget_PreConstruct) == 0x000001, "Wrong size on FortUserWidget_PreConstruct");
static_assert(offsetof(FortUserWidget_PreConstruct, IsDesignTime) == 0x000000, "Member 'FortUserWidget_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FortniteUI.FortUserWidget.RegisterForEvent
// 0x0018 (0x0018 - 0x0000)
struct FortUserWidget_RegisterForEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UFortUserWidget* InWidget)> InCallback;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget_RegisterForEvent) == 0x000004, "Wrong alignment on FortUserWidget_RegisterForEvent");
static_assert(sizeof(FortUserWidget_RegisterForEvent) == 0x000018, "Wrong size on FortUserWidget_RegisterForEvent");
static_assert(offsetof(FortUserWidget_RegisterForEvent, EventName) == 0x000000, "Member 'FortUserWidget_RegisterForEvent::EventName' has a wrong offset!");
static_assert(offsetof(FortUserWidget_RegisterForEvent, InCallback) == 0x000008, "Member 'FortUserWidget_RegisterForEvent::InCallback' has a wrong offset!");

// Function FortniteUI.FortUserWidget.RegisterForInvalidation
// 0x0018 (0x0018 - 0x0000)
struct FortUserWidget_RegisterForInvalidation final
{
public:
	class FName                                   InvalidationType;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             Callback;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget_RegisterForInvalidation) == 0x000004, "Wrong alignment on FortUserWidget_RegisterForInvalidation");
static_assert(sizeof(FortUserWidget_RegisterForInvalidation) == 0x000018, "Wrong size on FortUserWidget_RegisterForInvalidation");
static_assert(offsetof(FortUserWidget_RegisterForInvalidation, InvalidationType) == 0x000000, "Member 'FortUserWidget_RegisterForInvalidation::InvalidationType' has a wrong offset!");
static_assert(offsetof(FortUserWidget_RegisterForInvalidation, Callback) == 0x000008, "Member 'FortUserWidget_RegisterForInvalidation::Callback' has a wrong offset!");

// Function FortniteUI.FortUserWidget.UnregisterForEvent
// 0x0018 (0x0018 - 0x0000)
struct FortUserWidget_UnregisterForEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UFortUserWidget* InWidget)> InCallback;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget_UnregisterForEvent) == 0x000004, "Wrong alignment on FortUserWidget_UnregisterForEvent");
static_assert(sizeof(FortUserWidget_UnregisterForEvent) == 0x000018, "Wrong size on FortUserWidget_UnregisterForEvent");
static_assert(offsetof(FortUserWidget_UnregisterForEvent, EventName) == 0x000000, "Member 'FortUserWidget_UnregisterForEvent::EventName' has a wrong offset!");
static_assert(offsetof(FortUserWidget_UnregisterForEvent, InCallback) == 0x000008, "Member 'FortUserWidget_UnregisterForEvent::InCallback' has a wrong offset!");

// Function FortniteUI.FortUserWidget.IsInvalid
// 0x000C (0x000C - 0x0000)
struct FortUserWidget_IsInvalid final
{
public:
	class FName                                   Type;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUserWidget_IsInvalid) == 0x000004, "Wrong alignment on FortUserWidget_IsInvalid");
static_assert(sizeof(FortUserWidget_IsInvalid) == 0x00000C, "Wrong size on FortUserWidget_IsInvalid");
static_assert(offsetof(FortUserWidget_IsInvalid, Type) == 0x000000, "Member 'FortUserWidget_IsInvalid::Type' has a wrong offset!");
static_assert(offsetof(FortUserWidget_IsInvalid, ReturnValue) == 0x000008, "Member 'FortUserWidget_IsInvalid::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetBrushBySizeFromMultiSizeBrush
// 0x0330 (0x0330 - 0x0000)
struct FortButtonStyle_GetBrushBySizeFromMultiSizeBrush final
{
public:
	struct FFortMultiSizeBrush                    MultiSizeBrush;                                    // 0x0000(0x02B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                Size;                                              // 0x02B8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x02BC(0x0074)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush) == 0x000004, "Wrong alignment on FortButtonStyle_GetBrushBySizeFromMultiSizeBrush");
static_assert(sizeof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush) == 0x000330, "Wrong size on FortButtonStyle_GetBrushBySizeFromMultiSizeBrush");
static_assert(offsetof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush, MultiSizeBrush) == 0x000000, "Member 'FortButtonStyle_GetBrushBySizeFromMultiSizeBrush::MultiSizeBrush' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush, Size) == 0x0002B8, "Member 'FortButtonStyle_GetBrushBySizeFromMultiSizeBrush::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush, ReturnValue) == 0x0002BC, "Member 'FortButtonStyle_GetBrushBySizeFromMultiSizeBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetFontBySizeFromMultiSizeFont
// 0x011C (0x011C - 0x0000)
struct FortButtonStyle_GetFontBySizeFromMultiSizeFont final
{
public:
	struct FFortMultiSizeFont                     MultiSizeFont;                                     // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                Size;                                              // 0x00F0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         ReturnValue;                                       // 0x00F4(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetFontBySizeFromMultiSizeFont) == 0x000004, "Wrong alignment on FortButtonStyle_GetFontBySizeFromMultiSizeFont");
static_assert(sizeof(FortButtonStyle_GetFontBySizeFromMultiSizeFont) == 0x00011C, "Wrong size on FortButtonStyle_GetFontBySizeFromMultiSizeFont");
static_assert(offsetof(FortButtonStyle_GetFontBySizeFromMultiSizeFont, MultiSizeFont) == 0x000000, "Member 'FortButtonStyle_GetFontBySizeFromMultiSizeFont::MultiSizeFont' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetFontBySizeFromMultiSizeFont, Size) == 0x0000F0, "Member 'FortButtonStyle_GetFontBySizeFromMultiSizeFont::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetFontBySizeFromMultiSizeFont, ReturnValue) == 0x0000F4, "Member 'FortButtonStyle_GetFontBySizeFromMultiSizeFont::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetMarginBySizeFromMultiSizeMargin
// 0x0074 (0x0074 - 0x0000)
struct FortButtonStyle_GetMarginBySizeFromMultiSizeMargin final
{
public:
	struct FFortMultiSizeMargin                   MultiSizeMargin;                                   // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                Size;                                              // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ReturnValue;                                       // 0x0064(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin) == 0x000004, "Wrong alignment on FortButtonStyle_GetMarginBySizeFromMultiSizeMargin");
static_assert(sizeof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin) == 0x000074, "Wrong size on FortButtonStyle_GetMarginBySizeFromMultiSizeMargin");
static_assert(offsetof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin, MultiSizeMargin) == 0x000000, "Member 'FortButtonStyle_GetMarginBySizeFromMultiSizeMargin::MultiSizeMargin' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin, Size) == 0x000060, "Member 'FortButtonStyle_GetMarginBySizeFromMultiSizeMargin::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin, ReturnValue) == 0x000064, "Member 'FortButtonStyle_GetMarginBySizeFromMultiSizeMargin::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetButtonPaddingBySize
// 0x0014 (0x0014 - 0x0000)
struct FortButtonStyle_GetButtonPaddingBySize final
{
public:
	EFortBrushSize                                Size;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ReturnValue;                                       // 0x0004(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetButtonPaddingBySize) == 0x000004, "Wrong alignment on FortButtonStyle_GetButtonPaddingBySize");
static_assert(sizeof(FortButtonStyle_GetButtonPaddingBySize) == 0x000014, "Wrong size on FortButtonStyle_GetButtonPaddingBySize");
static_assert(offsetof(FortButtonStyle_GetButtonPaddingBySize, Size) == 0x000000, "Member 'FortButtonStyle_GetButtonPaddingBySize::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetButtonPaddingBySize, ReturnValue) == 0x000004, "Member 'FortButtonStyle_GetButtonPaddingBySize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetCustomPaddingBySize
// 0x0014 (0x0014 - 0x0000)
struct FortButtonStyle_GetCustomPaddingBySize final
{
public:
	EFortBrushSize                                Size;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ReturnValue;                                       // 0x0004(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetCustomPaddingBySize) == 0x000004, "Wrong alignment on FortButtonStyle_GetCustomPaddingBySize");
static_assert(sizeof(FortButtonStyle_GetCustomPaddingBySize) == 0x000014, "Wrong size on FortButtonStyle_GetCustomPaddingBySize");
static_assert(offsetof(FortButtonStyle_GetCustomPaddingBySize, Size) == 0x000000, "Member 'FortButtonStyle_GetCustomPaddingBySize::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetCustomPaddingBySize, ReturnValue) == 0x000004, "Member 'FortButtonStyle_GetCustomPaddingBySize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetFontBySize
// 0x002C (0x002C - 0x0000)
struct FortButtonStyle_GetFontBySize final
{
public:
	EFortBrushSize                                Size;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0004(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetFontBySize) == 0x000004, "Wrong alignment on FortButtonStyle_GetFontBySize");
static_assert(sizeof(FortButtonStyle_GetFontBySize) == 0x00002C, "Wrong size on FortButtonStyle_GetFontBySize");
static_assert(offsetof(FortButtonStyle_GetFontBySize, Size) == 0x000000, "Member 'FortButtonStyle_GetFontBySize::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetFontBySize, ReturnValue) == 0x000004, "Member 'FortButtonStyle_GetFontBySize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetSelectionGroupIndex
// 0x0004 (0x0004 - 0x0000)
struct FortBaseButton_GetSelectionGroupIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetSelectionGroupIndex) == 0x000004, "Wrong alignment on FortBaseButton_GetSelectionGroupIndex");
static_assert(sizeof(FortBaseButton_GetSelectionGroupIndex) == 0x000004, "Wrong size on FortBaseButton_GetSelectionGroupIndex");
static_assert(offsetof(FortBaseButton_GetSelectionGroupIndex, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetSelectionGroupIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetBangVisibility
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetBangVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetBangVisibility) == 0x000001, "Wrong alignment on FortBaseButton_SetBangVisibility");
static_assert(sizeof(FortBaseButton_SetBangVisibility) == 0x000001, "Wrong size on FortBaseButton_SetBangVisibility");
static_assert(offsetof(FortBaseButton_SetBangVisibility, bVisible) == 0x000000, "Member 'FortBaseButton_SetBangVisibility::bVisible' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetBrushSize
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetBrushSize final
{
public:
	EFortBrushSize                                InSize;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetBrushSize) == 0x000001, "Wrong alignment on FortBaseButton_SetBrushSize");
static_assert(sizeof(FortBaseButton_SetBrushSize) == 0x000001, "Wrong size on FortBaseButton_SetBrushSize");
static_assert(offsetof(FortBaseButton_SetBrushSize, InSize) == 0x000000, "Member 'FortBaseButton_SetBrushSize::InSize' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetClickable
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetClickable final
{
public:
	bool                                          InClickable;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetClickable) == 0x000001, "Wrong alignment on FortBaseButton_SetClickable");
static_assert(sizeof(FortBaseButton_SetClickable) == 0x000001, "Wrong size on FortBaseButton_SetClickable");
static_assert(offsetof(FortBaseButton_SetClickable, InClickable) == 0x000000, "Member 'FortBaseButton_SetClickable::InClickable' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetClickMethod
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetClickMethod final
{
public:
	EButtonClickMethod                            InClickMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetClickMethod) == 0x000001, "Wrong alignment on FortBaseButton_SetClickMethod");
static_assert(sizeof(FortBaseButton_SetClickMethod) == 0x000001, "Wrong size on FortBaseButton_SetClickMethod");
static_assert(offsetof(FortBaseButton_SetClickMethod, InClickMethod) == 0x000000, "Member 'FortBaseButton_SetClickMethod::InClickMethod' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetHovered
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetHovered final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetHovered) == 0x000001, "Wrong alignment on FortBaseButton_SetHovered");
static_assert(sizeof(FortBaseButton_SetHovered) == 0x000001, "Wrong size on FortBaseButton_SetHovered");
static_assert(offsetof(FortBaseButton_SetHovered, InHovered) == 0x000000, "Member 'FortBaseButton_SetHovered::InHovered' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetSelected final
{
public:
	bool                                          InSelected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetSelected) == 0x000001, "Wrong alignment on FortBaseButton_SetSelected");
static_assert(sizeof(FortBaseButton_SetSelected) == 0x000001, "Wrong size on FortBaseButton_SetSelected");
static_assert(offsetof(FortBaseButton_SetSelected, InSelected) == 0x000000, "Member 'FortBaseButton_SetSelected::InSelected' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetSelectionGroup
// 0x0008 (0x0008 - 0x0000)
struct FortBaseButton_SetSelectionGroup final
{
public:
	class FName                                   InSelectionGroup;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetSelectionGroup) == 0x000004, "Wrong alignment on FortBaseButton_SetSelectionGroup");
static_assert(sizeof(FortBaseButton_SetSelectionGroup) == 0x000008, "Wrong size on FortBaseButton_SetSelectionGroup");
static_assert(offsetof(FortBaseButton_SetSelectionGroup, InSelectionGroup) == 0x000000, "Member 'FortBaseButton_SetSelectionGroup::InSelectionGroup' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetStyle
// 0x0004 (0x0004 - 0x0000)
struct FortBaseButton_SetStyle final
{
public:
	TSubclassOf<class UFortButtonStyle>           InStyle;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetStyle) == 0x000004, "Wrong alignment on FortBaseButton_SetStyle");
static_assert(sizeof(FortBaseButton_SetStyle) == 0x000004, "Wrong size on FortBaseButton_SetStyle");
static_assert(offsetof(FortBaseButton_SetStyle, InStyle) == 0x000000, "Member 'FortBaseButton_SetStyle::InStyle' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentButtonPadding
// 0x0010 (0x0010 - 0x0000)
struct FortBaseButton_GetCurrentButtonPadding final
{
public:
	struct FMargin                                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentButtonPadding) == 0x000004, "Wrong alignment on FortBaseButton_GetCurrentButtonPadding");
static_assert(sizeof(FortBaseButton_GetCurrentButtonPadding) == 0x000010, "Wrong size on FortBaseButton_GetCurrentButtonPadding");
static_assert(offsetof(FortBaseButton_GetCurrentButtonPadding, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentButtonPadding::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentCustomPadding
// 0x0010 (0x0010 - 0x0000)
struct FortBaseButton_GetCurrentCustomPadding final
{
public:
	struct FMargin                                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentCustomPadding) == 0x000004, "Wrong alignment on FortBaseButton_GetCurrentCustomPadding");
static_assert(sizeof(FortBaseButton_GetCurrentCustomPadding) == 0x000010, "Wrong size on FortBaseButton_GetCurrentCustomPadding");
static_assert(offsetof(FortBaseButton_GetCurrentCustomPadding, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentCustomPadding::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentFont
// 0x0028 (0x0028 - 0x0000)
struct FortBaseButton_GetCurrentFont final
{
public:
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentFont) == 0x000004, "Wrong alignment on FortBaseButton_GetCurrentFont");
static_assert(sizeof(FortBaseButton_GetCurrentFont) == 0x000028, "Wrong size on FortBaseButton_GetCurrentFont");
static_assert(offsetof(FortBaseButton_GetCurrentFont, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentFont::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentStateStyle
// 0x02D8 (0x02D8 - 0x0000)
struct FortBaseButton_GetCurrentStateStyle final
{
public:
	struct FFortStateStyle                        ReturnValue;                                       // 0x0000(0x02D8)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentStateStyle) == 0x000004, "Wrong alignment on FortBaseButton_GetCurrentStateStyle");
static_assert(sizeof(FortBaseButton_GetCurrentStateStyle) == 0x0002D8, "Wrong size on FortBaseButton_GetCurrentStateStyle");
static_assert(offsetof(FortBaseButton_GetCurrentStateStyle, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentStateStyle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetSelected
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_GetSelected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetSelected) == 0x000001, "Wrong alignment on FortBaseButton_GetSelected");
static_assert(sizeof(FortBaseButton_GetSelected) == 0x000001, "Wrong size on FortBaseButton_GetSelected");
static_assert(offsetof(FortBaseButton_GetSelected, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetStyle
// 0x0004 (0x0004 - 0x0000)
struct FortBaseButton_GetStyle final
{
public:
	class UFortButtonStyle*                       ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetStyle) == 0x000004, "Wrong alignment on FortBaseButton_GetStyle");
static_assert(sizeof(FortBaseButton_GetStyle) == 0x000004, "Wrong size on FortBaseButton_GetStyle");
static_assert(offsetof(FortBaseButton_GetStyle, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetStyle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.BindToFeatureStateAndInitialize
// 0x0014 (0x0014 - 0x0000)
struct FortFrontEndContext_BindToFeatureStateAndInitialize final
{
public:
	EFortFrontEndFeature                          Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortFrontEndFeature ChangedFeature, EFortFrontEndFeatureState NewState)> Delegate;                                          // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_BindToFeatureStateAndInitialize) == 0x000004, "Wrong alignment on FortFrontEndContext_BindToFeatureStateAndInitialize");
static_assert(sizeof(FortFrontEndContext_BindToFeatureStateAndInitialize) == 0x000014, "Wrong size on FortFrontEndContext_BindToFeatureStateAndInitialize");
static_assert(offsetof(FortFrontEndContext_BindToFeatureStateAndInitialize, Feature) == 0x000000, "Member 'FortFrontEndContext_BindToFeatureStateAndInitialize::Feature' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_BindToFeatureStateAndInitialize, Delegate) == 0x000004, "Member 'FortFrontEndContext_BindToFeatureStateAndInitialize::Delegate' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ClearNativeWidget
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_ClearNativeWidget final
{
public:
	class UNativeWidgetHost*                      InNativeWidgetHost;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ClearNativeWidget) == 0x000004, "Wrong alignment on FortFrontEndContext_ClearNativeWidget");
static_assert(sizeof(FortFrontEndContext_ClearNativeWidget) == 0x000004, "Wrong size on FortFrontEndContext_ClearNativeWidget");
static_assert(offsetof(FortFrontEndContext_ClearNativeWidget, InNativeWidgetHost) == 0x000000, "Member 'FortFrontEndContext_ClearNativeWidget::InNativeWidgetHost' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ForceSetFeatureState
// 0x0002 (0x0002 - 0x0000)
struct FortFrontEndContext_ForceSetFeatureState final
{
public:
	EFortFrontEndFeature                          Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFrontEndFeatureState                     State;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ForceSetFeatureState) == 0x000001, "Wrong alignment on FortFrontEndContext_ForceSetFeatureState");
static_assert(sizeof(FortFrontEndContext_ForceSetFeatureState) == 0x000002, "Wrong size on FortFrontEndContext_ForceSetFeatureState");
static_assert(offsetof(FortFrontEndContext_ForceSetFeatureState, Feature) == 0x000000, "Member 'FortFrontEndContext_ForceSetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_ForceSetFeatureState, State) == 0x000001, "Member 'FortFrontEndContext_ForceSetFeatureState::State' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAttributeDescription
// 0x0048 (0x0048 - 0x0000)
struct FortFrontEndContext_GetAttributeDescription final
{
public:
	struct FFortAttributeInfo                     InAttribute;                                       // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  InRequiredTags;                                    // 0x0024(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x003C(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAttributeDescription) == 0x000004, "Wrong alignment on FortFrontEndContext_GetAttributeDescription");
static_assert(sizeof(FortFrontEndContext_GetAttributeDescription) == 0x000048, "Wrong size on FortFrontEndContext_GetAttributeDescription");
static_assert(offsetof(FortFrontEndContext_GetAttributeDescription, InAttribute) == 0x000000, "Member 'FortFrontEndContext_GetAttributeDescription::InAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDescription, InRequiredTags) == 0x000024, "Member 'FortFrontEndContext_GetAttributeDescription::InRequiredTags' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDescription, ReturnValue) == 0x00003C, "Member 'FortFrontEndContext_GetAttributeDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAttributeDisplayName
// 0x0048 (0x0048 - 0x0000)
struct FortFrontEndContext_GetAttributeDisplayName final
{
public:
	struct FFortAttributeInfo                     InAttribute;                                       // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  InRequiredTags;                                    // 0x0024(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x003C(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAttributeDisplayName) == 0x000004, "Wrong alignment on FortFrontEndContext_GetAttributeDisplayName");
static_assert(sizeof(FortFrontEndContext_GetAttributeDisplayName) == 0x000048, "Wrong size on FortFrontEndContext_GetAttributeDisplayName");
static_assert(offsetof(FortFrontEndContext_GetAttributeDisplayName, InAttribute) == 0x000000, "Member 'FortFrontEndContext_GetAttributeDisplayName::InAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDisplayName, InRequiredTags) == 0x000024, "Member 'FortFrontEndContext_GetAttributeDisplayName::InRequiredTags' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDisplayName, ReturnValue) == 0x00003C, "Member 'FortFrontEndContext_GetAttributeDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAttributeIcon
// 0x02F4 (0x02F4 - 0x0000)
struct FortFrontEndContext_GetAttributeIcon final
{
public:
	struct FFortAttributeInfo                     InAttribute;                                       // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  InRequiredTags;                                    // 0x0024(0x0018)(Parm, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    ReturnValue;                                       // 0x003C(0x02B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAttributeIcon) == 0x000004, "Wrong alignment on FortFrontEndContext_GetAttributeIcon");
static_assert(sizeof(FortFrontEndContext_GetAttributeIcon) == 0x0002F4, "Wrong size on FortFrontEndContext_GetAttributeIcon");
static_assert(offsetof(FortFrontEndContext_GetAttributeIcon, InAttribute) == 0x000000, "Member 'FortFrontEndContext_GetAttributeIcon::InAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeIcon, InRequiredTags) == 0x000024, "Member 'FortFrontEndContext_GetAttributeIcon::InRequiredTags' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeIcon, ReturnValue) == 0x00003C, "Member 'FortFrontEndContext_GetAttributeIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetHeroPlayerPawnByIndex
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetHeroPlayerPawnByIndex final
{
public:
	int32                                         PartyMemberIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                        ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetHeroPlayerPawnByIndex) == 0x000004, "Wrong alignment on FortFrontEndContext_GetHeroPlayerPawnByIndex");
static_assert(sizeof(FortFrontEndContext_GetHeroPlayerPawnByIndex) == 0x000008, "Wrong size on FortFrontEndContext_GetHeroPlayerPawnByIndex");
static_assert(offsetof(FortFrontEndContext_GetHeroPlayerPawnByIndex, PartyMemberIndex) == 0x000000, "Member 'FortFrontEndContext_GetHeroPlayerPawnByIndex::PartyMemberIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetHeroPlayerPawnByIndex, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetHeroPlayerPawnByIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetPersistentResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetPersistentResourceItemDefinition final
{
public:
	EFortPersistentResources                      ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetPersistentResourceItemDefinition) == 0x000004, "Wrong alignment on FortFrontEndContext_GetPersistentResourceItemDefinition");
static_assert(sizeof(FortFrontEndContext_GetPersistentResourceItemDefinition) == 0x000008, "Wrong size on FortFrontEndContext_GetPersistentResourceItemDefinition");
static_assert(offsetof(FortFrontEndContext_GetPersistentResourceItemDefinition, ResourceType) == 0x000000, "Member 'FortFrontEndContext_GetPersistentResourceItemDefinition::ResourceType' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetPersistentResourceItemDefinition, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetPersistentResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSelectableGadgets
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetSelectableGadgets final
{
public:
	TArray<class UFortWorldItem*>                 SelectableGadgets;                                 // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                 LastSelectedGadgets;                               // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetSelectableGadgets) == 0x000004, "Wrong alignment on FortFrontEndContext_GetSelectableGadgets");
static_assert(sizeof(FortFrontEndContext_GetSelectableGadgets) == 0x000018, "Wrong size on FortFrontEndContext_GetSelectableGadgets");
static_assert(offsetof(FortFrontEndContext_GetSelectableGadgets, SelectableGadgets) == 0x000000, "Member 'FortFrontEndContext_GetSelectableGadgets::SelectableGadgets' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetSelectableGadgets, LastSelectedGadgets) == 0x00000C, "Member 'FortFrontEndContext_GetSelectableGadgets::LastSelectedGadgets' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.IsActiveTileMissionValid
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_IsActiveTileMissionValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_IsActiveTileMissionValid) == 0x000001, "Wrong alignment on FortFrontEndContext_IsActiveTileMissionValid");
static_assert(sizeof(FortFrontEndContext_IsActiveTileMissionValid) == 0x000001, "Wrong size on FortFrontEndContext_IsActiveTileMissionValid");
static_assert(offsetof(FortFrontEndContext_IsActiveTileMissionValid, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_IsActiveTileMissionValid::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.LoadOutpostView
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_LoadOutpostView final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_LoadOutpostView) == 0x000004, "Wrong alignment on FortFrontEndContext_LoadOutpostView");
static_assert(sizeof(FortFrontEndContext_LoadOutpostView) == 0x000008, "Wrong size on FortFrontEndContext_LoadOutpostView");
static_assert(offsetof(FortFrontEndContext_LoadOutpostView, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_LoadOutpostView::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_LoadOutpostView, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_LoadOutpostView::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.NotifyCreateBuildingClosed
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_NotifyCreateBuildingClosed final
{
public:
	class UHomeBaseBuilding*                      Building;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_NotifyCreateBuildingClosed) == 0x000004, "Wrong alignment on FortFrontEndContext_NotifyCreateBuildingClosed");
static_assert(sizeof(FortFrontEndContext_NotifyCreateBuildingClosed) == 0x000004, "Wrong size on FortFrontEndContext_NotifyCreateBuildingClosed");
static_assert(offsetof(FortFrontEndContext_NotifyCreateBuildingClosed, Building) == 0x000000, "Member 'FortFrontEndContext_NotifyCreateBuildingClosed::Building' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SelectGadgetForSlot
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_SelectGadgetForSlot final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                    GadgetDefinition;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SelectGadgetForSlot) == 0x000004, "Wrong alignment on FortFrontEndContext_SelectGadgetForSlot");
static_assert(sizeof(FortFrontEndContext_SelectGadgetForSlot) == 0x000008, "Wrong size on FortFrontEndContext_SelectGadgetForSlot");
static_assert(offsetof(FortFrontEndContext_SelectGadgetForSlot, Slot) == 0x000000, "Member 'FortFrontEndContext_SelectGadgetForSlot::Slot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SelectGadgetForSlot, GadgetDefinition) == 0x000004, "Member 'FortFrontEndContext_SelectGadgetForSlot::GadgetDefinition' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetFrontEndCamera
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_SetFrontEndCamera final
{
public:
	EFrontEndCamera                               NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetFrontEndCamera) == 0x000001, "Wrong alignment on FortFrontEndContext_SetFrontEndCamera");
static_assert(sizeof(FortFrontEndContext_SetFrontEndCamera) == 0x000001, "Wrong size on FortFrontEndContext_SetFrontEndCamera");
static_assert(offsetof(FortFrontEndContext_SetFrontEndCamera, NewState) == 0x000000, "Member 'FortFrontEndContext_SetFrontEndCamera::NewState' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetHeroChoice
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_SetHeroChoice final
{
public:
	int32                                         PartyMemberIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHero*                              Hero;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetHeroChoice) == 0x000004, "Wrong alignment on FortFrontEndContext_SetHeroChoice");
static_assert(sizeof(FortFrontEndContext_SetHeroChoice) == 0x000008, "Wrong size on FortFrontEndContext_SetHeroChoice");
static_assert(offsetof(FortFrontEndContext_SetHeroChoice, PartyMemberIndex) == 0x000000, "Member 'FortFrontEndContext_SetHeroChoice::PartyMemberIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SetHeroChoice, Hero) == 0x000004, "Member 'FortFrontEndContext_SetHeroChoice::Hero' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetPersonalHeroChoice
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_SetPersonalHeroChoice final
{
public:
	class UFortHero*                              Hero;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetPersonalHeroChoice) == 0x000004, "Wrong alignment on FortFrontEndContext_SetPersonalHeroChoice");
static_assert(sizeof(FortFrontEndContext_SetPersonalHeroChoice) == 0x000004, "Wrong size on FortFrontEndContext_SetPersonalHeroChoice");
static_assert(offsetof(FortFrontEndContext_SetPersonalHeroChoice, Hero) == 0x000000, "Member 'FortFrontEndContext_SetPersonalHeroChoice::Hero' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetSelectedTheater
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_SetSelectedTheater final
{
public:
	int32                                         TheaterIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetSelectedTheater) == 0x000004, "Wrong alignment on FortFrontEndContext_SetSelectedTheater");
static_assert(sizeof(FortFrontEndContext_SetSelectedTheater) == 0x000004, "Wrong size on FortFrontEndContext_SetSelectedTheater");
static_assert(offsetof(FortFrontEndContext_SetSelectedTheater, TheaterIndex) == 0x000000, "Member 'FortFrontEndContext_SetSelectedTheater::TheaterIndex' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ViewVaultItem
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_ViewVaultItem final
{
public:
	class UFortItem*                              ItemToView;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ViewVaultItem) == 0x000004, "Wrong alignment on FortFrontEndContext_ViewVaultItem");
static_assert(sizeof(FortFrontEndContext_ViewVaultItem) == 0x000004, "Wrong size on FortFrontEndContext_ViewVaultItem");
static_assert(offsetof(FortFrontEndContext_ViewVaultItem, ItemToView) == 0x000000, "Member 'FortFrontEndContext_ViewVaultItem::ItemToView' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.CreateKeepMenu
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_CreateKeepMenu final
{
public:
	class UNativeWidgetHost*                      InNativeWidgetHost;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHomeBaseBuilding*                      Building;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_CreateKeepMenu) == 0x000004, "Wrong alignment on FortFrontEndContext_CreateKeepMenu");
static_assert(sizeof(FortFrontEndContext_CreateKeepMenu) == 0x000008, "Wrong size on FortFrontEndContext_CreateKeepMenu");
static_assert(offsetof(FortFrontEndContext_CreateKeepMenu, InNativeWidgetHost) == 0x000000, "Member 'FortFrontEndContext_CreateKeepMenu::InNativeWidgetHost' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_CreateKeepMenu, Building) == 0x000004, "Member 'FortFrontEndContext_CreateKeepMenu::Building' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAccountLevelUpRewards
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetAccountLevelUpRewards final
{
public:
	TArray<struct FFortItemQuantityPair>          Rewards;                                           // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         AccountLevel;                                      // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAccountLevelUpRewards) == 0x000004, "Wrong alignment on FortFrontEndContext_GetAccountLevelUpRewards");
static_assert(sizeof(FortFrontEndContext_GetAccountLevelUpRewards) == 0x000010, "Wrong size on FortFrontEndContext_GetAccountLevelUpRewards");
static_assert(offsetof(FortFrontEndContext_GetAccountLevelUpRewards, Rewards) == 0x000000, "Member 'FortFrontEndContext_GetAccountLevelUpRewards::Rewards' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAccountLevelUpRewards, AccountLevel) == 0x00000C, "Member 'FortFrontEndContext_GetAccountLevelUpRewards::AccountLevel' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetActiveTile
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_GetActiveTile final
{
public:
	class AFortTheaterMapTile*                    ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetActiveTile) == 0x000004, "Wrong alignment on FortFrontEndContext_GetActiveTile");
static_assert(sizeof(FortFrontEndContext_GetActiveTile) == 0x000004, "Wrong size on FortFrontEndContext_GetActiveTile");
static_assert(offsetof(FortFrontEndContext_GetActiveTile, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetActiveTile::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetActiveTileMissionDetails
// 0x0094 (0x0094 - 0x0000)
struct FortFrontEndContext_GetActiveTileMissionDetails final
{
public:
	struct FFortMissionDetails                    MissionDetails;                                    // 0x0000(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetActiveTileMissionDetails) == 0x000004, "Wrong alignment on FortFrontEndContext_GetActiveTileMissionDetails");
static_assert(sizeof(FortFrontEndContext_GetActiveTileMissionDetails) == 0x000094, "Wrong size on FortFrontEndContext_GetActiveTileMissionDetails");
static_assert(offsetof(FortFrontEndContext_GetActiveTileMissionDetails, MissionDetails) == 0x000000, "Member 'FortFrontEndContext_GetActiveTileMissionDetails::MissionDetails' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetActiveTileMissionDetails, ReturnValue) == 0x000090, "Member 'FortFrontEndContext_GetActiveTileMissionDetails::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAllTheaterData
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetAllTheaterData final
{
public:
	TArray<struct FFortTheaterMapData>            OutAllTheaterData;                                 // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetAllTheaterData) == 0x000004, "Wrong alignment on FortFrontEndContext_GetAllTheaterData");
static_assert(sizeof(FortFrontEndContext_GetAllTheaterData) == 0x000010, "Wrong size on FortFrontEndContext_GetAllTheaterData");
static_assert(offsetof(FortFrontEndContext_GetAllTheaterData, OutAllTheaterData) == 0x000000, "Member 'FortFrontEndContext_GetAllTheaterData::OutAllTheaterData' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAllTheaterData, ReturnValue) == 0x00000C, "Member 'FortFrontEndContext_GetAllTheaterData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAvailibleDifficulties
// 0x000C (0x000C - 0x0000)
struct FortFrontEndContext_GetAvailibleDifficulties final
{
public:
	TArray<struct FGameDifficultyInfo>            ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAvailibleDifficulties) == 0x000004, "Wrong alignment on FortFrontEndContext_GetAvailibleDifficulties");
static_assert(sizeof(FortFrontEndContext_GetAvailibleDifficulties) == 0x00000C, "Wrong size on FortFrontEndContext_GetAvailibleDifficulties");
static_assert(offsetof(FortFrontEndContext_GetAvailibleDifficulties, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetAvailibleDifficulties::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetCurrentTheaterName
// 0x000C (0x000C - 0x0000)
struct FortFrontEndContext_GetCurrentTheaterName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetCurrentTheaterName) == 0x000004, "Wrong alignment on FortFrontEndContext_GetCurrentTheaterName");
static_assert(sizeof(FortFrontEndContext_GetCurrentTheaterName) == 0x00000C, "Wrong size on FortFrontEndContext_GetCurrentTheaterName");
static_assert(offsetof(FortFrontEndContext_GetCurrentTheaterName, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetCurrentTheaterName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetDesiredPlayButtonCamera
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_GetDesiredPlayButtonCamera final
{
public:
	EFrontEndCamera                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetDesiredPlayButtonCamera) == 0x000001, "Wrong alignment on FortFrontEndContext_GetDesiredPlayButtonCamera");
static_assert(sizeof(FortFrontEndContext_GetDesiredPlayButtonCamera) == 0x000001, "Wrong size on FortFrontEndContext_GetDesiredPlayButtonCamera");
static_assert(offsetof(FortFrontEndContext_GetDesiredPlayButtonCamera, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetDesiredPlayButtonCamera::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorDisintegrationSecondsRemaining
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining");
static_assert(sizeof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining");
static_assert(offsetof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorIncomingGooAmount
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorIncomingGooAmount final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorIncomingGooAmount) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorIncomingGooAmount");
static_assert(sizeof(FortFrontEndContext_GetFabricatorIncomingGooAmount) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorIncomingGooAmount");
static_assert(offsetof(FortFrontEndContext_GetFabricatorIncomingGooAmount, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorIncomingGooAmount::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorIncomingGooAmount, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorIncomingGooAmount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorMaxCapacity
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorMaxCapacity final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorMaxCapacity) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorMaxCapacity");
static_assert(sizeof(FortFrontEndContext_GetFabricatorMaxCapacity) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorMaxCapacity");
static_assert(offsetof(FortFrontEndContext_GetFabricatorMaxCapacity, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorMaxCapacity::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorMaxCapacity, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorMaxCapacity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorStoredGooAmount
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorStoredGooAmount final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorStoredGooAmount) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorStoredGooAmount");
static_assert(sizeof(FortFrontEndContext_GetFabricatorStoredGooAmount) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorStoredGooAmount");
static_assert(offsetof(FortFrontEndContext_GetFabricatorStoredGooAmount, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorStoredGooAmount::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorStoredGooAmount, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorStoredGooAmount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFeatureState
// 0x0002 (0x0002 - 0x0000)
struct FortFrontEndContext_GetFeatureState final
{
public:
	EFortFrontEndFeature                          Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFrontEndFeatureState                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFeatureState) == 0x000001, "Wrong alignment on FortFrontEndContext_GetFeatureState");
static_assert(sizeof(FortFrontEndContext_GetFeatureState) == 0x000002, "Wrong size on FortFrontEndContext_GetFeatureState");
static_assert(offsetof(FortFrontEndContext_GetFeatureState, Feature) == 0x000000, "Member 'FortFrontEndContext_GetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFeatureState, ReturnValue) == 0x000001, "Member 'FortFrontEndContext_GetFeatureState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFrontEndCamera
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_GetFrontEndCamera final
{
public:
	EFrontEndCamera                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFrontEndCamera) == 0x000001, "Wrong alignment on FortFrontEndContext_GetFrontEndCamera");
static_assert(sizeof(FortFrontEndContext_GetFrontEndCamera) == 0x000001, "Wrong size on FortFrontEndContext_GetFrontEndCamera");
static_assert(offsetof(FortFrontEndContext_GetFrontEndCamera, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetFrontEndCamera::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetHarvestingToolForLevel
// 0x000C (0x000C - 0x0000)
struct FortFrontEndContext_GetHarvestingToolForLevel final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InHarvestingOptimizerLevel;                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*               ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetHarvestingToolForLevel) == 0x000004, "Wrong alignment on FortFrontEndContext_GetHarvestingToolForLevel");
static_assert(sizeof(FortFrontEndContext_GetHarvestingToolForLevel) == 0x00000C, "Wrong size on FortFrontEndContext_GetHarvestingToolForLevel");
static_assert(offsetof(FortFrontEndContext_GetHarvestingToolForLevel, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetHarvestingToolForLevel::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetHarvestingToolForLevel, InHarvestingOptimizerLevel) == 0x000004, "Member 'FortFrontEndContext_GetHarvestingToolForLevel::InHarvestingOptimizerLevel' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetHarvestingToolForLevel, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetHarvestingToolForLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetItemFromItemQuantityPair
// 0x0020 (0x0020 - 0x0000)
struct FortFrontEndContext_GetItemFromItemQuantityPair final
{
public:
	struct FFortItemQuantityPair                  InPair;                                            // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                    ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetItemFromItemQuantityPair) == 0x000004, "Wrong alignment on FortFrontEndContext_GetItemFromItemQuantityPair");
static_assert(sizeof(FortFrontEndContext_GetItemFromItemQuantityPair) == 0x000020, "Wrong size on FortFrontEndContext_GetItemFromItemQuantityPair");
static_assert(offsetof(FortFrontEndContext_GetItemFromItemQuantityPair, InPair) == 0x000000, "Member 'FortFrontEndContext_GetItemFromItemQuantityPair::InPair' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetItemFromItemQuantityPair, ReturnValue) == 0x00001C, "Member 'FortFrontEndContext_GetItemFromItemQuantityPair::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetMaxNumberOfItemsInStorageVault
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetMaxNumberOfItemsInStorageVault final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetMaxNumberOfItemsInStorageVault) == 0x000004, "Wrong alignment on FortFrontEndContext_GetMaxNumberOfItemsInStorageVault");
static_assert(sizeof(FortFrontEndContext_GetMaxNumberOfItemsInStorageVault) == 0x000008, "Wrong size on FortFrontEndContext_GetMaxNumberOfItemsInStorageVault");
static_assert(offsetof(FortFrontEndContext_GetMaxNumberOfItemsInStorageVault, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetMaxNumberOfItemsInStorageVault::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetMaxNumberOfItemsInStorageVault, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetMaxNumberOfItemsInStorageVault::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetNumberOfItemsInStorageVault
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetNumberOfItemsInStorageVault final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetNumberOfItemsInStorageVault) == 0x000004, "Wrong alignment on FortFrontEndContext_GetNumberOfItemsInStorageVault");
static_assert(sizeof(FortFrontEndContext_GetNumberOfItemsInStorageVault) == 0x000008, "Wrong size on FortFrontEndContext_GetNumberOfItemsInStorageVault");
static_assert(offsetof(FortFrontEndContext_GetNumberOfItemsInStorageVault, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetNumberOfItemsInStorageVault::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetNumberOfItemsInStorageVault, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetNumberOfItemsInStorageVault::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostStructureLevel
// 0x000C (0x000C - 0x0000)
struct FortFrontEndContext_GetOutpostStructureLevel final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortOutpostItemDefinition*             OutpostStructure;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetOutpostStructureLevel) == 0x000004, "Wrong alignment on FortFrontEndContext_GetOutpostStructureLevel");
static_assert(sizeof(FortFrontEndContext_GetOutpostStructureLevel) == 0x00000C, "Wrong size on FortFrontEndContext_GetOutpostStructureLevel");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureLevel, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetOutpostStructureLevel::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureLevel, OutpostStructure) == 0x000004, "Member 'FortFrontEndContext_GetOutpostStructureLevel::OutpostStructure' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureLevel, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetOutpostStructureLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostStructureMaxLevel
// 0x000C (0x000C - 0x0000)
struct FortFrontEndContext_GetOutpostStructureMaxLevel final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortOutpostItemDefinition*             OutpostStructure;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetOutpostStructureMaxLevel) == 0x000004, "Wrong alignment on FortFrontEndContext_GetOutpostStructureMaxLevel");
static_assert(sizeof(FortFrontEndContext_GetOutpostStructureMaxLevel) == 0x00000C, "Wrong size on FortFrontEndContext_GetOutpostStructureMaxLevel");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureMaxLevel, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetOutpostStructureMaxLevel::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureMaxLevel, OutpostStructure) == 0x000004, "Member 'FortFrontEndContext_GetOutpostStructureMaxLevel::OutpostStructure' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureMaxLevel, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetOutpostStructureMaxLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostStructureUpgradeCost
// 0x0024 (0x0024 - 0x0000)
struct FortFrontEndContext_GetOutpostStructureUpgradeCost final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeLevel;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortOutpostItemDefinition*             OutpostStructure;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>          OutWorldItems;                                     // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>          OutAccountItems;                                   // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetOutpostStructureUpgradeCost) == 0x000004, "Wrong alignment on FortFrontEndContext_GetOutpostStructureUpgradeCost");
static_assert(sizeof(FortFrontEndContext_GetOutpostStructureUpgradeCost) == 0x000024, "Wrong size on FortFrontEndContext_GetOutpostStructureUpgradeCost");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, UpgradeLevel) == 0x000004, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::UpgradeLevel' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, OutpostStructure) == 0x000008, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::OutpostStructure' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, OutWorldItems) == 0x00000C, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::OutWorldItems' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, OutAccountItems) == 0x000018, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::OutAccountItems' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetPersonnelResourceItemDefinition
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_GetPersonnelResourceItemDefinition final
{
public:
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetPersonnelResourceItemDefinition) == 0x000004, "Wrong alignment on FortFrontEndContext_GetPersonnelResourceItemDefinition");
static_assert(sizeof(FortFrontEndContext_GetPersonnelResourceItemDefinition) == 0x000004, "Wrong size on FortFrontEndContext_GetPersonnelResourceItemDefinition");
static_assert(offsetof(FortFrontEndContext_GetPersonnelResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetPersonnelResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetPersonnelXpResourceBrush
// 0x0074 (0x0074 - 0x0000)
struct FortFrontEndContext_GetPersonnelXpResourceBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0074)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetPersonnelXpResourceBrush) == 0x000004, "Wrong alignment on FortFrontEndContext_GetPersonnelXpResourceBrush");
static_assert(sizeof(FortFrontEndContext_GetPersonnelXpResourceBrush) == 0x000074, "Wrong size on FortFrontEndContext_GetPersonnelXpResourceBrush");
static_assert(offsetof(FortFrontEndContext_GetPersonnelXpResourceBrush, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetPersonnelXpResourceBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetRequirementText
// 0x002C (0x002C - 0x0000)
struct FortFrontEndContext_GetRequirementText final
{
public:
	struct FFortRequirementsInfo                  InRequirements;                                    // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0020(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetRequirementText) == 0x000004, "Wrong alignment on FortFrontEndContext_GetRequirementText");
static_assert(sizeof(FortFrontEndContext_GetRequirementText) == 0x00002C, "Wrong size on FortFrontEndContext_GetRequirementText");
static_assert(offsetof(FortFrontEndContext_GetRequirementText, InRequirements) == 0x000000, "Member 'FortFrontEndContext_GetRequirementText::InRequirements' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetRequirementText, ReturnValue) == 0x000020, "Member 'FortFrontEndContext_GetRequirementText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSchematicResourceItemDefinition
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_GetSchematicResourceItemDefinition final
{
public:
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetSchematicResourceItemDefinition) == 0x000004, "Wrong alignment on FortFrontEndContext_GetSchematicResourceItemDefinition");
static_assert(sizeof(FortFrontEndContext_GetSchematicResourceItemDefinition) == 0x000004, "Wrong size on FortFrontEndContext_GetSchematicResourceItemDefinition");
static_assert(offsetof(FortFrontEndContext_GetSchematicResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetSchematicResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSchematicXpResourceBrush
// 0x0074 (0x0074 - 0x0000)
struct FortFrontEndContext_GetSchematicXpResourceBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0074)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetSchematicXpResourceBrush) == 0x000004, "Wrong alignment on FortFrontEndContext_GetSchematicXpResourceBrush");
static_assert(sizeof(FortFrontEndContext_GetSchematicXpResourceBrush) == 0x000074, "Wrong size on FortFrontEndContext_GetSchematicXpResourceBrush");
static_assert(offsetof(FortFrontEndContext_GetSchematicXpResourceBrush, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetSchematicXpResourceBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSelectedTheaterData
// 0x00D4 (0x00D4 - 0x0000)
struct FortFrontEndContext_GetSelectedTheaterData final
{
public:
	struct FFortTheaterMapData                    OutTheaterData;                                    // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetSelectedTheaterData) == 0x000004, "Wrong alignment on FortFrontEndContext_GetSelectedTheaterData");
static_assert(sizeof(FortFrontEndContext_GetSelectedTheaterData) == 0x0000D4, "Wrong size on FortFrontEndContext_GetSelectedTheaterData");
static_assert(offsetof(FortFrontEndContext_GetSelectedTheaterData, OutTheaterData) == 0x000000, "Member 'FortFrontEndContext_GetSelectedTheaterData::OutTheaterData' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetSelectedTheaterData, ReturnValue) == 0x0000D0, "Member 'FortFrontEndContext_GetSelectedTheaterData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSelectedTheaterIndex
// 0x0004 (0x0004 - 0x0000)
struct FortFrontEndContext_GetSelectedTheaterIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetSelectedTheaterIndex) == 0x000004, "Wrong alignment on FortFrontEndContext_GetSelectedTheaterIndex");
static_assert(sizeof(FortFrontEndContext_GetSelectedTheaterIndex) == 0x000004, "Wrong size on FortFrontEndContext_GetSelectedTheaterIndex");
static_assert(offsetof(FortFrontEndContext_GetSelectedTheaterIndex, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetSelectedTheaterIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterData
// 0x00D8 (0x00D8 - 0x0000)
struct FortFrontEndContext_GetTheaterData final
{
public:
	int32                                         TheaterIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTheaterMapData                    OutTheaterData;                                    // 0x0004(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D4(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTheaterData) == 0x000004, "Wrong alignment on FortFrontEndContext_GetTheaterData");
static_assert(sizeof(FortFrontEndContext_GetTheaterData) == 0x0000D8, "Wrong size on FortFrontEndContext_GetTheaterData");
static_assert(offsetof(FortFrontEndContext_GetTheaterData, TheaterIndex) == 0x000000, "Member 'FortFrontEndContext_GetTheaterData::TheaterIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterData, OutTheaterData) == 0x000004, "Member 'FortFrontEndContext_GetTheaterData::OutTheaterData' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterData, ReturnValue) == 0x0000D4, "Member 'FortFrontEndContext_GetTheaterData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterDifficultyText
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetTheaterDifficultyText final
{
public:
	int32                                         TheaterIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetTheaterDifficultyText) == 0x000004, "Wrong alignment on FortFrontEndContext_GetTheaterDifficultyText");
static_assert(sizeof(FortFrontEndContext_GetTheaterDifficultyText) == 0x000010, "Wrong size on FortFrontEndContext_GetTheaterDifficultyText");
static_assert(offsetof(FortFrontEndContext_GetTheaterDifficultyText, TheaterIndex) == 0x000000, "Member 'FortFrontEndContext_GetTheaterDifficultyText::TheaterIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterDifficultyText, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetTheaterDifficultyText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterName
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetTheaterName final
{
public:
	int32                                         TheaterIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetTheaterName) == 0x000004, "Wrong alignment on FortFrontEndContext_GetTheaterName");
static_assert(sizeof(FortFrontEndContext_GetTheaterName) == 0x000010, "Wrong size on FortFrontEndContext_GetTheaterName");
static_assert(offsetof(FortFrontEndContext_GetTheaterName, TheaterIndex) == 0x000000, "Member 'FortFrontEndContext_GetTheaterName::TheaterIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterName, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetTheaterName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterRegionCount
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetTheaterRegionCount final
{
public:
	int32                                         TheaterIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetTheaterRegionCount) == 0x000004, "Wrong alignment on FortFrontEndContext_GetTheaterRegionCount");
static_assert(sizeof(FortFrontEndContext_GetTheaterRegionCount) == 0x000008, "Wrong size on FortFrontEndContext_GetTheaterRegionCount");
static_assert(offsetof(FortFrontEndContext_GetTheaterRegionCount, TheaterIndex) == 0x000000, "Member 'FortFrontEndContext_GetTheaterRegionCount::TheaterIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterRegionCount, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetTheaterRegionCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterType
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetTheaterType final
{
public:
	int32                                         TheaterIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortTheaterType                              ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTheaterType) == 0x000004, "Wrong alignment on FortFrontEndContext_GetTheaterType");
static_assert(sizeof(FortFrontEndContext_GetTheaterType) == 0x000008, "Wrong size on FortFrontEndContext_GetTheaterType");
static_assert(offsetof(FortFrontEndContext_GetTheaterType, TheaterIndex) == 0x000000, "Member 'FortFrontEndContext_GetTheaterType::TheaterIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterType, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetTheaterType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTileMissionDetails
// 0x0098 (0x0098 - 0x0000)
struct FortFrontEndContext_GetTileMissionDetails final
{
public:
	const class AFortTheaterMapTile*              Tile;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMissionDetails                    MissionDetails;                                    // 0x0004(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0094(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTileMissionDetails) == 0x000004, "Wrong alignment on FortFrontEndContext_GetTileMissionDetails");
static_assert(sizeof(FortFrontEndContext_GetTileMissionDetails) == 0x000098, "Wrong size on FortFrontEndContext_GetTileMissionDetails");
static_assert(offsetof(FortFrontEndContext_GetTileMissionDetails, Tile) == 0x000000, "Member 'FortFrontEndContext_GetTileMissionDetails::Tile' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTileMissionDetails, MissionDetails) == 0x000004, "Member 'FortFrontEndContext_GetTileMissionDetails::MissionDetails' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTileMissionDetails, ReturnValue) == 0x000094, "Member 'FortFrontEndContext_GetTileMissionDetails::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.IsFabricatorDisintegrating
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_IsFabricatorDisintegrating final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_IsFabricatorDisintegrating) == 0x000004, "Wrong alignment on FortFrontEndContext_IsFabricatorDisintegrating");
static_assert(sizeof(FortFrontEndContext_IsFabricatorDisintegrating) == 0x000008, "Wrong size on FortFrontEndContext_IsFabricatorDisintegrating");
static_assert(offsetof(FortFrontEndContext_IsFabricatorDisintegrating, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_IsFabricatorDisintegrating::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_IsFabricatorDisintegrating, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_IsFabricatorDisintegrating::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ShouldRunInitialBenchmark
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_ShouldRunInitialBenchmark final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ShouldRunInitialBenchmark) == 0x000001, "Wrong alignment on FortFrontEndContext_ShouldRunInitialBenchmark");
static_assert(sizeof(FortFrontEndContext_ShouldRunInitialBenchmark) == 0x000001, "Wrong size on FortFrontEndContext_ShouldRunInitialBenchmark");
static_assert(offsetof(FortFrontEndContext_ShouldRunInitialBenchmark, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_ShouldRunInitialBenchmark::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.TriggerUIFeedbackEvent
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_TriggerUIFeedbackEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_TriggerUIFeedbackEvent) == 0x000004, "Wrong alignment on FortFrontEndContext_TriggerUIFeedbackEvent");
static_assert(sizeof(FortFrontEndContext_TriggerUIFeedbackEvent) == 0x000008, "Wrong size on FortFrontEndContext_TriggerUIFeedbackEvent");
static_assert(offsetof(FortFrontEndContext_TriggerUIFeedbackEvent, EventName) == 0x000000, "Member 'FortFrontEndContext_TriggerUIFeedbackEvent::EventName' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.CheckFlag
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_CheckFlag final
{
public:
	class FString                                 FlagName;                                          // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlagStatus                                   OutStatus;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_CheckFlag) == 0x000004, "Wrong alignment on FortGlobalUIContext_CheckFlag");
static_assert(sizeof(FortGlobalUIContext_CheckFlag) == 0x000010, "Wrong size on FortGlobalUIContext_CheckFlag");
static_assert(offsetof(FortGlobalUIContext_CheckFlag, FlagName) == 0x000000, "Member 'FortGlobalUIContext_CheckFlag::FlagName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_CheckFlag, OutStatus) == 0x00000C, "Member 'FortGlobalUIContext_CheckFlag::OutStatus' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.BindToFeatureStateAndInitialize
// 0x0014 (0x0014 - 0x0000)
struct FortGlobalUIContext_BindToFeatureStateAndInitialize final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState)> Delegate;                                          // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_BindToFeatureStateAndInitialize) == 0x000004, "Wrong alignment on FortGlobalUIContext_BindToFeatureStateAndInitialize");
static_assert(sizeof(FortGlobalUIContext_BindToFeatureStateAndInitialize) == 0x000014, "Wrong size on FortGlobalUIContext_BindToFeatureStateAndInitialize");
static_assert(offsetof(FortGlobalUIContext_BindToFeatureStateAndInitialize, Feature) == 0x000000, "Member 'FortGlobalUIContext_BindToFeatureStateAndInitialize::Feature' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_BindToFeatureStateAndInitialize, Delegate) == 0x000004, "Member 'FortGlobalUIContext_BindToFeatureStateAndInitialize::Delegate' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ClearSelectionGroup
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_ClearSelectionGroup final
{
public:
	class FName                                   SelectionGroup;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ClearSelectionGroup) == 0x000004, "Wrong alignment on FortGlobalUIContext_ClearSelectionGroup");
static_assert(sizeof(FortGlobalUIContext_ClearSelectionGroup) == 0x000008, "Wrong size on FortGlobalUIContext_ClearSelectionGroup");
static_assert(offsetof(FortGlobalUIContext_ClearSelectionGroup, SelectionGroup) == 0x000000, "Member 'FortGlobalUIContext_ClearSelectionGroup::SelectionGroup' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.DisplayStateContent
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_DisplayStateContent final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_DisplayStateContent) == 0x000001, "Wrong alignment on FortGlobalUIContext_DisplayStateContent");
static_assert(sizeof(FortGlobalUIContext_DisplayStateContent) == 0x000001, "Wrong size on FortGlobalUIContext_DisplayStateContent");
static_assert(offsetof(FortGlobalUIContext_DisplayStateContent, bDisplay) == 0x000000, "Member 'FortGlobalUIContext_DisplayStateContent::bDisplay' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetBackendName
// 0x000C (0x000C - 0x0000)
struct FortGlobalUIContext_GetBackendName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetBackendName) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetBackendName");
static_assert(sizeof(FortGlobalUIContext_GetBackendName) == 0x00000C, "Wrong size on FortGlobalUIContext_GetBackendName");
static_assert(offsetof(FortGlobalUIContext_GetBackendName, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetBackendName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetGameBackendVersion
// 0x0070 (0x0070 - 0x0000)
struct FortGlobalUIContext_GetGameBackendVersion final
{
public:
	struct FFortBackendVersion                    ReturnValue;                                       // 0x0000(0x0070)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetGameBackendVersion) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetGameBackendVersion");
static_assert(sizeof(FortGlobalUIContext_GetGameBackendVersion) == 0x000070, "Wrong size on FortGlobalUIContext_GetGameBackendVersion");
static_assert(offsetof(FortGlobalUIContext_GetGameBackendVersion, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetGameBackendVersion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetMessageManager
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetMessageManager final
{
public:
	class FName                                   ManagerName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreatedNew;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIMessageManager*                  ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetMessageManager) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetMessageManager");
static_assert(sizeof(FortGlobalUIContext_GetMessageManager) == 0x000010, "Wrong size on FortGlobalUIContext_GetMessageManager");
static_assert(offsetof(FortGlobalUIContext_GetMessageManager, ManagerName) == 0x000000, "Member 'FortGlobalUIContext_GetMessageManager::ManagerName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetMessageManager, bCreatedNew) == 0x000008, "Member 'FortGlobalUIContext_GetMessageManager::bCreatedNew' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetMessageManager, ReturnValue) == 0x00000C, "Member 'FortGlobalUIContext_GetMessageManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetNextNotification
// 0x0054 (0x0054 - 0x0000)
struct FortGlobalUIContext_GetNextNotification final
{
public:
	struct FFortDialogDescription                 NotifcationDescription;                            // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_GetNextNotification) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetNextNotification");
static_assert(sizeof(FortGlobalUIContext_GetNextNotification) == 0x000054, "Wrong size on FortGlobalUIContext_GetNextNotification");
static_assert(offsetof(FortGlobalUIContext_GetNextNotification, NotifcationDescription) == 0x000000, "Member 'FortGlobalUIContext_GetNextNotification::NotifcationDescription' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetNextNotification, ReturnValue) == 0x000050, "Member 'FortGlobalUIContext_GetNextNotification::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetWatermark
// 0x000C (0x000C - 0x0000)
struct FortGlobalUIContext_GetWatermark final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetWatermark) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetWatermark");
static_assert(sizeof(FortGlobalUIContext_GetWatermark) == 0x00000C, "Wrong size on FortGlobalUIContext_GetWatermark");
static_assert(offsetof(FortGlobalUIContext_GetWatermark, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetWatermark::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.HideBang
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_HideBang final
{
public:
	EFortBangType                                 Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_HideBang) == 0x000001, "Wrong alignment on FortGlobalUIContext_HideBang");
static_assert(sizeof(FortGlobalUIContext_HideBang) == 0x000001, "Wrong size on FortGlobalUIContext_HideBang");
static_assert(offsetof(FortGlobalUIContext_HideBang, Type) == 0x000000, "Member 'FortGlobalUIContext_HideBang::Type' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsBluGloEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsBluGloEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsBluGloEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsBluGloEnabled");
static_assert(sizeof(FortGlobalUIContext_IsBluGloEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsBluGloEnabled");
static_assert(offsetof(FortGlobalUIContext_IsBluGloEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsBluGloEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsHUDVisible
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsHUDVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsHUDVisible) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsHUDVisible");
static_assert(sizeof(FortGlobalUIContext_IsHUDVisible) == 0x000001, "Wrong size on FortGlobalUIContext_IsHUDVisible");
static_assert(offsetof(FortGlobalUIContext_IsHUDVisible, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsHUDVisible::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ProcessNotificationResult
// 0x0054 (0x0054 - 0x0000)
struct FortGlobalUIContext_ProcessNotificationResult final
{
public:
	EFortDialogResult                             InResult;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogDescription                 NotificationDescription;                           // 0x0004(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ProcessNotificationResult) == 0x000004, "Wrong alignment on FortGlobalUIContext_ProcessNotificationResult");
static_assert(sizeof(FortGlobalUIContext_ProcessNotificationResult) == 0x000054, "Wrong size on FortGlobalUIContext_ProcessNotificationResult");
static_assert(offsetof(FortGlobalUIContext_ProcessNotificationResult, InResult) == 0x000000, "Member 'FortGlobalUIContext_ProcessNotificationResult::InResult' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ProcessNotificationResult, NotificationDescription) == 0x000004, "Member 'FortGlobalUIContext_ProcessNotificationResult::NotificationDescription' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RegisterScriptedAction
// 0x0004 (0x0004 - 0x0000)
struct FortGlobalUIContext_RegisterScriptedAction final
{
public:
	TSubclassOf<class AFortScriptedAction>        ScriptedAction;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RegisterScriptedAction) == 0x000004, "Wrong alignment on FortGlobalUIContext_RegisterScriptedAction");
static_assert(sizeof(FortGlobalUIContext_RegisterScriptedAction) == 0x000004, "Wrong size on FortGlobalUIContext_RegisterScriptedAction");
static_assert(offsetof(FortGlobalUIContext_RegisterScriptedAction, ScriptedAction) == 0x000000, "Member 'FortGlobalUIContext_RegisterScriptedAction::ScriptedAction' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RegisterScriptedActions
// 0x000C (0x000C - 0x0000)
struct FortGlobalUIContext_RegisterScriptedActions final
{
public:
	TArray<TSubclassOf<class AFortScriptedAction>> ScriptedActions;                                   // 0x0000(0x000C)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RegisterScriptedActions) == 0x000004, "Wrong alignment on FortGlobalUIContext_RegisterScriptedActions");
static_assert(sizeof(FortGlobalUIContext_RegisterScriptedActions) == 0x00000C, "Wrong size on FortGlobalUIContext_RegisterScriptedActions");
static_assert(offsetof(FortGlobalUIContext_RegisterScriptedActions, ScriptedActions) == 0x000000, "Member 'FortGlobalUIContext_RegisterScriptedActions::ScriptedActions' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RegisterToReceiveNotifications
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_RegisterToReceiveNotifications final
{
public:
	TDelegate<void()>                             InOnNotifcationAvailable;                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RegisterToReceiveNotifications) == 0x000004, "Wrong alignment on FortGlobalUIContext_RegisterToReceiveNotifications");
static_assert(sizeof(FortGlobalUIContext_RegisterToReceiveNotifications) == 0x000010, "Wrong size on FortGlobalUIContext_RegisterToReceiveNotifications");
static_assert(offsetof(FortGlobalUIContext_RegisterToReceiveNotifications, InOnNotifcationAvailable) == 0x000000, "Member 'FortGlobalUIContext_RegisterToReceiveNotifications::InOnNotifcationAvailable' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RemoveNotification
// 0x0050 (0x0050 - 0x0000)
struct FortGlobalUIContext_RemoveNotification final
{
public:
	struct FFortDialogDescription                 NotificationDescription;                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RemoveNotification) == 0x000004, "Wrong alignment on FortGlobalUIContext_RemoveNotification");
static_assert(sizeof(FortGlobalUIContext_RemoveNotification) == 0x000050, "Wrong size on FortGlobalUIContext_RemoveNotification");
static_assert(offsetof(FortGlobalUIContext_RemoveNotification, NotificationDescription) == 0x000000, "Member 'FortGlobalUIContext_RemoveNotification::NotificationDescription' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SendExperienceRatingAnalytic
// 0x0028 (0x0028 - 0x0000)
struct FortGlobalUIContext_SendExperienceRatingAnalytic final
{
public:
	class FString                                 RatingType;                                        // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StarCount;                                         // 0x000C(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameSessionID;                                     // 0x0010(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Comment;                                           // 0x001C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SendExperienceRatingAnalytic) == 0x000004, "Wrong alignment on FortGlobalUIContext_SendExperienceRatingAnalytic");
static_assert(sizeof(FortGlobalUIContext_SendExperienceRatingAnalytic) == 0x000028, "Wrong size on FortGlobalUIContext_SendExperienceRatingAnalytic");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, RatingType) == 0x000000, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::RatingType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, StarCount) == 0x00000C, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::StarCount' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, GameSessionID) == 0x000010, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::GameSessionID' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, Comment) == 0x00001C, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::Comment' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SendUINavigationAnalytic
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_SendUINavigationAnalytic final
{
public:
	class FString                                 Destination;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUserInitiated;                                    // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_SendUINavigationAnalytic) == 0x000004, "Wrong alignment on FortGlobalUIContext_SendUINavigationAnalytic");
static_assert(sizeof(FortGlobalUIContext_SendUINavigationAnalytic) == 0x000010, "Wrong size on FortGlobalUIContext_SendUINavigationAnalytic");
static_assert(offsetof(FortGlobalUIContext_SendUINavigationAnalytic, Destination) == 0x000000, "Member 'FortGlobalUIContext_SendUINavigationAnalytic::Destination' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendUINavigationAnalytic, bUserInitiated) == 0x00000C, "Member 'FortGlobalUIContext_SendUINavigationAnalytic::bUserInitiated' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShowBang
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_ShowBang final
{
public:
	EFortBangType                                 Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ShowBang) == 0x000001, "Wrong alignment on FortGlobalUIContext_ShowBang");
static_assert(sizeof(FortGlobalUIContext_ShowBang) == 0x000001, "Wrong size on FortGlobalUIContext_ShowBang");
static_assert(offsetof(FortGlobalUIContext_ShowBang, Type) == 0x000000, "Member 'FortGlobalUIContext_ShowBang::Type' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.TakeScreenshot
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_TakeScreenshot final
{
public:
	TDelegate<void(int32 Width, int32 Height, const TArray<struct FColor>& Colors)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_TakeScreenshot) == 0x000004, "Wrong alignment on FortGlobalUIContext_TakeScreenshot");
static_assert(sizeof(FortGlobalUIContext_TakeScreenshot) == 0x000010, "Wrong size on FortGlobalUIContext_TakeScreenshot");
static_assert(offsetof(FortGlobalUIContext_TakeScreenshot, Callback) == 0x000000, "Member 'FortGlobalUIContext_TakeScreenshot::Callback' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.UnregisterScriptedAction
// 0x0004 (0x0004 - 0x0000)
struct FortGlobalUIContext_UnregisterScriptedAction final
{
public:
	TSubclassOf<class AFortScriptedAction>        ScriptedAction;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_UnregisterScriptedAction) == 0x000004, "Wrong alignment on FortGlobalUIContext_UnregisterScriptedAction");
static_assert(sizeof(FortGlobalUIContext_UnregisterScriptedAction) == 0x000004, "Wrong size on FortGlobalUIContext_UnregisterScriptedAction");
static_assert(offsetof(FortGlobalUIContext_UnregisterScriptedAction, ScriptedAction) == 0x000000, "Member 'FortGlobalUIContext_UnregisterScriptedAction::ScriptedAction' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetActiveKeybindSet
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_GetActiveKeybindSet final
{
public:
	EFortInputPreset                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetActiveKeybindSet) == 0x000001, "Wrong alignment on FortGlobalUIContext_GetActiveKeybindSet");
static_assert(sizeof(FortGlobalUIContext_GetActiveKeybindSet) == 0x000001, "Wrong size on FortGlobalUIContext_GetActiveKeybindSet");
static_assert(offsetof(FortGlobalUIContext_GetActiveKeybindSet, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetActiveKeybindSet::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetFeatureState
// 0x0002 (0x0002 - 0x0000)
struct FortGlobalUIContext_GetFeatureState final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureState                           ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetFeatureState) == 0x000001, "Wrong alignment on FortGlobalUIContext_GetFeatureState");
static_assert(sizeof(FortGlobalUIContext_GetFeatureState) == 0x000002, "Wrong size on FortGlobalUIContext_GetFeatureState");
static_assert(offsetof(FortGlobalUIContext_GetFeatureState, Feature) == 0x000000, "Member 'FortGlobalUIContext_GetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetFeatureState, ReturnValue) == 0x000001, "Member 'FortGlobalUIContext_GetFeatureState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetKeyForAction
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_GetKeyForAction final
{
public:
	class FName                                   Action;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetKeyForAction) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetKeyForAction");
static_assert(sizeof(FortGlobalUIContext_GetKeyForAction) == 0x000018, "Wrong size on FortGlobalUIContext_GetKeyForAction");
static_assert(offsetof(FortGlobalUIContext_GetKeyForAction, Action) == 0x000000, "Member 'FortGlobalUIContext_GetKeyForAction::Action' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetKeyForAction, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetKeyForAction::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetKeyTextForAction
// 0x0014 (0x0014 - 0x0000)
struct FortGlobalUIContext_GetKeyTextForAction final
{
public:
	class FName                                   Action;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetKeyTextForAction) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetKeyTextForAction");
static_assert(sizeof(FortGlobalUIContext_GetKeyTextForAction) == 0x000014, "Wrong size on FortGlobalUIContext_GetKeyTextForAction");
static_assert(offsetof(FortGlobalUIContext_GetKeyTextForAction, Action) == 0x000000, "Member 'FortGlobalUIContext_GetKeyTextForAction::Action' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetKeyTextForAction, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetKeyTextForAction::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetLastGameSummaryInfo
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetLastGameSummaryInfo final
{
public:
	struct FGameSummaryInfo                       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetLastGameSummaryInfo) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetLastGameSummaryInfo");
static_assert(sizeof(FortGlobalUIContext_GetLastGameSummaryInfo) == 0x000010, "Wrong size on FortGlobalUIContext_GetLastGameSummaryInfo");
static_assert(offsetof(FortGlobalUIContext_GetLastGameSummaryInfo, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetLastGameSummaryInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetQuestManager
// 0x0004 (0x0004 - 0x0000)
struct FortGlobalUIContext_GetQuestManager final
{
public:
	class UFortQuestManager*                      ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetQuestManager) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetQuestManager");
static_assert(sizeof(FortGlobalUIContext_GetQuestManager) == 0x000004, "Wrong size on FortGlobalUIContext_GetQuestManager");
static_assert(offsetof(FortGlobalUIContext_GetQuestManager, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetQuestManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetTeamPower
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_GetTeamPower final
{
public:
	int32                                         TeamPower;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PersonalPower;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetTeamPower) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetTeamPower");
static_assert(sizeof(FortGlobalUIContext_GetTeamPower) == 0x000008, "Wrong size on FortGlobalUIContext_GetTeamPower");
static_assert(offsetof(FortGlobalUIContext_GetTeamPower, TeamPower) == 0x000000, "Member 'FortGlobalUIContext_GetTeamPower::TeamPower' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetTeamPower, PersonalPower) == 0x000004, "Member 'FortGlobalUIContext_GetTeamPower::PersonalPower' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsInOutpostZone
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsInOutpostZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsInOutpostZone) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsInOutpostZone");
static_assert(sizeof(FortGlobalUIContext_IsInOutpostZone) == 0x000001, "Wrong size on FortGlobalUIContext_IsInOutpostZone");
static_assert(offsetof(FortGlobalUIContext_IsInOutpostZone, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsInOutpostZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsInZone
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsInZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsInZone) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsInZone");
static_assert(sizeof(FortGlobalUIContext_IsInZone) == 0x000001, "Wrong size on FortGlobalUIContext_IsInZone");
static_assert(offsetof(FortGlobalUIContext_IsInZone, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsInZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsUIVisible
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsUIVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsUIVisible) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsUIVisible");
static_assert(sizeof(FortGlobalUIContext_IsUIVisible) == 0x000001, "Wrong size on FortGlobalUIContext_IsUIVisible");
static_assert(offsetof(FortGlobalUIContext_IsUIVisible, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsUIVisible::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShouldCloseMenuOnEscape
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_ShouldCloseMenuOnEscape final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ShouldCloseMenuOnEscape) == 0x000001, "Wrong alignment on FortGlobalUIContext_ShouldCloseMenuOnEscape");
static_assert(sizeof(FortGlobalUIContext_ShouldCloseMenuOnEscape) == 0x000001, "Wrong size on FortGlobalUIContext_ShouldCloseMenuOnEscape");
static_assert(offsetof(FortGlobalUIContext_ShouldCloseMenuOnEscape, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_ShouldCloseMenuOnEscape::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGridPickerTile.SetData
// 0x0004 (0x0004 - 0x0000)
struct FortGridPickerTile_SetData final
{
public:
	class UObject*                                InData;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerTile_SetData) == 0x000004, "Wrong alignment on FortGridPickerTile_SetData");
static_assert(sizeof(FortGridPickerTile_SetData) == 0x000004, "Wrong size on FortGridPickerTile_SetData");
static_assert(offsetof(FortGridPickerTile_SetData, InData) == 0x000000, "Member 'FortGridPickerTile_SetData::InData' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetClearWidgetType
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetClearWidgetType final
{
public:
	TSubclassOf<class UFortGridPickerTile>        InClearWidgetType;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetClearWidgetType) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetClearWidgetType");
static_assert(sizeof(FortGridWidgetBase_SetClearWidgetType) == 0x000004, "Wrong size on FortGridWidgetBase_SetClearWidgetType");
static_assert(offsetof(FortGridWidgetBase_SetClearWidgetType, InClearWidgetType) == 0x000000, "Member 'FortGridWidgetBase_SetClearWidgetType::InClearWidgetType' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetDataProvider
// 0x000C (0x000C - 0x0000)
struct FortGridWidgetBase_SetDataProvider final
{
public:
	TArray<class UObject*>                        Data;                                              // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetDataProvider) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetDataProvider");
static_assert(sizeof(FortGridWidgetBase_SetDataProvider) == 0x00000C, "Wrong size on FortGridWidgetBase_SetDataProvider");
static_assert(offsetof(FortGridWidgetBase_SetDataProvider, Data) == 0x000000, "Member 'FortGridWidgetBase_SetDataProvider::Data' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetPeekOverflowTilePercentage
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetPeekOverflowTilePercentage final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetPeekOverflowTilePercentage) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetPeekOverflowTilePercentage");
static_assert(sizeof(FortGridWidgetBase_SetPeekOverflowTilePercentage) == 0x000004, "Wrong size on FortGridWidgetBase_SetPeekOverflowTilePercentage");
static_assert(offsetof(FortGridWidgetBase_SetPeekOverflowTilePercentage, Percent) == 0x000000, "Member 'FortGridWidgetBase_SetPeekOverflowTilePercentage::Percent' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTileHeight
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTileHeight final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTileHeight) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTileHeight");
static_assert(sizeof(FortGridWidgetBase_SetTileHeight) == 0x000004, "Wrong size on FortGridWidgetBase_SetTileHeight");
static_assert(offsetof(FortGridWidgetBase_SetTileHeight, Height) == 0x000000, "Member 'FortGridWidgetBase_SetTileHeight::Height' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTilePadding
// 0x0010 (0x0010 - 0x0000)
struct FortGridWidgetBase_SetTilePadding final
{
public:
	struct FMargin                                Padding;                                           // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTilePadding) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTilePadding");
static_assert(sizeof(FortGridWidgetBase_SetTilePadding) == 0x000010, "Wrong size on FortGridWidgetBase_SetTilePadding");
static_assert(offsetof(FortGridWidgetBase_SetTilePadding, Padding) == 0x000000, "Member 'FortGridWidgetBase_SetTilePadding::Padding' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTilesAcross
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTilesAcross final
{
public:
	int32                                         Across;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTilesAcross) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTilesAcross");
static_assert(sizeof(FortGridWidgetBase_SetTilesAcross) == 0x000004, "Wrong size on FortGridWidgetBase_SetTilesAcross");
static_assert(offsetof(FortGridWidgetBase_SetTilesAcross, Across) == 0x000000, "Member 'FortGridWidgetBase_SetTilesAcross::Across' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTilesDown
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTilesDown final
{
public:
	int32                                         Down;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTilesDown) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTilesDown");
static_assert(sizeof(FortGridWidgetBase_SetTilesDown) == 0x000004, "Wrong size on FortGridWidgetBase_SetTilesDown");
static_assert(offsetof(FortGridWidgetBase_SetTilesDown, Down) == 0x000000, "Member 'FortGridWidgetBase_SetTilesDown::Down' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTileWidth
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTileWidth final
{
public:
	float                                         Width;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTileWidth) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTileWidth");
static_assert(sizeof(FortGridWidgetBase_SetTileWidth) == 0x000004, "Wrong size on FortGridWidgetBase_SetTileWidth");
static_assert(offsetof(FortGridWidgetBase_SetTileWidth, Width) == 0x000000, "Member 'FortGridWidgetBase_SetTileWidth::Width' has a wrong offset!");

// Function FortniteUI.FortGridPickerButton.SetIsOpen
// 0x0001 (0x0001 - 0x0000)
struct FortGridPickerButton_SetIsOpen final
{
public:
	bool                                          ShouldBeOpen;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerButton_SetIsOpen) == 0x000001, "Wrong alignment on FortGridPickerButton_SetIsOpen");
static_assert(sizeof(FortGridPickerButton_SetIsOpen) == 0x000001, "Wrong size on FortGridPickerButton_SetIsOpen");
static_assert(offsetof(FortGridPickerButton_SetIsOpen, ShouldBeOpen) == 0x000000, "Member 'FortGridPickerButton_SetIsOpen::ShouldBeOpen' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordAbility
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_CanAffordAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanAffordAbility");
static_assert(sizeof(FortHeroManagementContext_CanAffordAbility) == 0x00000C, "Wrong size on FortHeroManagementContext_CanAffordAbility");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_CanAffordAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbility, TraitDepth) == 0x000004, "Member 'FortHeroManagementContext_CanAffordAbility::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbility, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_CanAffordAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordAbilityFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_CanAffordAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordAbilityFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanAffordAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_CanAffordAbilityFromID) == 0x000018, "Wrong size on FortHeroManagementContext_CanAffordAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, TraitDepth) == 0x000010, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordNextAbility
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_CanAffordNextAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordNextAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanAffordNextAbility");
static_assert(sizeof(FortHeroManagementContext_CanAffordNextAbility) == 0x000008, "Wrong size on FortHeroManagementContext_CanAffordNextAbility");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_CanAffordNextAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbility, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_CanAffordNextAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordNextAbilityFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_CanAffordNextAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordNextAbilityFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanAffordNextAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_CanAffordNextAbilityFromID) == 0x000014, "Wrong size on FortHeroManagementContext_CanAffordNextAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_CanAffordNextAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbilityFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_CanAffordNextAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbilityFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_CanAffordNextAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetCurrentHeroID
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_GetCurrentHeroID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetCurrentHeroID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetCurrentHeroID");
static_assert(sizeof(FortHeroManagementContext_GetCurrentHeroID) == 0x000010, "Wrong size on FortHeroManagementContext_GetCurrentHeroID");
static_assert(offsetof(FortHeroManagementContext_GetCurrentHeroID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetCurrentHeroID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetCurrentHeroID, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_GetCurrentHeroID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetDisplayStats
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetDisplayStats final
{
public:
	TArray<struct FFortGameplayEffectModifierDescription> Stats;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetDisplayStats) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetDisplayStats");
static_assert(sizeof(FortHeroManagementContext_GetDisplayStats) == 0x00000C, "Wrong size on FortHeroManagementContext_GetDisplayStats");
static_assert(offsetof(FortHeroManagementContext_GetDisplayStats, Stats) == 0x000000, "Member 'FortHeroManagementContext_GetDisplayStats::Stats' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetEmptyHeroSlots
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetEmptyHeroSlots final
{
public:
	TArray<struct FEmptyHeroSlot>                 ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetEmptyHeroSlots) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetEmptyHeroSlots");
static_assert(sizeof(FortHeroManagementContext_GetEmptyHeroSlots) == 0x00000C, "Wrong size on FortHeroManagementContext_GetEmptyHeroSlots");
static_assert(offsetof(FortHeroManagementContext_GetEmptyHeroSlots, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetEmptyHeroSlots::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetHeroData
// 0x001C (0x001C - 0x0000)
struct FortHeroManagementContext_GetHeroData final
{
public:
	struct FHeroUIData                            HeroData;                                          // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetHeroData) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetHeroData");
static_assert(sizeof(FortHeroManagementContext_GetHeroData) == 0x00001C, "Wrong size on FortHeroManagementContext_GetHeroData");
static_assert(offsetof(FortHeroManagementContext_GetHeroData, HeroData) == 0x000000, "Member 'FortHeroManagementContext_GetHeroData::HeroData' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetHeroData, ReturnValue) == 0x000018, "Member 'FortHeroManagementContext_GetHeroData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetHeroDataFromID
// 0x0024 (0x0024 - 0x0000)
struct FortHeroManagementContext_GetHeroDataFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHeroUIData                            ReturnValue;                                       // 0x000C(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetHeroDataFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetHeroDataFromID");
static_assert(sizeof(FortHeroManagementContext_GetHeroDataFromID) == 0x000024, "Wrong size on FortHeroManagementContext_GetHeroDataFromID");
static_assert(offsetof(FortHeroManagementContext_GetHeroDataFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetHeroDataFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetHeroDataFromID, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_GetHeroDataFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.PurchaseNextAbility
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_PurchaseNextAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_PurchaseNextAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_PurchaseNextAbility");
static_assert(sizeof(FortHeroManagementContext_PurchaseNextAbility) == 0x000008, "Wrong size on FortHeroManagementContext_PurchaseNextAbility");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_PurchaseNextAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbility, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_PurchaseNextAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.PurchaseNextAbilityFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_PurchaseNextAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_PurchaseNextAbilityFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_PurchaseNextAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_PurchaseNextAbilityFromID) == 0x000014, "Wrong size on FortHeroManagementContext_PurchaseNextAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_PurchaseNextAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbilityFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_PurchaseNextAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbilityFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_PurchaseNextAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemAllAbilities
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_RedeemAllAbilities final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_RedeemAllAbilities) == 0x000001, "Wrong alignment on FortHeroManagementContext_RedeemAllAbilities");
static_assert(sizeof(FortHeroManagementContext_RedeemAllAbilities) == 0x000001, "Wrong size on FortHeroManagementContext_RedeemAllAbilities");
static_assert(offsetof(FortHeroManagementContext_RedeemAllAbilities, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_RedeemAllAbilities::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemAllAbilitiesFromID
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_RedeemAllAbilitiesFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_RedeemAllAbilitiesFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_RedeemAllAbilitiesFromID");
static_assert(sizeof(FortHeroManagementContext_RedeemAllAbilitiesFromID) == 0x00000C, "Wrong size on FortHeroManagementContext_RedeemAllAbilitiesFromID");
static_assert(offsetof(FortHeroManagementContext_RedeemAllAbilitiesFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RedeemAllAbilitiesFromID::HeroId' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemPrevAbility
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_RedeemPrevAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RedeemPrevAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_RedeemPrevAbility");
static_assert(sizeof(FortHeroManagementContext_RedeemPrevAbility) == 0x000008, "Wrong size on FortHeroManagementContext_RedeemPrevAbility");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_RedeemPrevAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbility, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_RedeemPrevAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemPrevAbilityFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_RedeemPrevAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RedeemPrevAbilityFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_RedeemPrevAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_RedeemPrevAbilityFromID) == 0x000014, "Wrong size on FortHeroManagementContext_RedeemPrevAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RedeemPrevAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbilityFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_RedeemPrevAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbilityFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_RedeemPrevAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestCreateHero
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_RequestCreateHero final
{
public:
	const class UFortHeroType*                    HeroType;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0004(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCustomGender                             Gender;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestCreateHero) == 0x000004, "Wrong alignment on FortHeroManagementContext_RequestCreateHero");
static_assert(sizeof(FortHeroManagementContext_RequestCreateHero) == 0x000014, "Wrong size on FortHeroManagementContext_RequestCreateHero");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, HeroType) == 0x000000, "Member 'FortHeroManagementContext_RequestCreateHero::HeroType' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, Name_0) == 0x000004, "Member 'FortHeroManagementContext_RequestCreateHero::Name_0' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, Gender) == 0x000010, "Member 'FortHeroManagementContext_RequestCreateHero::Gender' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, ReturnValue) == 0x000011, "Member 'FortHeroManagementContext_RequestCreateHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestDeleteHero
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_RequestDeleteHero final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestDeleteHero) == 0x000004, "Wrong alignment on FortHeroManagementContext_RequestDeleteHero");
static_assert(sizeof(FortHeroManagementContext_RequestDeleteHero) == 0x000010, "Wrong size on FortHeroManagementContext_RequestDeleteHero");
static_assert(offsetof(FortHeroManagementContext_RequestDeleteHero, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RequestDeleteHero::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestDeleteHero, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_RequestDeleteHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestSetTraitDepth
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_RequestSetTraitDepth final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestSetTraitDepth) == 0x000004, "Wrong alignment on FortHeroManagementContext_RequestSetTraitDepth");
static_assert(sizeof(FortHeroManagementContext_RequestSetTraitDepth) == 0x00000C, "Wrong size on FortHeroManagementContext_RequestSetTraitDepth");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepth, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_RequestSetTraitDepth::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepth, Depth) == 0x000004, "Member 'FortHeroManagementContext_RequestSetTraitDepth::Depth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepth, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_RequestSetTraitDepth::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestSetTraitDepthFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_RequestSetTraitDepthFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestSetTraitDepthFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_RequestSetTraitDepthFromID");
static_assert(sizeof(FortHeroManagementContext_RequestSetTraitDepthFromID) == 0x000018, "Wrong size on FortHeroManagementContext_RequestSetTraitDepthFromID");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, Depth) == 0x000010, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::Depth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.SetCurrentHero
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_SetCurrentHero final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_SetCurrentHero) == 0x000004, "Wrong alignment on FortHeroManagementContext_SetCurrentHero");
static_assert(sizeof(FortHeroManagementContext_SetCurrentHero) == 0x000010, "Wrong size on FortHeroManagementContext_SetCurrentHero");
static_assert(offsetof(FortHeroManagementContext_SetCurrentHero, HeroId) == 0x000000, "Member 'FortHeroManagementContext_SetCurrentHero::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_SetCurrentHero, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_SetCurrentHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.SetHeroName
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_SetHeroName final
{
public:
	class FString                                 NewName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_SetHeroName) == 0x000004, "Wrong alignment on FortHeroManagementContext_SetHeroName");
static_assert(sizeof(FortHeroManagementContext_SetHeroName) == 0x000010, "Wrong size on FortHeroManagementContext_SetHeroName");
static_assert(offsetof(FortHeroManagementContext_SetHeroName, NewName) == 0x000000, "Member 'FortHeroManagementContext_SetHeroName::NewName' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_SetHeroName, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_SetHeroName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.SetHeroNameFromID
// 0x001C (0x001C - 0x0000)
struct FortHeroManagementContext_SetHeroNameFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewName;                                           // 0x000C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_SetHeroNameFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_SetHeroNameFromID");
static_assert(sizeof(FortHeroManagementContext_SetHeroNameFromID) == 0x00001C, "Wrong size on FortHeroManagementContext_SetHeroNameFromID");
static_assert(offsetof(FortHeroManagementContext_SetHeroNameFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_SetHeroNameFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_SetHeroNameFromID, NewName) == 0x00000C, "Member 'FortHeroManagementContext_SetHeroNameFromID::NewName' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_SetHeroNameFromID, ReturnValue) == 0x000018, "Member 'FortHeroManagementContext_SetHeroNameFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.SetShowingStatsScreen
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_SetShowingStatsScreen final
{
public:
	bool                                          bIsShowingStats;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_SetShowingStatsScreen) == 0x000001, "Wrong alignment on FortHeroManagementContext_SetShowingStatsScreen");
static_assert(sizeof(FortHeroManagementContext_SetShowingStatsScreen) == 0x000001, "Wrong size on FortHeroManagementContext_SetShowingStatsScreen");
static_assert(offsetof(FortHeroManagementContext_SetShowingStatsScreen, bIsShowingStats) == 0x000000, "Member 'FortHeroManagementContext_SetShowingStatsScreen::bIsShowingStats' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanModifyTraitDepth
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_CanModifyTraitDepth final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanModifyTraitDepth) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanModifyTraitDepth");
static_assert(sizeof(FortHeroManagementContext_CanModifyTraitDepth) == 0x000008, "Wrong size on FortHeroManagementContext_CanModifyTraitDepth");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepth, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_CanModifyTraitDepth::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepth, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_CanModifyTraitDepth::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanModifyTraitDepthFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_CanModifyTraitDepthFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanModifyTraitDepthFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanModifyTraitDepthFromID");
static_assert(sizeof(FortHeroManagementContext_CanModifyTraitDepthFromID) == 0x000014, "Wrong size on FortHeroManagementContext_CanModifyTraitDepthFromID");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepthFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_CanModifyTraitDepthFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepthFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_CanModifyTraitDepthFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepthFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_CanModifyTraitDepthFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanRedeemAllAbilities
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_CanRedeemAllAbilities final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_CanRedeemAllAbilities) == 0x000001, "Wrong alignment on FortHeroManagementContext_CanRedeemAllAbilities");
static_assert(sizeof(FortHeroManagementContext_CanRedeemAllAbilities) == 0x000001, "Wrong size on FortHeroManagementContext_CanRedeemAllAbilities");
static_assert(offsetof(FortHeroManagementContext_CanRedeemAllAbilities, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_CanRedeemAllAbilities::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CheckHeroNameValidity
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_CheckHeroNameValidity final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENameStatus                                   ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CheckHeroNameValidity) == 0x000004, "Wrong alignment on FortHeroManagementContext_CheckHeroNameValidity");
static_assert(sizeof(FortHeroManagementContext_CheckHeroNameValidity) == 0x000010, "Wrong size on FortHeroManagementContext_CheckHeroNameValidity");
static_assert(offsetof(FortHeroManagementContext_CheckHeroNameValidity, Name_0) == 0x000000, "Member 'FortHeroManagementContext_CheckHeroNameValidity::Name_0' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CheckHeroNameValidity, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_CheckHeroNameValidity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GenerateRandomHeroName
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_GenerateRandomHeroName final
{
public:
	const class UDataTable*                       NameTable;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GenerateRandomHeroName) == 0x000004, "Wrong alignment on FortHeroManagementContext_GenerateRandomHeroName");
static_assert(sizeof(FortHeroManagementContext_GenerateRandomHeroName) == 0x000010, "Wrong size on FortHeroManagementContext_GenerateRandomHeroName");
static_assert(offsetof(FortHeroManagementContext_GenerateRandomHeroName, NameTable) == 0x000000, "Member 'FortHeroManagementContext_GenerateRandomHeroName::NameTable' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GenerateRandomHeroName, Name_0) == 0x000004, "Member 'FortHeroManagementContext_GenerateRandomHeroName::Name_0' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAbilityCost
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetAbilityCost final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAbilityCost) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAbilityCost");
static_assert(sizeof(FortHeroManagementContext_GetAbilityCost) == 0x00000C, "Wrong size on FortHeroManagementContext_GetAbilityCost");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCost, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetAbilityCost::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCost, TraitDepth) == 0x000004, "Member 'FortHeroManagementContext_GetAbilityCost::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCost, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_GetAbilityCost::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAbilityCostFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GetAbilityCostFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAbilityCostFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAbilityCostFromID");
static_assert(sizeof(FortHeroManagementContext_GetAbilityCostFromID) == 0x000018, "Wrong size on FortHeroManagementContext_GetAbilityCostFromID");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetAbilityCostFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_GetAbilityCostFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, TraitDepth) == 0x000010, "Member 'FortHeroManagementContext_GetAbilityCostFromID::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_GetAbilityCostFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAllHeroIDs
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetAllHeroIDs final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAllHeroIDs) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAllHeroIDs");
static_assert(sizeof(FortHeroManagementContext_GetAllHeroIDs) == 0x00000C, "Wrong size on FortHeroManagementContext_GetAllHeroIDs");
static_assert(offsetof(FortHeroManagementContext_GetAllHeroIDs, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetAllHeroIDs::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValue
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetAttributeValue final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValue) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAttributeValue");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValue) == 0x000008, "Wrong size on FortHeroManagementContext_GetAttributeValue");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValue, Attribute) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValue::Attribute' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValue, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetAttributeValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValueFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_GetAttributeValueFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     Attribute;                                         // 0x000C(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValueFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAttributeValueFromID");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValueFromID) == 0x000014, "Wrong size on FortHeroManagementContext_GetAttributeValueFromID");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValueFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, Attribute) == 0x00000C, "Member 'FortHeroManagementContext_GetAttributeValueFromID::Attribute' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetAttributeValueFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValuesArray
// 0x001C (0x001C - 0x0000)
struct FortHeroManagementContext_GetAttributeValuesArray final
{
public:
	TArray<struct FGameplayAttribute>             Attributes;                                        // 0x0000(0x000C)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 Values;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValuesArray) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAttributeValuesArray");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValuesArray) == 0x00001C, "Wrong size on FortHeroManagementContext_GetAttributeValuesArray");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, Attributes) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValuesArray::Attributes' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, Values) == 0x00000C, "Member 'FortHeroManagementContext_GetAttributeValuesArray::Values' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, ReturnValue) == 0x000018, "Member 'FortHeroManagementContext_GetAttributeValuesArray::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValuesArrayFromID
// 0x0028 (0x0028 - 0x0000)
struct FortHeroManagementContext_GetAttributeValuesArrayFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             Attributes;                                        // 0x000C(0x000C)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 Values;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValuesArrayFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAttributeValuesArrayFromID");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValuesArrayFromID) == 0x000028, "Wrong size on FortHeroManagementContext_GetAttributeValuesArrayFromID");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, Attributes) == 0x00000C, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::Attributes' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, Values) == 0x000018, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::Values' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, ReturnValue) == 0x000024, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetCoreAbilities
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetCoreAbilities final
{
public:
	TArray<class UFortAbilityKit*>                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetCoreAbilities) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetCoreAbilities");
static_assert(sizeof(FortHeroManagementContext_GetCoreAbilities) == 0x00000C, "Wrong size on FortHeroManagementContext_GetCoreAbilities");
static_assert(offsetof(FortHeroManagementContext_GetCoreAbilities, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetCoreAbilities::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetCoreAbilitiesFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GetCoreAbilitiesFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAbilityKit*>                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetCoreAbilitiesFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetCoreAbilitiesFromID");
static_assert(sizeof(FortHeroManagementContext_GetCoreAbilitiesFromID) == 0x000018, "Wrong size on FortHeroManagementContext_GetCoreAbilitiesFromID");
static_assert(offsetof(FortHeroManagementContext_GetCoreAbilitiesFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetCoreAbilitiesFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetCoreAbilitiesFromID, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_GetCoreAbilitiesFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetMaxNameLength
// 0x0004 (0x0004 - 0x0000)
struct FortHeroManagementContext_GetMaxNameLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetMaxNameLength) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetMaxNameLength");
static_assert(sizeof(FortHeroManagementContext_GetMaxNameLength) == 0x000004, "Wrong size on FortHeroManagementContext_GetMaxNameLength");
static_assert(offsetof(FortHeroManagementContext_GetMaxNameLength, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetMaxNameLength::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNextAbilityCost
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetNextAbilityCost final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNextAbilityCost) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNextAbilityCost");
static_assert(sizeof(FortHeroManagementContext_GetNextAbilityCost) == 0x000008, "Wrong size on FortHeroManagementContext_GetNextAbilityCost");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCost, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetNextAbilityCost::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCost, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetNextAbilityCost::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNextAbilityCostFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_GetNextAbilityCostFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNextAbilityCostFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNextAbilityCostFromID");
static_assert(sizeof(FortHeroManagementContext_GetNextAbilityCostFromID) == 0x000014, "Wrong size on FortHeroManagementContext_GetNextAbilityCostFromID");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCostFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetNextAbilityCostFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCostFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_GetNextAbilityCostFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCostFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetNextAbilityCostFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNumHeroTraits
// 0x0004 (0x0004 - 0x0000)
struct FortHeroManagementContext_GetNumHeroTraits final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNumHeroTraits) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNumHeroTraits");
static_assert(sizeof(FortHeroManagementContext_GetNumHeroTraits) == 0x000004, "Wrong size on FortHeroManagementContext_GetNumHeroTraits");
static_assert(offsetof(FortHeroManagementContext_GetNumHeroTraits, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetNumHeroTraits::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNumUnspentAbilityPoints
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetNumUnspentAbilityPoints final
{
public:
	int32                                         NumAbilityPoints;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetNumUnspentAbilityPoints) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNumUnspentAbilityPoints");
static_assert(sizeof(FortHeroManagementContext_GetNumUnspentAbilityPoints) == 0x000008, "Wrong size on FortHeroManagementContext_GetNumUnspentAbilityPoints");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPoints, NumAbilityPoints) == 0x000000, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPoints::NumAbilityPoints' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPoints, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPoints::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNumUnspentAbilityPointsFromID
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_GetNumUnspentAbilityPointsFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNumUnspentAbilityPointsFromID");
static_assert(sizeof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID) == 0x000010, "Wrong size on FortHeroManagementContext_GetNumUnspentAbilityPointsFromID");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPointsFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPointsFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetTrait
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetTrait final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrait*                             ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetTrait) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetTrait");
static_assert(sizeof(FortHeroManagementContext_GetTrait) == 0x000008, "Wrong size on FortHeroManagementContext_GetTrait");
static_assert(offsetof(FortHeroManagementContext_GetTrait, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetTrait::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTrait, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetTrait::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetTraitDepth
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetTraitDepth final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetTraitDepth) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetTraitDepth");
static_assert(sizeof(FortHeroManagementContext_GetTraitDepth) == 0x00000C, "Wrong size on FortHeroManagementContext_GetTraitDepth");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepth, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetTraitDepth::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepth, Depth) == 0x000004, "Member 'FortHeroManagementContext_GetTraitDepth::Depth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepth, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_GetTraitDepth::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetTraitDepthFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_GetTraitDepthFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetTraitDepthFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetTraitDepthFromID");
static_assert(sizeof(FortHeroManagementContext_GetTraitDepthFromID) == 0x000014, "Wrong size on FortHeroManagementContext_GetTraitDepthFromID");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepthFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetTraitDepthFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepthFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_GetTraitDepthFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepthFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetTraitDepthFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetTraitFromID
// 0x0014 (0x0014 - 0x0000)
struct FortHeroManagementContext_GetTraitFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrait*                             ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetTraitFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetTraitFromID");
static_assert(sizeof(FortHeroManagementContext_GetTraitFromID) == 0x000014, "Wrong size on FortHeroManagementContext_GetTraitFromID");
static_assert(offsetof(FortHeroManagementContext_GetTraitFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetTraitFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitFromID, TraitIdx) == 0x00000C, "Member 'FortHeroManagementContext_GetTraitFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetTraitFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsCreateHeroEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsCreateHeroEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsCreateHeroEnabled) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsCreateHeroEnabled");
static_assert(sizeof(FortHeroManagementContext_IsCreateHeroEnabled) == 0x000001, "Wrong size on FortHeroManagementContext_IsCreateHeroEnabled");
static_assert(offsetof(FortHeroManagementContext_IsCreateHeroEnabled, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsCreateHeroEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsDeleteHeroEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsDeleteHeroEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsDeleteHeroEnabled) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsDeleteHeroEnabled");
static_assert(sizeof(FortHeroManagementContext_IsDeleteHeroEnabled) == 0x000001, "Wrong size on FortHeroManagementContext_IsDeleteHeroEnabled");
static_assert(offsetof(FortHeroManagementContext_IsDeleteHeroEnabled, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsDeleteHeroEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsShowingStatsScreen
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsShowingStatsScreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsShowingStatsScreen) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsShowingStatsScreen");
static_assert(sizeof(FortHeroManagementContext_IsShowingStatsScreen) == 0x000001, "Wrong size on FortHeroManagementContext_IsShowingStatsScreen");
static_assert(offsetof(FortHeroManagementContext_IsShowingStatsScreen, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsShowingStatsScreen::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsSkillTreeUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsSkillTreeUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsSkillTreeUnlocked) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsSkillTreeUnlocked");
static_assert(sizeof(FortHeroManagementContext_IsSkillTreeUnlocked) == 0x000001, "Wrong size on FortHeroManagementContext_IsSkillTreeUnlocked");
static_assert(offsetof(FortHeroManagementContext_IsSkillTreeUnlocked, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsSkillTreeUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsSkillTreeUnlockedFromID
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_IsSkillTreeUnlockedFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_IsSkillTreeUnlockedFromID) == 0x000004, "Wrong alignment on FortHeroManagementContext_IsSkillTreeUnlockedFromID");
static_assert(sizeof(FortHeroManagementContext_IsSkillTreeUnlockedFromID) == 0x000010, "Wrong size on FortHeroManagementContext_IsSkillTreeUnlockedFromID");
static_assert(offsetof(FortHeroManagementContext_IsSkillTreeUnlockedFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_IsSkillTreeUnlockedFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_IsSkillTreeUnlockedFromID, ReturnValue) == 0x00000C, "Member 'FortHeroManagementContext_IsSkillTreeUnlockedFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.NumHeroSlots
// 0x0004 (0x0004 - 0x0000)
struct FortHeroManagementContext_NumHeroSlots final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_NumHeroSlots) == 0x000004, "Wrong alignment on FortHeroManagementContext_NumHeroSlots");
static_assert(sizeof(FortHeroManagementContext_NumHeroSlots) == 0x000004, "Wrong size on FortHeroManagementContext_NumHeroSlots");
static_assert(offsetof(FortHeroManagementContext_NumHeroSlots, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_NumHeroSlots::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.EnterCursorMode
// 0x000C (0x000C - 0x0000)
struct FortHUDContext_EnterCursorMode final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeWidget;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_EnterCursorMode) == 0x000004, "Wrong alignment on FortHUDContext_EnterCursorMode");
static_assert(sizeof(FortHUDContext_EnterCursorMode) == 0x00000C, "Wrong size on FortHUDContext_EnterCursorMode");
static_assert(offsetof(FortHUDContext_EnterCursorMode, ActionName) == 0x000000, "Member 'FortHUDContext_EnterCursorMode::ActionName' has a wrong offset!");
static_assert(offsetof(FortHUDContext_EnterCursorMode, CursorModeWidget) == 0x000008, "Member 'FortHUDContext_EnterCursorMode::CursorModeWidget' has a wrong offset!");

// Function FortniteUI.FortHUDContext.ForwardOnWeaponEquipped
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_ForwardOnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_ForwardOnWeaponEquipped) == 0x000004, "Wrong alignment on FortHUDContext_ForwardOnWeaponEquipped");
static_assert(sizeof(FortHUDContext_ForwardOnWeaponEquipped) == 0x000008, "Wrong size on FortHUDContext_ForwardOnWeaponEquipped");
static_assert(offsetof(FortHUDContext_ForwardOnWeaponEquipped, NewWeapon) == 0x000000, "Member 'FortHUDContext_ForwardOnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(FortHUDContext_ForwardOnWeaponEquipped, PrevWeapon) == 0x000004, "Member 'FortHUDContext_ForwardOnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetKillerVisualInfoFromDeathReport
// 0x0098 (0x0098 - 0x0000)
struct FortHUDContext_GetKillerVisualInfoFromDeathReport final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFortKillerVisualInfo                  ReturnValue;                                       // 0x0018(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetKillerVisualInfoFromDeathReport) == 0x000004, "Wrong alignment on FortHUDContext_GetKillerVisualInfoFromDeathReport");
static_assert(sizeof(FortHUDContext_GetKillerVisualInfoFromDeathReport) == 0x000098, "Wrong size on FortHUDContext_GetKillerVisualInfoFromDeathReport");
static_assert(offsetof(FortHUDContext_GetKillerVisualInfoFromDeathReport, DeathReport) == 0x000000, "Member 'FortHUDContext_GetKillerVisualInfoFromDeathReport::DeathReport' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetKillerVisualInfoFromDeathReport, ReturnValue) == 0x000018, "Member 'FortHUDContext_GetKillerVisualInfoFromDeathReport::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.HandleLocalPawnDied
// 0x0018 (0x0018 - 0x0000)
struct FortHUDContext_HandleLocalPawnDied final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_HandleLocalPawnDied) == 0x000004, "Wrong alignment on FortHUDContext_HandleLocalPawnDied");
static_assert(sizeof(FortHUDContext_HandleLocalPawnDied) == 0x000018, "Wrong size on FortHUDContext_HandleLocalPawnDied");
static_assert(offsetof(FortHUDContext_HandleLocalPawnDied, DeathReport) == 0x000000, "Member 'FortHUDContext_HandleLocalPawnDied::DeathReport' has a wrong offset!");

// Function FortniteUI.FortHUDContext.SetIndicatorsAllowed
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_SetIndicatorsAllowed final
{
public:
	bool                                          bIndicatorsAllowed;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_SetIndicatorsAllowed) == 0x000001, "Wrong alignment on FortHUDContext_SetIndicatorsAllowed");
static_assert(sizeof(FortHUDContext_SetIndicatorsAllowed) == 0x000001, "Wrong size on FortHUDContext_SetIndicatorsAllowed");
static_assert(offsetof(FortHUDContext_SetIndicatorsAllowed, bIndicatorsAllowed) == 0x000000, "Member 'FortHUDContext_SetIndicatorsAllowed::bIndicatorsAllowed' has a wrong offset!");

// Function FortniteUI.FortHUDContext.AreIndicatorsEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_AreIndicatorsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_AreIndicatorsEnabled) == 0x000001, "Wrong alignment on FortHUDContext_AreIndicatorsEnabled");
static_assert(sizeof(FortHUDContext_AreIndicatorsEnabled) == 0x000001, "Wrong size on FortHUDContext_AreIndicatorsEnabled");
static_assert(offsetof(FortHUDContext_AreIndicatorsEnabled, ReturnValue) == 0x000000, "Member 'FortHUDContext_AreIndicatorsEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetCurrentHero
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetCurrentHero final
{
public:
	class UFortHero*                              ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetCurrentHero) == 0x000004, "Wrong alignment on FortHUDContext_GetCurrentHero");
static_assert(sizeof(FortHUDContext_GetCurrentHero) == 0x000004, "Wrong size on FortHUDContext_GetCurrentHero");
static_assert(offsetof(FortHUDContext_GetCurrentHero, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetCurrentHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetFocusedBuildingInfo
// 0x0044 (0x0044 - 0x0000)
struct FortHUDContext_GetFocusedBuildingInfo final
{
public:
	struct FFortFocusedBuildingInfo               OutBuildingInfo;                                   // 0x0000(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHUDContext_GetFocusedBuildingInfo) == 0x000004, "Wrong alignment on FortHUDContext_GetFocusedBuildingInfo");
static_assert(sizeof(FortHUDContext_GetFocusedBuildingInfo) == 0x000044, "Wrong size on FortHUDContext_GetFocusedBuildingInfo");
static_assert(offsetof(FortHUDContext_GetFocusedBuildingInfo, OutBuildingInfo) == 0x000000, "Member 'FortHUDContext_GetFocusedBuildingInfo::OutBuildingInfo' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetFocusedBuildingInfo, ReturnValue) == 0x000040, "Member 'FortHUDContext_GetFocusedBuildingInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetGameStateZone
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetGameStateZone final
{
public:
	class AFortGameStateZone*                     ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetGameStateZone) == 0x000004, "Wrong alignment on FortHUDContext_GetGameStateZone");
static_assert(sizeof(FortHUDContext_GetGameStateZone) == 0x000004, "Wrong size on FortHUDContext_GetGameStateZone");
static_assert(offsetof(FortHUDContext_GetGameStateZone, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetGameStateZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetPlayerAbilitySystemComponent
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetPlayerAbilitySystemComponent final
{
public:
	class UFortAbilitySystemComponent*            ReturnValue;                                       // 0x0000(0x0004)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetPlayerAbilitySystemComponent) == 0x000004, "Wrong alignment on FortHUDContext_GetPlayerAbilitySystemComponent");
static_assert(sizeof(FortHUDContext_GetPlayerAbilitySystemComponent) == 0x000004, "Wrong size on FortHUDContext_GetPlayerAbilitySystemComponent");
static_assert(offsetof(FortHUDContext_GetPlayerAbilitySystemComponent, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetPlayerAbilitySystemComponent::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetPlayerStateZone
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetPlayerStateZone final
{
public:
	class AFortPlayerStateZone*                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetPlayerStateZone) == 0x000004, "Wrong alignment on FortHUDContext_GetPlayerStateZone");
static_assert(sizeof(FortHUDContext_GetPlayerStateZone) == 0x000004, "Wrong size on FortHUDContext_GetPlayerStateZone");
static_assert(offsetof(FortHUDContext_GetPlayerStateZone, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetPlayerStateZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetScoreDisplayFactor
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetScoreDisplayFactor final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetScoreDisplayFactor) == 0x000004, "Wrong alignment on FortHUDContext_GetScoreDisplayFactor");
static_assert(sizeof(FortHUDContext_GetScoreDisplayFactor) == 0x000004, "Wrong size on FortHUDContext_GetScoreDisplayFactor");
static_assert(offsetof(FortHUDContext_GetScoreDisplayFactor, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetScoreDisplayFactor::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetTeamCornerstone
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetTeamCornerstone final
{
public:
	EFortTeam                                     Team;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPvPBaseCornerstone*                ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetTeamCornerstone) == 0x000004, "Wrong alignment on FortHUDContext_GetTeamCornerstone");
static_assert(sizeof(FortHUDContext_GetTeamCornerstone) == 0x000008, "Wrong size on FortHUDContext_GetTeamCornerstone");
static_assert(offsetof(FortHUDContext_GetTeamCornerstone, Team) == 0x000000, "Member 'FortHUDContext_GetTeamCornerstone::Team' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetTeamCornerstone, ReturnValue) == 0x000004, "Member 'FortHUDContext_GetTeamCornerstone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.IsInCursorMode
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_IsInCursorMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_IsInCursorMode) == 0x000001, "Wrong alignment on FortHUDContext_IsInCursorMode");
static_assert(sizeof(FortHUDContext_IsInCursorMode) == 0x000001, "Wrong size on FortHUDContext_IsInCursorMode");
static_assert(offsetof(FortHUDContext_IsInCursorMode, ReturnValue) == 0x000000, "Member 'FortHUDContext_IsInCursorMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.ActivateItem
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_ActivateItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_ActivateItem) == 0x000004, "Wrong alignment on FortInventoryContext_ActivateItem");
static_assert(sizeof(FortInventoryContext_ActivateItem) == 0x000008, "Wrong size on FortInventoryContext_ActivateItem");
static_assert(offsetof(FortInventoryContext_ActivateItem, Item) == 0x000000, "Member 'FortInventoryContext_ActivateItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_ActivateItem, ReturnValue) == 0x000004, "Member 'FortInventoryContext_ActivateItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CraftSchematic
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_CraftSchematic final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCraftFailCause                           FailCause;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CraftSchematic) == 0x000004, "Wrong alignment on FortInventoryContext_CraftSchematic");
static_assert(sizeof(FortInventoryContext_CraftSchematic) == 0x000008, "Wrong size on FortInventoryContext_CraftSchematic");
static_assert(offsetof(FortInventoryContext_CraftSchematic, SchematicItem) == 0x000000, "Member 'FortInventoryContext_CraftSchematic::SchematicItem' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftSchematic, FailCause) == 0x000004, "Member 'FortInventoryContext_CraftSchematic::FailCause' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftSchematic, ReturnValue) == 0x000005, "Member 'FortInventoryContext_CraftSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DisassembleItem
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_DisassembleItem final
{
public:
	class UFortWorldItem*                         Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_DisassembleItem) == 0x000004, "Wrong alignment on FortInventoryContext_DisassembleItem");
static_assert(sizeof(FortInventoryContext_DisassembleItem) == 0x000008, "Wrong size on FortInventoryContext_DisassembleItem");
static_assert(offsetof(FortInventoryContext_DisassembleItem, Item) == 0x000000, "Member 'FortInventoryContext_DisassembleItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DisassembleItem, ReturnValue) == 0x000004, "Member 'FortInventoryContext_DisassembleItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DropItemOnPlayerOrWorld
// 0x00A0 (0x00A0 - 0x0000)
struct FortInventoryContext_DropItemOnPlayerOrWorld final
{
public:
	const class UFortWorldItem*                   ItemBeingDropped;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerState*                       InDestinationPlayer;                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                OwnerWidget;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPointerEvent                          PointerEvent;                                      // 0x000C(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGeometry                              InGeometry;                                        // 0x006C(0x0034)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_DropItemOnPlayerOrWorld) == 0x000004, "Wrong alignment on FortInventoryContext_DropItemOnPlayerOrWorld");
static_assert(sizeof(FortInventoryContext_DropItemOnPlayerOrWorld) == 0x0000A0, "Wrong size on FortInventoryContext_DropItemOnPlayerOrWorld");
static_assert(offsetof(FortInventoryContext_DropItemOnPlayerOrWorld, ItemBeingDropped) == 0x000000, "Member 'FortInventoryContext_DropItemOnPlayerOrWorld::ItemBeingDropped' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnPlayerOrWorld, InDestinationPlayer) == 0x000004, "Member 'FortInventoryContext_DropItemOnPlayerOrWorld::InDestinationPlayer' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnPlayerOrWorld, OwnerWidget) == 0x000008, "Member 'FortInventoryContext_DropItemOnPlayerOrWorld::OwnerWidget' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnPlayerOrWorld, PointerEvent) == 0x00000C, "Member 'FortInventoryContext_DropItemOnPlayerOrWorld::PointerEvent' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnPlayerOrWorld, InGeometry) == 0x00006C, "Member 'FortInventoryContext_DropItemOnPlayerOrWorld::InGeometry' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DropItemOnQuickBar
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_DropItemOnQuickBar final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortQuickBars                                TargetQuickbar;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetSlot;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_DropItemOnQuickBar) == 0x000004, "Wrong alignment on FortInventoryContext_DropItemOnQuickBar");
static_assert(sizeof(FortInventoryContext_DropItemOnQuickBar) == 0x000010, "Wrong size on FortInventoryContext_DropItemOnQuickBar");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, Item) == 0x000000, "Member 'FortInventoryContext_DropItemOnQuickBar::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, TargetQuickbar) == 0x000004, "Member 'FortInventoryContext_DropItemOnQuickBar::TargetQuickbar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, TargetSlot) == 0x000008, "Member 'FortInventoryContext_DropItemOnQuickBar::TargetSlot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, ReturnValue) == 0x00000C, "Member 'FortInventoryContext_DropItemOnQuickBar::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.RemoveItemFromQuickBar
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_RemoveItemFromQuickBar final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_RemoveItemFromQuickBar) == 0x000004, "Wrong alignment on FortInventoryContext_RemoveItemFromQuickBar");
static_assert(sizeof(FortInventoryContext_RemoveItemFromQuickBar) == 0x000008, "Wrong size on FortInventoryContext_RemoveItemFromQuickBar");
static_assert(offsetof(FortInventoryContext_RemoveItemFromQuickBar, Item) == 0x000000, "Member 'FortInventoryContext_RemoveItemFromQuickBar::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_RemoveItemFromQuickBar, ReturnValue) == 0x000004, "Member 'FortInventoryContext_RemoveItemFromQuickBar::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.SetSchematicPinned
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_SetSchematicPinned final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_SetSchematicPinned) == 0x000004, "Wrong alignment on FortInventoryContext_SetSchematicPinned");
static_assert(sizeof(FortInventoryContext_SetSchematicPinned) == 0x000008, "Wrong size on FortInventoryContext_SetSchematicPinned");
static_assert(offsetof(FortInventoryContext_SetSchematicPinned, Schematic) == 0x000000, "Member 'FortInventoryContext_SetSchematicPinned::Schematic' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_SetSchematicPinned, bEnabled) == 0x000004, "Member 'FortInventoryContext_SetSchematicPinned::bEnabled' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_SetSchematicPinned, ReturnValue) == 0x000005, "Member 'FortInventoryContext_SetSchematicPinned::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.UnlockSchematic
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_UnlockSchematic final
{
public:
	class UFortSchematicItemDefinition*           SchematicDefinition;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_UnlockSchematic) == 0x000004, "Wrong alignment on FortInventoryContext_UnlockSchematic");
static_assert(sizeof(FortInventoryContext_UnlockSchematic) == 0x000004, "Wrong size on FortInventoryContext_UnlockSchematic");
static_assert(offsetof(FortInventoryContext_UnlockSchematic, SchematicDefinition) == 0x000000, "Member 'FortInventoryContext_UnlockSchematic::SchematicDefinition' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanCraftSchematic
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_CanCraftSchematic final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCraftFailCause                           FailCause;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanCraftSchematic) == 0x000004, "Wrong alignment on FortInventoryContext_CanCraftSchematic");
static_assert(sizeof(FortInventoryContext_CanCraftSchematic) == 0x000008, "Wrong size on FortInventoryContext_CanCraftSchematic");
static_assert(offsetof(FortInventoryContext_CanCraftSchematic, SchematicItem) == 0x000000, "Member 'FortInventoryContext_CanCraftSchematic::SchematicItem' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanCraftSchematic, FailCause) == 0x000004, "Member 'FortInventoryContext_CanCraftSchematic::FailCause' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanCraftSchematic, ReturnValue) == 0x000005, "Member 'FortInventoryContext_CanCraftSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanDisassembleItem
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_CanDisassembleItem final
{
public:
	class UFortWorldItem*                         Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanDisassembleItem) == 0x000004, "Wrong alignment on FortInventoryContext_CanDisassembleItem");
static_assert(sizeof(FortInventoryContext_CanDisassembleItem) == 0x000008, "Wrong size on FortInventoryContext_CanDisassembleItem");
static_assert(offsetof(FortInventoryContext_CanDisassembleItem, Item) == 0x000000, "Member 'FortInventoryContext_CanDisassembleItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanDisassembleItem, ReturnValue) == 0x000004, "Member 'FortInventoryContext_CanDisassembleItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanPinSchematic
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_CanPinSchematic final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanPinSchematic) == 0x000004, "Wrong alignment on FortInventoryContext_CanPinSchematic");
static_assert(sizeof(FortInventoryContext_CanPinSchematic) == 0x000008, "Wrong size on FortInventoryContext_CanPinSchematic");
static_assert(offsetof(FortInventoryContext_CanPinSchematic, Schematic) == 0x000000, "Member 'FortInventoryContext_CanPinSchematic::Schematic' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanPinSchematic, ReturnValue) == 0x000004, "Member 'FortInventoryContext_CanPinSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DoesItemMatchFilter
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_DoesItemMatchFilter final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortItemListFilter                    FilterSettings;                                    // 0x0004(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_DoesItemMatchFilter) == 0x000004, "Wrong alignment on FortInventoryContext_DoesItemMatchFilter");
static_assert(sizeof(FortInventoryContext_DoesItemMatchFilter) == 0x000018, "Wrong size on FortInventoryContext_DoesItemMatchFilter");
static_assert(offsetof(FortInventoryContext_DoesItemMatchFilter, Item) == 0x000000, "Member 'FortInventoryContext_DoesItemMatchFilter::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DoesItemMatchFilter, FilterSettings) == 0x000004, "Member 'FortInventoryContext_DoesItemMatchFilter::FilterSettings' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DoesItemMatchFilter, ReturnValue) == 0x000014, "Member 'FortInventoryContext_DoesItemMatchFilter::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetBackpackItemCounts
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_GetBackpackItemCounts final
{
public:
	int32                                         ItemsCount;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxItemsCount;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverflowItemsCount;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetBackpackItemCounts) == 0x000004, "Wrong alignment on FortInventoryContext_GetBackpackItemCounts");
static_assert(sizeof(FortInventoryContext_GetBackpackItemCounts) == 0x00000C, "Wrong size on FortInventoryContext_GetBackpackItemCounts");
static_assert(offsetof(FortInventoryContext_GetBackpackItemCounts, ItemsCount) == 0x000000, "Member 'FortInventoryContext_GetBackpackItemCounts::ItemsCount' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetBackpackItemCounts, MaxItemsCount) == 0x000004, "Member 'FortInventoryContext_GetBackpackItemCounts::MaxItemsCount' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetBackpackItemCounts, OverflowItemsCount) == 0x000008, "Member 'FortInventoryContext_GetBackpackItemCounts::OverflowItemsCount' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentAmmoIcon
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCurrentAmmoIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentAmmoIcon) == 0x000004, "Wrong alignment on FortInventoryContext_GetCurrentAmmoIcon");
static_assert(sizeof(FortInventoryContext_GetCurrentAmmoIcon) == 0x000004, "Wrong size on FortInventoryContext_GetCurrentAmmoIcon");
static_assert(offsetof(FortInventoryContext_GetCurrentAmmoIcon, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentAmmoIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentAmmoItemDefinition
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCurrentAmmoItemDefinition final
{
public:
	class UFortWorldItemDefinition*               ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentAmmoItemDefinition) == 0x000004, "Wrong alignment on FortInventoryContext_GetCurrentAmmoItemDefinition");
static_assert(sizeof(FortInventoryContext_GetCurrentAmmoItemDefinition) == 0x000004, "Wrong size on FortInventoryContext_GetCurrentAmmoItemDefinition");
static_assert(offsetof(FortInventoryContext_GetCurrentAmmoItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentAmmoItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentResourceCount
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCurrentResourceCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentResourceCount) == 0x000004, "Wrong alignment on FortInventoryContext_GetCurrentResourceCount");
static_assert(sizeof(FortInventoryContext_GetCurrentResourceCount) == 0x000004, "Wrong size on FortInventoryContext_GetCurrentResourceCount");
static_assert(offsetof(FortInventoryContext_GetCurrentResourceCount, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentResourceCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentResourceIcon
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCurrentResourceIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentResourceIcon) == 0x000004, "Wrong alignment on FortInventoryContext_GetCurrentResourceIcon");
static_assert(sizeof(FortInventoryContext_GetCurrentResourceIcon) == 0x000004, "Wrong size on FortInventoryContext_GetCurrentResourceIcon");
static_assert(offsetof(FortInventoryContext_GetCurrentResourceIcon, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentResourceIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentResourceItemDefinition
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCurrentResourceItemDefinition final
{
public:
	class UFortResourceItemDefinition*            ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentResourceItemDefinition) == 0x000004, "Wrong alignment on FortInventoryContext_GetCurrentResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetCurrentResourceItemDefinition) == 0x000004, "Wrong size on FortInventoryContext_GetCurrentResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetCurrentResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetEquippedWeapon
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetEquippedWeapon final
{
public:
	class AFortWeapon*                            ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetEquippedWeapon) == 0x000004, "Wrong alignment on FortInventoryContext_GetEquippedWeapon");
static_assert(sizeof(FortInventoryContext_GetEquippedWeapon) == 0x000004, "Wrong size on FortInventoryContext_GetEquippedWeapon");
static_assert(offsetof(FortInventoryContext_GetEquippedWeapon, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetEquippedWeapon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetNumInInventory
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_GetNumInInventory final
{
public:
	class UFortWorldItemDefinition*               ItemDefinition;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeReserved;                                  // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetNumInInventory) == 0x000004, "Wrong alignment on FortInventoryContext_GetNumInInventory");
static_assert(sizeof(FortInventoryContext_GetNumInInventory) == 0x00000C, "Wrong size on FortInventoryContext_GetNumInInventory");
static_assert(offsetof(FortInventoryContext_GetNumInInventory, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetNumInInventory::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetNumInInventory, bIncludeReserved) == 0x000004, "Member 'FortInventoryContext_GetNumInInventory::bIncludeReserved' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetNumInInventory, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetNumInInventory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetPinnedSchematicList
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_GetPinnedSchematicList final
{
public:
	TArray<class UFortSchematicItem*>             PinnedItems;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetPinnedSchematicList) == 0x000004, "Wrong alignment on FortInventoryContext_GetPinnedSchematicList");
static_assert(sizeof(FortInventoryContext_GetPinnedSchematicList) == 0x00000C, "Wrong size on FortInventoryContext_GetPinnedSchematicList");
static_assert(offsetof(FortInventoryContext_GetPinnedSchematicList, PinnedItems) == 0x000000, "Member 'FortInventoryContext_GetPinnedSchematicList::PinnedItems' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetQuickbarFocus
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetQuickbarFocus final
{
public:
	EFortQuickBars                                OutQuickBar;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutSlot;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetQuickbarFocus) == 0x000004, "Wrong alignment on FortInventoryContext_GetQuickbarFocus");
static_assert(sizeof(FortInventoryContext_GetQuickbarFocus) == 0x000008, "Wrong size on FortInventoryContext_GetQuickbarFocus");
static_assert(offsetof(FortInventoryContext_GetQuickbarFocus, OutQuickBar) == 0x000000, "Member 'FortInventoryContext_GetQuickbarFocus::OutQuickBar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickbarFocus, OutSlot) == 0x000004, "Member 'FortInventoryContext_GetQuickbarFocus::OutSlot' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetQuickBarSlottedItem
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_GetQuickBarSlottedItem final
{
public:
	EFortQuickBars                                InQuickBar;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetQuickBarSlottedItem) == 0x000004, "Wrong alignment on FortInventoryContext_GetQuickBarSlottedItem");
static_assert(sizeof(FortInventoryContext_GetQuickBarSlottedItem) == 0x00000C, "Wrong size on FortInventoryContext_GetQuickBarSlottedItem");
static_assert(offsetof(FortInventoryContext_GetQuickBarSlottedItem, InQuickBar) == 0x000000, "Member 'FortInventoryContext_GetQuickBarSlottedItem::InQuickBar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickBarSlottedItem, Slot) == 0x000004, "Member 'FortInventoryContext_GetQuickBarSlottedItem::Slot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickBarSlottedItem, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetQuickBarSlottedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetResourceCount
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetResourceCount final
{
public:
	EFortResourceType                             ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetResourceCount) == 0x000004, "Wrong alignment on FortInventoryContext_GetResourceCount");
static_assert(sizeof(FortInventoryContext_GetResourceCount) == 0x000008, "Wrong size on FortInventoryContext_GetResourceCount");
static_assert(offsetof(FortInventoryContext_GetResourceCount, ResourceType) == 0x000000, "Member 'FortInventoryContext_GetResourceCount::ResourceType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetResourceCount, ReturnValue) == 0x000004, "Member 'FortInventoryContext_GetResourceCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetResourceIcon
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetResourceIcon final
{
public:
	EFortResourceType                             ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetResourceIcon) == 0x000004, "Wrong alignment on FortInventoryContext_GetResourceIcon");
static_assert(sizeof(FortInventoryContext_GetResourceIcon) == 0x000008, "Wrong size on FortInventoryContext_GetResourceIcon");
static_assert(offsetof(FortInventoryContext_GetResourceIcon, ResourceType) == 0x000000, "Member 'FortInventoryContext_GetResourceIcon::ResourceType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetResourceIcon, ReturnValue) == 0x000004, "Member 'FortInventoryContext_GetResourceIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetResourceItemDefinition final
{
public:
	EFortResourceType                             ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortResourceItemDefinition*            ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetResourceItemDefinition) == 0x000004, "Wrong alignment on FortInventoryContext_GetResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetResourceItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetResourceItemDefinition, ResourceType) == 0x000000, "Member 'FortInventoryContext_GetResourceItemDefinition::ResourceType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetResourceItemDefinition, ReturnValue) == 0x000004, "Member 'FortInventoryContext_GetResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetSchematicItemList
// 0x001C (0x001C - 0x0000)
struct FortInventoryContext_GetSchematicItemList final
{
public:
	TArray<class UFortSchematicItem*>             Items;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortItemListFilter                    FilterSettings;                                    // 0x000C(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetSchematicItemList) == 0x000004, "Wrong alignment on FortInventoryContext_GetSchematicItemList");
static_assert(sizeof(FortInventoryContext_GetSchematicItemList) == 0x00001C, "Wrong size on FortInventoryContext_GetSchematicItemList");
static_assert(offsetof(FortInventoryContext_GetSchematicItemList, Items) == 0x000000, "Member 'FortInventoryContext_GetSchematicItemList::Items' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetSchematicItemList, FilterSettings) == 0x00000C, "Member 'FortInventoryContext_GetSchematicItemList::FilterSettings' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetWorldItemList
// 0x001C (0x001C - 0x0000)
struct FortInventoryContext_GetWorldItemList final
{
public:
	TArray<class UFortWorldItem*>                 Items;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortItemListFilter                    FilterSettings;                                    // 0x000C(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetWorldItemList) == 0x000004, "Wrong alignment on FortInventoryContext_GetWorldItemList");
static_assert(sizeof(FortInventoryContext_GetWorldItemList) == 0x00001C, "Wrong size on FortInventoryContext_GetWorldItemList");
static_assert(offsetof(FortInventoryContext_GetWorldItemList, Items) == 0x000000, "Member 'FortInventoryContext_GetWorldItemList::Items' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetWorldItemList, FilterSettings) == 0x00000C, "Member 'FortInventoryContext_GetWorldItemList::FilterSettings' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.IsSchematicPinned
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_IsSchematicPinned final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_IsSchematicPinned) == 0x000004, "Wrong alignment on FortInventoryContext_IsSchematicPinned");
static_assert(sizeof(FortInventoryContext_IsSchematicPinned) == 0x000008, "Wrong size on FortInventoryContext_IsSchematicPinned");
static_assert(offsetof(FortInventoryContext_IsSchematicPinned, Schematic) == 0x000000, "Member 'FortInventoryContext_IsSchematicPinned::Schematic' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsSchematicPinned, ReturnValue) == 0x000004, "Member 'FortInventoryContext_IsSchematicPinned::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.WillQuickBarAcceptItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_WillQuickBarAcceptItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortQuickBars                                InQuickBar;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_WillQuickBarAcceptItem) == 0x000004, "Wrong alignment on FortInventoryContext_WillQuickBarAcceptItem");
static_assert(sizeof(FortInventoryContext_WillQuickBarAcceptItem) == 0x000010, "Wrong size on FortInventoryContext_WillQuickBarAcceptItem");
static_assert(offsetof(FortInventoryContext_WillQuickBarAcceptItem, Item) == 0x000000, "Member 'FortInventoryContext_WillQuickBarAcceptItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_WillQuickBarAcceptItem, InQuickBar) == 0x000004, "Member 'FortInventoryContext_WillQuickBarAcceptItem::InQuickBar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_WillQuickBarAcceptItem, Slot) == 0x000008, "Member 'FortInventoryContext_WillQuickBarAcceptItem::Slot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_WillQuickBarAcceptItem, ReturnValue) == 0x00000C, "Member 'FortInventoryContext_WillQuickBarAcceptItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLegacySlateBridgeWidget.SetOnCloseHandler
// 0x0010 (0x0010 - 0x0000)
struct FortLegacySlateBridgeWidget_SetOnCloseHandler final
{
public:
	TDelegate<void()>                             OnCloseHandler;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLegacySlateBridgeWidget_SetOnCloseHandler) == 0x000004, "Wrong alignment on FortLegacySlateBridgeWidget_SetOnCloseHandler");
static_assert(sizeof(FortLegacySlateBridgeWidget_SetOnCloseHandler) == 0x000010, "Wrong size on FortLegacySlateBridgeWidget_SetOnCloseHandler");
static_assert(offsetof(FortLegacySlateBridgeWidget_SetOnCloseHandler, OnCloseHandler) == 0x000000, "Member 'FortLegacySlateBridgeWidget_SetOnCloseHandler::OnCloseHandler' has a wrong offset!");

// Function FortniteUI.FortLegacySlateBridgeWidget.UpdateSlateWidget
// 0x0001 (0x0001 - 0x0000)
struct FortLegacySlateBridgeWidget_UpdateSlateWidget final
{
public:
	EFortLegacySlateWidget                        SlateWidgetType;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLegacySlateBridgeWidget_UpdateSlateWidget) == 0x000001, "Wrong alignment on FortLegacySlateBridgeWidget_UpdateSlateWidget");
static_assert(sizeof(FortLegacySlateBridgeWidget_UpdateSlateWidget) == 0x000001, "Wrong size on FortLegacySlateBridgeWidget_UpdateSlateWidget");
static_assert(offsetof(FortLegacySlateBridgeWidget_UpdateSlateWidget, SlateWidgetType) == 0x000000, "Member 'FortLegacySlateBridgeWidget_UpdateSlateWidget::SlateWidgetType' has a wrong offset!");

// Function FortniteUI.FortListView.AddItem
// 0x0004 (0x0004 - 0x0000)
struct FortListView_AddItem final
{
public:
	class UObject*                                NewItem;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_AddItem) == 0x000004, "Wrong alignment on FortListView_AddItem");
static_assert(sizeof(FortListView_AddItem) == 0x000004, "Wrong size on FortListView_AddItem");
static_assert(offsetof(FortListView_AddItem, NewItem) == 0x000000, "Member 'FortListView_AddItem::NewItem' has a wrong offset!");

// Function FortniteUI.FortListView.RemoveItemAt
// 0x0004 (0x0004 - 0x0000)
struct FortListView_RemoveItemAt final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_RemoveItemAt) == 0x000004, "Wrong alignment on FortListView_RemoveItemAt");
static_assert(sizeof(FortListView_RemoveItemAt) == 0x000004, "Wrong size on FortListView_RemoveItemAt");
static_assert(offsetof(FortListView_RemoveItemAt, INDEX) == 0x000000, "Member 'FortListView_RemoveItemAt::INDEX' has a wrong offset!");

// Function FortniteUI.FortListView.SetDataProvider
// 0x000C (0x000C - 0x0000)
struct FortListView_SetDataProvider final
{
public:
	TArray<class UObject*>                        NewData;                                           // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_SetDataProvider) == 0x000004, "Wrong alignment on FortListView_SetDataProvider");
static_assert(sizeof(FortListView_SetDataProvider) == 0x00000C, "Wrong size on FortListView_SetDataProvider");
static_assert(offsetof(FortListView_SetDataProvider, NewData) == 0x000000, "Member 'FortListView_SetDataProvider::NewData' has a wrong offset!");

// Function FortniteUI.FortListView.SetIndexSelected
// 0x0008 (0x0008 - 0x0000)
struct FortListView_SetIndexSelected final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortListView_SetIndexSelected) == 0x000004, "Wrong alignment on FortListView_SetIndexSelected");
static_assert(sizeof(FortListView_SetIndexSelected) == 0x000008, "Wrong size on FortListView_SetIndexSelected");
static_assert(offsetof(FortListView_SetIndexSelected, INDEX) == 0x000000, "Member 'FortListView_SetIndexSelected::INDEX' has a wrong offset!");
static_assert(offsetof(FortListView_SetIndexSelected, ReturnValue) == 0x000004, "Member 'FortListView_SetIndexSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.SetItemSelected
// 0x0008 (0x0008 - 0x0000)
struct FortListView_SetItemSelected final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortListView_SetItemSelected) == 0x000004, "Wrong alignment on FortListView_SetItemSelected");
static_assert(sizeof(FortListView_SetItemSelected) == 0x000008, "Wrong size on FortListView_SetItemSelected");
static_assert(offsetof(FortListView_SetItemSelected, Item) == 0x000000, "Member 'FortListView_SetItemSelected::Item' has a wrong offset!");
static_assert(offsetof(FortListView_SetItemSelected, ReturnValue) == 0x000004, "Member 'FortListView_SetItemSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.GetIndexForItem
// 0x0008 (0x0008 - 0x0000)
struct FortListView_GetIndexForItem final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_GetIndexForItem) == 0x000004, "Wrong alignment on FortListView_GetIndexForItem");
static_assert(sizeof(FortListView_GetIndexForItem) == 0x000008, "Wrong size on FortListView_GetIndexForItem");
static_assert(offsetof(FortListView_GetIndexForItem, Item) == 0x000000, "Member 'FortListView_GetIndexForItem::Item' has a wrong offset!");
static_assert(offsetof(FortListView_GetIndexForItem, ReturnValue) == 0x000004, "Member 'FortListView_GetIndexForItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.GetItemAt
// 0x0008 (0x0008 - 0x0000)
struct FortListView_GetItemAt final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_GetItemAt) == 0x000004, "Wrong alignment on FortListView_GetItemAt");
static_assert(sizeof(FortListView_GetItemAt) == 0x000008, "Wrong size on FortListView_GetItemAt");
static_assert(offsetof(FortListView_GetItemAt, INDEX) == 0x000000, "Member 'FortListView_GetItemAt::INDEX' has a wrong offset!");
static_assert(offsetof(FortListView_GetItemAt, ReturnValue) == 0x000004, "Member 'FortListView_GetItemAt::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSocialListView.SetList
// 0x000C (0x000C - 0x0000)
struct FortSocialListView_SetList final
{
public:
	TArray<class UFortSocialItem*>                InList;                                            // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSocialListView_SetList) == 0x000004, "Wrong alignment on FortSocialListView_SetList");
static_assert(sizeof(FortSocialListView_SetList) == 0x00000C, "Wrong size on FortSocialListView_SetList");
static_assert(offsetof(FortSocialListView_SetList, InList) == 0x000000, "Member 'FortSocialListView_SetList::InList' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardAddedToSummaryComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardAddedToSummaryComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardAddedToSummaryComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardAddedToSummaryComplete");
static_assert(sizeof(FortStoreContext_CardAddedToSummaryComplete) == 0x000001, "Wrong size on FortStoreContext_CardAddedToSummaryComplete");
static_assert(offsetof(FortStoreContext_CardAddedToSummaryComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardAddedToSummaryComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardBackRevealComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardBackRevealComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardBackRevealComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardBackRevealComplete");
static_assert(sizeof(FortStoreContext_CardBackRevealComplete) == 0x000001, "Wrong size on FortStoreContext_CardBackRevealComplete");
static_assert(offsetof(FortStoreContext_CardBackRevealComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardBackRevealComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardEntryComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardEntryComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardEntryComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardEntryComplete");
static_assert(sizeof(FortStoreContext_CardEntryComplete) == 0x000001, "Wrong size on FortStoreContext_CardEntryComplete");
static_assert(offsetof(FortStoreContext_CardEntryComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardEntryComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardExitComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardExitComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardExitComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardExitComplete");
static_assert(sizeof(FortStoreContext_CardExitComplete) == 0x000001, "Wrong size on FortStoreContext_CardExitComplete");
static_assert(offsetof(FortStoreContext_CardExitComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardExitComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardFlipComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardFlipComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardFlipComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardFlipComplete");
static_assert(sizeof(FortStoreContext_CardFlipComplete) == 0x000001, "Wrong size on FortStoreContext_CardFlipComplete");
static_assert(offsetof(FortStoreContext_CardFlipComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardFlipComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardFrontRevealComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardFrontRevealComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardFrontRevealComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardFrontRevealComplete");
static_assert(sizeof(FortStoreContext_CardFrontRevealComplete) == 0x000001, "Wrong size on FortStoreContext_CardFrontRevealComplete");
static_assert(offsetof(FortStoreContext_CardFrontRevealComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardFrontRevealComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardPackDestroyComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardPackDestroyComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardPackDestroyComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardPackDestroyComplete");
static_assert(sizeof(FortStoreContext_CardPackDestroyComplete) == 0x000001, "Wrong size on FortStoreContext_CardPackDestroyComplete");
static_assert(offsetof(FortStoreContext_CardPackDestroyComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardPackDestroyComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardPackOpeningComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardPackOpeningComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardPackOpeningComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardPackOpeningComplete");
static_assert(sizeof(FortStoreContext_CardPackOpeningComplete) == 0x000001, "Wrong size on FortStoreContext_CardPackOpeningComplete");
static_assert(offsetof(FortStoreContext_CardPackOpeningComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardPackOpeningComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.EnterCardPackStore
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_EnterCardPackStore final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_EnterCardPackStore) == 0x000001, "Wrong alignment on FortStoreContext_EnterCardPackStore");
static_assert(sizeof(FortStoreContext_EnterCardPackStore) == 0x000001, "Wrong size on FortStoreContext_EnterCardPackStore");
static_assert(offsetof(FortStoreContext_EnterCardPackStore, ReturnValue) == 0x000000, "Member 'FortStoreContext_EnterCardPackStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.EnterCurrencyStore
// 0x0010 (0x0010 - 0x0000)
struct FortStoreContext_EnterCurrencyStore final
{
public:
	class FString                                 AttemptedPurchaseCardPackId;                       // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_EnterCurrencyStore) == 0x000004, "Wrong alignment on FortStoreContext_EnterCurrencyStore");
static_assert(sizeof(FortStoreContext_EnterCurrencyStore) == 0x000010, "Wrong size on FortStoreContext_EnterCurrencyStore");
static_assert(offsetof(FortStoreContext_EnterCurrencyStore, AttemptedPurchaseCardPackId) == 0x000000, "Member 'FortStoreContext_EnterCurrencyStore::AttemptedPurchaseCardPackId' has a wrong offset!");
static_assert(offsetof(FortStoreContext_EnterCurrencyStore, ReturnValue) == 0x00000C, "Member 'FortStoreContext_EnterCurrencyStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ErrorOccurred
// 0x0010 (0x0010 - 0x0000)
struct FortStoreContext_ErrorOccurred final
{
public:
	class FString                                 ErrorAnalytics;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_ErrorOccurred) == 0x000004, "Wrong alignment on FortStoreContext_ErrorOccurred");
static_assert(sizeof(FortStoreContext_ErrorOccurred) == 0x000010, "Wrong size on FortStoreContext_ErrorOccurred");
static_assert(offsetof(FortStoreContext_ErrorOccurred, ErrorAnalytics) == 0x000000, "Member 'FortStoreContext_ErrorOccurred::ErrorAnalytics' has a wrong offset!");
static_assert(offsetof(FortStoreContext_ErrorOccurred, ReturnValue) == 0x00000C, "Member 'FortStoreContext_ErrorOccurred::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitCardPackStore
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitCardPackStore final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitCardPackStore) == 0x000001, "Wrong alignment on FortStoreContext_ExitCardPackStore");
static_assert(sizeof(FortStoreContext_ExitCardPackStore) == 0x000001, "Wrong size on FortStoreContext_ExitCardPackStore");
static_assert(offsetof(FortStoreContext_ExitCardPackStore, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitCardPackStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitCurrencyStore
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitCurrencyStore final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitCurrencyStore) == 0x000001, "Wrong alignment on FortStoreContext_ExitCurrencyStore");
static_assert(sizeof(FortStoreContext_ExitCurrencyStore) == 0x000001, "Wrong size on FortStoreContext_ExitCurrencyStore");
static_assert(offsetof(FortStoreContext_ExitCurrencyStore, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitCurrencyStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitSummary
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitSummary final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitSummary) == 0x000001, "Wrong alignment on FortStoreContext_ExitSummary");
static_assert(sizeof(FortStoreContext_ExitSummary) == 0x000001, "Wrong size on FortStoreContext_ExitSummary");
static_assert(offsetof(FortStoreContext_ExitSummary, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitSummary::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitWebPayment
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitWebPayment final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitWebPayment) == 0x000001, "Wrong alignment on FortStoreContext_ExitWebPayment");
static_assert(sizeof(FortStoreContext_ExitWebPayment) == 0x000001, "Wrong size on FortStoreContext_ExitWebPayment");
static_assert(offsetof(FortStoreContext_ExitWebPayment, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitWebPayment::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetAccountItems
// 0x0018 (0x0018 - 0x0000)
struct FortStoreContext_GetAccountItems final
{
public:
	TArray<class UFortAccountItemDefinition*>     AccountItemDefinitions;                            // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UFortAccountItem*>               AccountItems;                                      // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetAccountItems) == 0x000004, "Wrong alignment on FortStoreContext_GetAccountItems");
static_assert(sizeof(FortStoreContext_GetAccountItems) == 0x000018, "Wrong size on FortStoreContext_GetAccountItems");
static_assert(offsetof(FortStoreContext_GetAccountItems, AccountItemDefinitions) == 0x000000, "Member 'FortStoreContext_GetAccountItems::AccountItemDefinitions' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetAccountItems, AccountItems) == 0x00000C, "Member 'FortStoreContext_GetAccountItems::AccountItems' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetRarityColor
// 0x0014 (0x0014 - 0x0000)
struct FortStoreContext_GetRarityColor final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetRarityColor) == 0x000004, "Wrong alignment on FortStoreContext_GetRarityColor");
static_assert(sizeof(FortStoreContext_GetRarityColor) == 0x000014, "Wrong size on FortStoreContext_GetRarityColor");
static_assert(offsetof(FortStoreContext_GetRarityColor, Rarity) == 0x000000, "Member 'FortStoreContext_GetRarityColor::Rarity' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetRarityColor, ReturnValue) == 0x000004, "Member 'FortStoreContext_GetRarityColor::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetTimeUntilDailyLimitReset
// 0x0008 (0x0008 - 0x0000)
struct FortStoreContext_GetTimeUntilDailyLimitReset final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetTimeUntilDailyLimitReset) == 0x000004, "Wrong alignment on FortStoreContext_GetTimeUntilDailyLimitReset");
static_assert(sizeof(FortStoreContext_GetTimeUntilDailyLimitReset) == 0x000008, "Wrong size on FortStoreContext_GetTimeUntilDailyLimitReset");
static_assert(offsetof(FortStoreContext_GetTimeUntilDailyLimitReset, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetTimeUntilDailyLimitReset::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetTimeUntilMarketplaceRefresh
// 0x0008 (0x0008 - 0x0000)
struct FortStoreContext_GetTimeUntilMarketplaceRefresh final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetTimeUntilMarketplaceRefresh) == 0x000004, "Wrong alignment on FortStoreContext_GetTimeUntilMarketplaceRefresh");
static_assert(sizeof(FortStoreContext_GetTimeUntilMarketplaceRefresh) == 0x000008, "Wrong size on FortStoreContext_GetTimeUntilMarketplaceRefresh");
static_assert(offsetof(FortStoreContext_GetTimeUntilMarketplaceRefresh, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetTimeUntilMarketplaceRefresh::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.MakePurchase
// 0x0044 (0x0044 - 0x0000)
struct FortStoreContext_MakePurchase final
{
public:
	struct FCardPackOffer                         Offer;                                             // 0x0000(0x003C)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECardPackPurchaseError                        ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_MakePurchase) == 0x000004, "Wrong alignment on FortStoreContext_MakePurchase");
static_assert(sizeof(FortStoreContext_MakePurchase) == 0x000044, "Wrong size on FortStoreContext_MakePurchase");
static_assert(offsetof(FortStoreContext_MakePurchase, Offer) == 0x000000, "Member 'FortStoreContext_MakePurchase::Offer' has a wrong offset!");
static_assert(offsetof(FortStoreContext_MakePurchase, Quantity) == 0x00003C, "Member 'FortStoreContext_MakePurchase::Quantity' has a wrong offset!");
static_assert(offsetof(FortStoreContext_MakePurchase, ReturnValue) == 0x000040, "Member 'FortStoreContext_MakePurchase::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.OpenWebPayment
// 0x0010 (0x0010 - 0x0000)
struct FortStoreContext_OpenWebPayment final
{
public:
	class FString                                 AttemptedMTXOfferId;                               // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_OpenWebPayment) == 0x000004, "Wrong alignment on FortStoreContext_OpenWebPayment");
static_assert(sizeof(FortStoreContext_OpenWebPayment) == 0x000010, "Wrong size on FortStoreContext_OpenWebPayment");
static_assert(offsetof(FortStoreContext_OpenWebPayment, AttemptedMTXOfferId) == 0x000000, "Member 'FortStoreContext_OpenWebPayment::AttemptedMTXOfferId' has a wrong offset!");
static_assert(offsetof(FortStoreContext_OpenWebPayment, ReturnValue) == 0x00000C, "Member 'FortStoreContext_OpenWebPayment::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.FireInteractionAnalyticsEvent
// 0x0018 (0x0018 - 0x0000)
struct FortStoreContext_FireInteractionAnalyticsEvent final
{
public:
	class FString                                 Interaction;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Details;                                           // 0x000C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_FireInteractionAnalyticsEvent) == 0x000004, "Wrong alignment on FortStoreContext_FireInteractionAnalyticsEvent");
static_assert(sizeof(FortStoreContext_FireInteractionAnalyticsEvent) == 0x000018, "Wrong size on FortStoreContext_FireInteractionAnalyticsEvent");
static_assert(offsetof(FortStoreContext_FireInteractionAnalyticsEvent, Interaction) == 0x000000, "Member 'FortStoreContext_FireInteractionAnalyticsEvent::Interaction' has a wrong offset!");
static_assert(offsetof(FortStoreContext_FireInteractionAnalyticsEvent, Details) == 0x00000C, "Member 'FortStoreContext_FireInteractionAnalyticsEvent::Details' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetCard
// 0x0014 (0x0014 - 0x0000)
struct FortStoreContext_GetCard final
{
public:
	int32                                         CardIdx;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCard                                  ResultOut;                                         // 0x0004(0x000C)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_GetCard) == 0x000004, "Wrong alignment on FortStoreContext_GetCard");
static_assert(sizeof(FortStoreContext_GetCard) == 0x000014, "Wrong size on FortStoreContext_GetCard");
static_assert(offsetof(FortStoreContext_GetCard, CardIdx) == 0x000000, "Member 'FortStoreContext_GetCard::CardIdx' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetCard, ResultOut) == 0x000004, "Member 'FortStoreContext_GetCard::ResultOut' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetCard, ReturnValue) == 0x000010, "Member 'FortStoreContext_GetCard::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetNumUnopenedCardPacksRemaining
// 0x0008 (0x0008 - 0x0000)
struct FortStoreContext_GetNumUnopenedCardPacksRemaining final
{
public:
	const class UFortCardPackItemDefinition*      PackType;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetNumUnopenedCardPacksRemaining) == 0x000004, "Wrong alignment on FortStoreContext_GetNumUnopenedCardPacksRemaining");
static_assert(sizeof(FortStoreContext_GetNumUnopenedCardPacksRemaining) == 0x000008, "Wrong size on FortStoreContext_GetNumUnopenedCardPacksRemaining");
static_assert(offsetof(FortStoreContext_GetNumUnopenedCardPacksRemaining, PackType) == 0x000000, "Member 'FortStoreContext_GetNumUnopenedCardPacksRemaining::PackType' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetNumUnopenedCardPacksRemaining, ReturnValue) == 0x000004, "Member 'FortStoreContext_GetNumUnopenedCardPacksRemaining::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetPreviousState
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_GetPreviousState final
{
public:
	EFortStoreState                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetPreviousState) == 0x000001, "Wrong alignment on FortStoreContext_GetPreviousState");
static_assert(sizeof(FortStoreContext_GetPreviousState) == 0x000001, "Wrong size on FortStoreContext_GetPreviousState");
static_assert(offsetof(FortStoreContext_GetPreviousState, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetPreviousState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetStoreState
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_GetStoreState final
{
public:
	EFortStoreState                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetStoreState) == 0x000001, "Wrong alignment on FortStoreContext_GetStoreState");
static_assert(sizeof(FortStoreContext_GetStoreState) == 0x000001, "Wrong size on FortStoreContext_GetStoreState");
static_assert(offsetof(FortStoreContext_GetStoreState, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetStoreState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.IsCatalogAvailable
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_IsCatalogAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_IsCatalogAvailable) == 0x000001, "Wrong alignment on FortStoreContext_IsCatalogAvailable");
static_assert(sizeof(FortStoreContext_IsCatalogAvailable) == 0x000001, "Wrong size on FortStoreContext_IsCatalogAvailable");
static_assert(offsetof(FortStoreContext_IsCatalogAvailable, ReturnValue) == 0x000000, "Member 'FortStoreContext_IsCatalogAvailable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.IsNewStoreEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_IsNewStoreEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_IsNewStoreEnabled) == 0x000001, "Wrong alignment on FortStoreContext_IsNewStoreEnabled");
static_assert(sizeof(FortStoreContext_IsNewStoreEnabled) == 0x000001, "Wrong size on FortStoreContext_IsNewStoreEnabled");
static_assert(offsetof(FortStoreContext_IsNewStoreEnabled, ReturnValue) == 0x000000, "Member 'FortStoreContext_IsNewStoreEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.AddMessageItem
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageManager_AddMessageItem final
{
public:
	class UFortUIMessageItemWidget*               MessageItem;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_AddMessageItem) == 0x000004, "Wrong alignment on FortUIMessageManager_AddMessageItem");
static_assert(sizeof(FortUIMessageManager_AddMessageItem) == 0x000004, "Wrong size on FortUIMessageManager_AddMessageItem");
static_assert(offsetof(FortUIMessageManager_AddMessageItem, MessageItem) == 0x000000, "Member 'FortUIMessageManager_AddMessageItem::MessageItem' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.GetNextMessageInQueue
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageManager_GetNextMessageInQueue final
{
public:
	class UFortUIMessageItemWidget*               ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_GetNextMessageInQueue) == 0x000004, "Wrong alignment on FortUIMessageManager_GetNextMessageInQueue");
static_assert(sizeof(FortUIMessageManager_GetNextMessageInQueue) == 0x000004, "Wrong size on FortUIMessageManager_GetNextMessageInQueue");
static_assert(offsetof(FortUIMessageManager_GetNextMessageInQueue, ReturnValue) == 0x000000, "Member 'FortUIMessageManager_GetNextMessageInQueue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.HandleMessageDisplayed
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageManager_HandleMessageDisplayed final
{
public:
	class UFortUIMessageItemWidget*               MessageItem;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_HandleMessageDisplayed) == 0x000004, "Wrong alignment on FortUIMessageManager_HandleMessageDisplayed");
static_assert(sizeof(FortUIMessageManager_HandleMessageDisplayed) == 0x000004, "Wrong size on FortUIMessageManager_HandleMessageDisplayed");
static_assert(offsetof(FortUIMessageManager_HandleMessageDisplayed, MessageItem) == 0x000000, "Member 'FortUIMessageManager_HandleMessageDisplayed::MessageItem' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.HandleMessageRemoved
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageManager_HandleMessageRemoved final
{
public:
	class UFortUIMessageItemWidget*               MessageItem;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_HandleMessageRemoved) == 0x000004, "Wrong alignment on FortUIMessageManager_HandleMessageRemoved");
static_assert(sizeof(FortUIMessageManager_HandleMessageRemoved) == 0x000004, "Wrong size on FortUIMessageManager_HandleMessageRemoved");
static_assert(offsetof(FortUIMessageManager_HandleMessageRemoved, MessageItem) == 0x000000, "Member 'FortUIMessageManager_HandleMessageRemoved::MessageItem' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.GetNumDisplayedItems
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageManager_GetNumDisplayedItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_GetNumDisplayedItems) == 0x000004, "Wrong alignment on FortUIMessageManager_GetNumDisplayedItems");
static_assert(sizeof(FortUIMessageManager_GetNumDisplayedItems) == 0x000004, "Wrong size on FortUIMessageManager_GetNumDisplayedItems");
static_assert(offsetof(FortUIMessageManager_GetNumDisplayedItems, ReturnValue) == 0x000000, "Member 'FortUIMessageManager_GetNumDisplayedItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateTrigger.EvalBP
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateTrigger_EvalBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateTrigger_EvalBP) == 0x000001, "Wrong alignment on FortUIStateTrigger_EvalBP");
static_assert(sizeof(FortUIStateTrigger_EvalBP) == 0x000001, "Wrong size on FortUIStateTrigger_EvalBP");
static_assert(offsetof(FortUIStateTrigger_EvalBP, ReturnValue) == 0x000000, "Member 'FortUIStateTrigger_EvalBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateTrigger.IsLoggedIn
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateTrigger_IsLoggedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateTrigger_IsLoggedIn) == 0x000001, "Wrong alignment on FortUIStateTrigger_IsLoggedIn");
static_assert(sizeof(FortUIStateTrigger_IsLoggedIn) == 0x000001, "Wrong size on FortUIStateTrigger_IsLoggedIn");
static_assert(offsetof(FortUIStateTrigger_IsLoggedIn, ReturnValue) == 0x000000, "Member 'FortUIStateTrigger_IsLoggedIn::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.OnHandleAction
// 0x0064 (0x0064 - 0x0000)
struct FortActionHandlerPanel_OnHandleAction final
{
public:
	struct FEventReply                            Result;                                            // 0x0000(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          bPassThrough;                                      // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortActionHandlerPanel_OnHandleAction) == 0x000004, "Wrong alignment on FortActionHandlerPanel_OnHandleAction");
static_assert(sizeof(FortActionHandlerPanel_OnHandleAction) == 0x000064, "Wrong size on FortActionHandlerPanel_OnHandleAction");
static_assert(offsetof(FortActionHandlerPanel_OnHandleAction, Result) == 0x000000, "Member 'FortActionHandlerPanel_OnHandleAction::Result' has a wrong offset!");
static_assert(offsetof(FortActionHandlerPanel_OnHandleAction, bPassThrough) == 0x000060, "Member 'FortActionHandlerPanel_OnHandleAction::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.RemoveOnPanelActivated
// 0x0004 (0x0004 - 0x0000)
struct FortActionHandlerPanel_RemoveOnPanelActivated final
{
public:
	class UObject*                                BoundObject;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_RemoveOnPanelActivated) == 0x000004, "Wrong alignment on FortActionHandlerPanel_RemoveOnPanelActivated");
static_assert(sizeof(FortActionHandlerPanel_RemoveOnPanelActivated) == 0x000004, "Wrong size on FortActionHandlerPanel_RemoveOnPanelActivated");
static_assert(offsetof(FortActionHandlerPanel_RemoveOnPanelActivated, BoundObject) == 0x000000, "Member 'FortActionHandlerPanel_RemoveOnPanelActivated::BoundObject' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.RemoveOnPanelDeactivated
// 0x0004 (0x0004 - 0x0000)
struct FortActionHandlerPanel_RemoveOnPanelDeactivated final
{
public:
	class UObject*                                BoundObject;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_RemoveOnPanelDeactivated) == 0x000004, "Wrong alignment on FortActionHandlerPanel_RemoveOnPanelDeactivated");
static_assert(sizeof(FortActionHandlerPanel_RemoveOnPanelDeactivated) == 0x000004, "Wrong size on FortActionHandlerPanel_RemoveOnPanelDeactivated");
static_assert(offsetof(FortActionHandlerPanel_RemoveOnPanelDeactivated, BoundObject) == 0x000000, "Member 'FortActionHandlerPanel_RemoveOnPanelDeactivated::BoundObject' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.SetOnPanelActivated
// 0x0010 (0x0010 - 0x0000)
struct FortActionHandlerPanel_SetOnPanelActivated final
{
public:
	TDelegate<void()>                             OnActivatedHandler;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_SetOnPanelActivated) == 0x000004, "Wrong alignment on FortActionHandlerPanel_SetOnPanelActivated");
static_assert(sizeof(FortActionHandlerPanel_SetOnPanelActivated) == 0x000010, "Wrong size on FortActionHandlerPanel_SetOnPanelActivated");
static_assert(offsetof(FortActionHandlerPanel_SetOnPanelActivated, OnActivatedHandler) == 0x000000, "Member 'FortActionHandlerPanel_SetOnPanelActivated::OnActivatedHandler' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.SetOnPanelDeactivated
// 0x0010 (0x0010 - 0x0000)
struct FortActionHandlerPanel_SetOnPanelDeactivated final
{
public:
	TDelegate<void()>                             OnDeactivatedHandler;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_SetOnPanelDeactivated) == 0x000004, "Wrong alignment on FortActionHandlerPanel_SetOnPanelDeactivated");
static_assert(sizeof(FortActionHandlerPanel_SetOnPanelDeactivated) == 0x000010, "Wrong size on FortActionHandlerPanel_SetOnPanelDeactivated");
static_assert(offsetof(FortActionHandlerPanel_SetOnPanelDeactivated, OnDeactivatedHandler) == 0x000000, "Member 'FortActionHandlerPanel_SetOnPanelDeactivated::OnDeactivatedHandler' has a wrong offset!");

// Function FortniteUI.FortConfirmationWindow.ProcessResult
// 0x0001 (0x0001 - 0x0000)
struct FortConfirmationWindow_ProcessResult final
{
public:
	EFortDialogResult                             DialogResult;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortConfirmationWindow_ProcessResult) == 0x000001, "Wrong alignment on FortConfirmationWindow_ProcessResult");
static_assert(sizeof(FortConfirmationWindow_ProcessResult) == 0x000001, "Wrong size on FortConfirmationWindow_ProcessResult");
static_assert(offsetof(FortConfirmationWindow_ProcessResult, DialogResult) == 0x000000, "Member 'FortConfirmationWindow_ProcessResult::DialogResult' has a wrong offset!");

// Function FortniteUI.FortConfirmationWindow.ShowConfirmation
// 0x0050 (0x0050 - 0x0000)
struct FortConfirmationWindow_ShowConfirmation final
{
public:
	struct FFortDialogDescription                 Description;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortConfirmationWindow_ShowConfirmation) == 0x000004, "Wrong alignment on FortConfirmationWindow_ShowConfirmation");
static_assert(sizeof(FortConfirmationWindow_ShowConfirmation) == 0x000050, "Wrong size on FortConfirmationWindow_ShowConfirmation");
static_assert(offsetof(FortConfirmationWindow_ShowConfirmation, Description) == 0x000000, "Member 'FortConfirmationWindow_ShowConfirmation::Description' has a wrong offset!");

// Function FortniteUI.FortErrorDialog.DisplayError
// 0x002C (0x002C - 0x0000)
struct FortErrorDialog_DisplayError final
{
public:
	struct FFortErrorInfo                         ErrorInfo_0;                                       // 0x0000(0x002C)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorDialog_DisplayError) == 0x000004, "Wrong alignment on FortErrorDialog_DisplayError");
static_assert(sizeof(FortErrorDialog_DisplayError) == 0x00002C, "Wrong size on FortErrorDialog_DisplayError");
static_assert(offsetof(FortErrorDialog_DisplayError, ErrorInfo_0) == 0x000000, "Member 'FortErrorDialog_DisplayError::ErrorInfo_0' has a wrong offset!");

// Function FortniteUI.FortErrorDialog.DisplaySimpleError
// 0x000C (0x000C - 0x0000)
struct FortErrorDialog_DisplaySimpleError final
{
public:
	class FText                                   ErrorMessage;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorDialog_DisplaySimpleError) == 0x000004, "Wrong alignment on FortErrorDialog_DisplaySimpleError");
static_assert(sizeof(FortErrorDialog_DisplaySimpleError) == 0x00000C, "Wrong size on FortErrorDialog_DisplaySimpleError");
static_assert(offsetof(FortErrorDialog_DisplaySimpleError, ErrorMessage) == 0x000000, "Member 'FortErrorDialog_DisplaySimpleError::ErrorMessage' has a wrong offset!");

// Function FortniteUI.FortErrorDialog.OnRebuildDialog
// 0x0004 (0x0004 - 0x0000)
struct FortErrorDialog_OnRebuildDialog final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorDialog_OnRebuildDialog) == 0x000004, "Wrong alignment on FortErrorDialog_OnRebuildDialog");
static_assert(sizeof(FortErrorDialog_OnRebuildDialog) == 0x000004, "Wrong size on FortErrorDialog_OnRebuildDialog");
static_assert(offsetof(FortErrorDialog_OnRebuildDialog, NewIndex) == 0x000000, "Member 'FortErrorDialog_OnRebuildDialog::NewIndex' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget.OnEnterState
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_OnEnterState final
{
public:
	EFortUIState                                  PreviousUIState;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_OnEnterState) == 0x000001, "Wrong alignment on FortUIStateWidget_OnEnterState");
static_assert(sizeof(FortUIStateWidget_OnEnterState) == 0x000001, "Wrong size on FortUIStateWidget_OnEnterState");
static_assert(offsetof(FortUIStateWidget_OnEnterState, PreviousUIState) == 0x000000, "Member 'FortUIStateWidget_OnEnterState::PreviousUIState' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget.OnExitState
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_OnExitState final
{
public:
	EFortUIState                                  NextUIState;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_OnExitState) == 0x000001, "Wrong alignment on FortUIStateWidget_OnExitState");
static_assert(sizeof(FortUIStateWidget_OnExitState) == 0x000001, "Wrong size on FortUIStateWidget_OnExitState");
static_assert(offsetof(FortUIStateWidget_OnExitState, NextUIState) == 0x000000, "Member 'FortUIStateWidget_OnExitState::NextUIState' has a wrong offset!");

// Function FortniteUI.FortVerticalRibbon._BPOnStackDepthChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVerticalRibbon__BPOnStackDepthChanged final
{
public:
	int32                                         NewDepth;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVerticalRibbon__BPOnStackDepthChanged) == 0x000004, "Wrong alignment on FortVerticalRibbon__BPOnStackDepthChanged");
static_assert(sizeof(FortVerticalRibbon__BPOnStackDepthChanged) == 0x000004, "Wrong size on FortVerticalRibbon__BPOnStackDepthChanged");
static_assert(offsetof(FortVerticalRibbon__BPOnStackDepthChanged, NewDepth) == 0x000000, "Member 'FortVerticalRibbon__BPOnStackDepthChanged::NewDepth' has a wrong offset!");

// Function FortniteUI.FortVerticalRibbon.PushContent
// 0x0004 (0x0004 - 0x0000)
struct FortVerticalRibbon_PushContent final
{
public:
	class UWidget*                                NewContent;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVerticalRibbon_PushContent) == 0x000004, "Wrong alignment on FortVerticalRibbon_PushContent");
static_assert(sizeof(FortVerticalRibbon_PushContent) == 0x000004, "Wrong size on FortVerticalRibbon_PushContent");
static_assert(offsetof(FortVerticalRibbon_PushContent, NewContent) == 0x000000, "Member 'FortVerticalRibbon_PushContent::NewContent' has a wrong offset!");

// Function FortniteUI.FortVerticalRibbon.GetTop
// 0x0004 (0x0004 - 0x0000)
struct FortVerticalRibbon_GetTop final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVerticalRibbon_GetTop) == 0x000004, "Wrong alignment on FortVerticalRibbon_GetTop");
static_assert(sizeof(FortVerticalRibbon_GetTop) == 0x000004, "Wrong size on FortVerticalRibbon_GetTop");
static_assert(offsetof(FortVerticalRibbon_GetTop, ReturnValue) == 0x000000, "Member 'FortVerticalRibbon_GetTop::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.BPOnItemSet
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_BPOnItemSet final
{
public:
	class UFortItem*                              NewItem;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_BPOnItemSet) == 0x000004, "Wrong alignment on FortItemWidget_BPOnItemSet");
static_assert(sizeof(FortItemWidget_BPOnItemSet) == 0x000004, "Wrong size on FortItemWidget_BPOnItemSet");
static_assert(offsetof(FortItemWidget_BPOnItemSet, NewItem) == 0x000000, "Member 'FortItemWidget_BPOnItemSet::NewItem' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetItemToCompare
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetItemToCompare final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetItemToCompare) == 0x000004, "Wrong alignment on FortItemWidget_GetItemToCompare");
static_assert(sizeof(FortItemWidget_GetItemToCompare) == 0x000004, "Wrong size on FortItemWidget_GetItemToCompare");
static_assert(offsetof(FortItemWidget_GetItemToCompare, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetItemToCompare::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.OnFortItemUpdated
// 0x0003 (0x0003 - 0x0000)
struct FortItemWidget_OnFortItemUpdated final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_OnFortItemUpdated) == 0x000001, "Wrong alignment on FortItemWidget_OnFortItemUpdated");
static_assert(sizeof(FortItemWidget_OnFortItemUpdated) == 0x000003, "Wrong size on FortItemWidget_OnFortItemUpdated");
static_assert(offsetof(FortItemWidget_OnFortItemUpdated, bItemChanged) == 0x000000, "Member 'FortItemWidget_OnFortItemUpdated::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemWidget_OnFortItemUpdated, bAmmoChanged) == 0x000001, "Member 'FortItemWidget_OnFortItemUpdated::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemWidget_OnFortItemUpdated, bIngredientsChanged) == 0x000002, "Member 'FortItemWidget_OnFortItemUpdated::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortItemWidget.SetItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_SetItem final
{
public:
	const class UFortItem*                        InItem;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QuantityOverride_0;                                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_SetItem) == 0x000004, "Wrong alignment on FortItemWidget_SetItem");
static_assert(sizeof(FortItemWidget_SetItem) == 0x000008, "Wrong size on FortItemWidget_SetItem");
static_assert(offsetof(FortItemWidget_SetItem, InItem) == 0x000000, "Member 'FortItemWidget_SetItem::InItem' has a wrong offset!");
static_assert(offsetof(FortItemWidget_SetItem, QuantityOverride_0) == 0x000004, "Member 'FortItemWidget_SetItem::QuantityOverride_0' has a wrong offset!");

// Function FortniteUI.FortItemWidget.SetOnGetItemToCompareDelegate
// 0x0010 (0x0010 - 0x0000)
struct FortItemWidget_SetOnGetItemToCompareDelegate final
{
public:
	TDelegate<void(class UFortItem** ItemToCompare)> InDelegate;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_SetOnGetItemToCompareDelegate) == 0x000004, "Wrong alignment on FortItemWidget_SetOnGetItemToCompareDelegate");
static_assert(sizeof(FortItemWidget_SetOnGetItemToCompareDelegate) == 0x000010, "Wrong size on FortItemWidget_SetOnGetItemToCompareDelegate");
static_assert(offsetof(FortItemWidget_SetOnGetItemToCompareDelegate, InDelegate) == 0x000000, "Member 'FortItemWidget_SetOnGetItemToCompareDelegate::InDelegate' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetAmmoCount
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetAmmoCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetAmmoCount) == 0x000004, "Wrong alignment on FortItemWidget_GetAmmoCount");
static_assert(sizeof(FortItemWidget_GetAmmoCount) == 0x000004, "Wrong size on FortItemWidget_GetAmmoCount");
static_assert(offsetof(FortItemWidget_GetAmmoCount, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetAmmoCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetDescription
// 0x000C (0x000C - 0x0000)
struct FortItemWidget_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetDescription) == 0x000004, "Wrong alignment on FortItemWidget_GetDescription");
static_assert(sizeof(FortItemWidget_GetDescription) == 0x00000C, "Wrong size on FortItemWidget_GetDescription");
static_assert(offsetof(FortItemWidget_GetDescription, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetDisplayName
// 0x000C (0x000C - 0x0000)
struct FortItemWidget_GetDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetDisplayName) == 0x000004, "Wrong alignment on FortItemWidget_GetDisplayName");
static_assert(sizeof(FortItemWidget_GetDisplayName) == 0x00000C, "Wrong size on FortItemWidget_GetDisplayName");
static_assert(offsetof(FortItemWidget_GetDisplayName, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetDurability
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetDurability final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetDurability) == 0x000004, "Wrong alignment on FortItemWidget_GetDurability");
static_assert(sizeof(FortItemWidget_GetDurability) == 0x000004, "Wrong size on FortItemWidget_GetDurability");
static_assert(offsetof(FortItemWidget_GetDurability, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetDurability::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetIconScale
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetIconScale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetIconScale) == 0x000004, "Wrong alignment on FortItemWidget_GetIconScale");
static_assert(sizeof(FortItemWidget_GetIconScale) == 0x000004, "Wrong size on FortItemWidget_GetIconScale");
static_assert(offsetof(FortItemWidget_GetIconScale, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetIconScale::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetIconTexture
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_GetIconTexture final
{
public:
	EFortBrushSize                                InBrushSize;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetIconTexture) == 0x000004, "Wrong alignment on FortItemWidget_GetIconTexture");
static_assert(sizeof(FortItemWidget_GetIconTexture) == 0x000008, "Wrong size on FortItemWidget_GetIconTexture");
static_assert(offsetof(FortItemWidget_GetIconTexture, InBrushSize) == 0x000000, "Member 'FortItemWidget_GetIconTexture::InBrushSize' has a wrong offset!");
static_assert(offsetof(FortItemWidget_GetIconTexture, ReturnValue) == 0x000004, "Member 'FortItemWidget_GetIconTexture::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetItem
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetItem final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetItem) == 0x000004, "Wrong alignment on FortItemWidget_GetItem");
static_assert(sizeof(FortItemWidget_GetItem) == 0x000004, "Wrong size on FortItemWidget_GetItem");
static_assert(offsetof(FortItemWidget_GetItem, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetLevel
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetLevel) == 0x000004, "Wrong alignment on FortItemWidget_GetLevel");
static_assert(sizeof(FortItemWidget_GetLevel) == 0x000004, "Wrong size on FortItemWidget_GetLevel");
static_assert(offsetof(FortItemWidget_GetLevel, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetPulse
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetPulse final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetPulse) == 0x000004, "Wrong alignment on FortItemWidget_GetPulse");
static_assert(sizeof(FortItemWidget_GetPulse) == 0x000004, "Wrong size on FortItemWidget_GetPulse");
static_assert(offsetof(FortItemWidget_GetPulse, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetPulse::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetRarity
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_GetRarity final
{
public:
	EFortRarity                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetRarity) == 0x000001, "Wrong alignment on FortItemWidget_GetRarity");
static_assert(sizeof(FortItemWidget_GetRarity) == 0x000001, "Wrong size on FortItemWidget_GetRarity");
static_assert(offsetof(FortItemWidget_GetRarity, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetRarity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetSecondaryCategoryTexture
// 0x0078 (0x0078 - 0x0000)
struct FortItemWidget_GetSecondaryCategoryTexture final
{
public:
	EFortBrushSize                                InBrushSize;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x0004(0x0074)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetSecondaryCategoryTexture) == 0x000004, "Wrong alignment on FortItemWidget_GetSecondaryCategoryTexture");
static_assert(sizeof(FortItemWidget_GetSecondaryCategoryTexture) == 0x000078, "Wrong size on FortItemWidget_GetSecondaryCategoryTexture");
static_assert(offsetof(FortItemWidget_GetSecondaryCategoryTexture, InBrushSize) == 0x000000, "Member 'FortItemWidget_GetSecondaryCategoryTexture::InBrushSize' has a wrong offset!");
static_assert(offsetof(FortItemWidget_GetSecondaryCategoryTexture, ReturnValue) == 0x000004, "Member 'FortItemWidget_GetSecondaryCategoryTexture::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetStackCount
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetStackCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetStackCount) == 0x000004, "Wrong alignment on FortItemWidget_GetStackCount");
static_assert(sizeof(FortItemWidget_GetStackCount) == 0x000004, "Wrong size on FortItemWidget_GetStackCount");
static_assert(offsetof(FortItemWidget_GetStackCount, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetStackCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetTertiaryCategoryTexture
// 0x0078 (0x0078 - 0x0000)
struct FortItemWidget_GetTertiaryCategoryTexture final
{
public:
	EFortBrushSize                                InBrushSize;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x0004(0x0074)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetTertiaryCategoryTexture) == 0x000004, "Wrong alignment on FortItemWidget_GetTertiaryCategoryTexture");
static_assert(sizeof(FortItemWidget_GetTertiaryCategoryTexture) == 0x000078, "Wrong size on FortItemWidget_GetTertiaryCategoryTexture");
static_assert(offsetof(FortItemWidget_GetTertiaryCategoryTexture, InBrushSize) == 0x000000, "Member 'FortItemWidget_GetTertiaryCategoryTexture::InBrushSize' has a wrong offset!");
static_assert(offsetof(FortItemWidget_GetTertiaryCategoryTexture, ReturnValue) == 0x000004, "Member 'FortItemWidget_GetTertiaryCategoryTexture::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetType
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetType final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetType) == 0x000004, "Wrong alignment on FortItemWidget_GetType");
static_assert(sizeof(FortItemWidget_GetType) == 0x000004, "Wrong size on FortItemWidget_GetType");
static_assert(offsetof(FortItemWidget_GetType, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasDurability
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasDurability final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasDurability) == 0x000001, "Wrong alignment on FortItemWidget_HasDurability");
static_assert(sizeof(FortItemWidget_HasDurability) == 0x000001, "Wrong size on FortItemWidget_HasDurability");
static_assert(offsetof(FortItemWidget_HasDurability, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasDurability::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasLevel
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasLevel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasLevel) == 0x000001, "Wrong alignment on FortItemWidget_HasLevel");
static_assert(sizeof(FortItemWidget_HasLevel) == 0x000001, "Wrong size on FortItemWidget_HasLevel");
static_assert(offsetof(FortItemWidget_HasLevel, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasSecondaryCategory
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasSecondaryCategory final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasSecondaryCategory) == 0x000001, "Wrong alignment on FortItemWidget_HasSecondaryCategory");
static_assert(sizeof(FortItemWidget_HasSecondaryCategory) == 0x000001, "Wrong size on FortItemWidget_HasSecondaryCategory");
static_assert(offsetof(FortItemWidget_HasSecondaryCategory, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasSecondaryCategory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasTertiaryCategory
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasTertiaryCategory final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasTertiaryCategory) == 0x000001, "Wrong alignment on FortItemWidget_HasTertiaryCategory");
static_assert(sizeof(FortItemWidget_HasTertiaryCategory) == 0x000001, "Wrong size on FortItemWidget_HasTertiaryCategory");
static_assert(offsetof(FortItemWidget_HasTertiaryCategory, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasTertiaryCategory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsEquipped
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsEquipped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsEquipped) == 0x000001, "Wrong alignment on FortItemWidget_IsEquipped");
static_assert(sizeof(FortItemWidget_IsEquipped) == 0x000001, "Wrong size on FortItemWidget_IsEquipped");
static_assert(offsetof(FortItemWidget_IsEquipped, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsEquipped::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsInBackpackOverflow
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsInBackpackOverflow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsInBackpackOverflow) == 0x000001, "Wrong alignment on FortItemWidget_IsInBackpackOverflow");
static_assert(sizeof(FortItemWidget_IsInBackpackOverflow) == 0x000001, "Wrong size on FortItemWidget_IsInBackpackOverflow");
static_assert(offsetof(FortItemWidget_IsInBackpackOverflow, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsInBackpackOverflow::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsItemValid
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsItemValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsItemValid) == 0x000001, "Wrong alignment on FortItemWidget_IsItemValid");
static_assert(sizeof(FortItemWidget_IsItemValid) == 0x000001, "Wrong size on FortItemWidget_IsItemValid");
static_assert(offsetof(FortItemWidget_IsItemValid, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsItemValid::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsSchematic
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsSchematic final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsSchematic) == 0x000001, "Wrong alignment on FortItemWidget_IsSchematic");
static_assert(sizeof(FortItemWidget_IsSchematic) == 0x000001, "Wrong size on FortItemWidget_IsSchematic");
static_assert(offsetof(FortItemWidget_IsSchematic, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsSlotted
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsSlotted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsSlotted) == 0x000001, "Wrong alignment on FortItemWidget_IsSlotted");
static_assert(sizeof(FortItemWidget_IsSlotted) == 0x000001, "Wrong size on FortItemWidget_IsSlotted");
static_assert(offsetof(FortItemWidget_IsSlotted, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsSlotted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBluGloCounter.OnBluGloQuantityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortBluGloCounter_OnBluGloQuantityChanged final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBluGloCounter_OnBluGloQuantityChanged) == 0x000004, "Wrong alignment on FortBluGloCounter_OnBluGloQuantityChanged");
static_assert(sizeof(FortBluGloCounter_OnBluGloQuantityChanged) == 0x000004, "Wrong size on FortBluGloCounter_OnBluGloQuantityChanged");
static_assert(offsetof(FortBluGloCounter_OnBluGloQuantityChanged, Quantity) == 0x000000, "Member 'FortBluGloCounter_OnBluGloQuantityChanged::Quantity' has a wrong offset!");

// Function FortniteUI.FortButton.SetCurrentState
// 0x0001 (0x0001 - 0x0000)
struct FortButton_SetCurrentState final
{
public:
	EFortButtonState                              NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_SetCurrentState) == 0x000001, "Wrong alignment on FortButton_SetCurrentState");
static_assert(sizeof(FortButton_SetCurrentState) == 0x000001, "Wrong size on FortButton_SetCurrentState");
static_assert(offsetof(FortButton_SetCurrentState, NewState) == 0x000000, "Member 'FortButton_SetCurrentState::NewState' has a wrong offset!");

// Function FortniteUI.FortButton.SetDisabled
// 0x0001 (0x0001 - 0x0000)
struct FortButton_SetDisabled final
{
public:
	bool                                          InDisable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_SetDisabled) == 0x000001, "Wrong alignment on FortButton_SetDisabled");
static_assert(sizeof(FortButton_SetDisabled) == 0x000001, "Wrong size on FortButton_SetDisabled");
static_assert(offsetof(FortButton_SetDisabled, InDisable) == 0x000000, "Member 'FortButton_SetDisabled::InDisable' has a wrong offset!");

// Function FortniteUI.FortButton.SetIndex
// 0x0004 (0x0004 - 0x0000)
struct FortButton_SetIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_SetIndex) == 0x000004, "Wrong alignment on FortButton_SetIndex");
static_assert(sizeof(FortButton_SetIndex) == 0x000004, "Wrong size on FortButton_SetIndex");
static_assert(offsetof(FortButton_SetIndex, InIndex) == 0x000000, "Member 'FortButton_SetIndex::InIndex' has a wrong offset!");

// Function FortniteUI.FortButton.SetText
// 0x000C (0x000C - 0x0000)
struct FortButton_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x000C)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_SetText) == 0x000004, "Wrong alignment on FortButton_SetText");
static_assert(sizeof(FortButton_SetText) == 0x00000C, "Wrong size on FortButton_SetText");
static_assert(offsetof(FortButton_SetText, InText) == 0x000000, "Member 'FortButton_SetText::InText' has a wrong offset!");

// Function FortniteUI.FortButton.GetCurrentState
// 0x0001 (0x0001 - 0x0000)
struct FortButton_GetCurrentState final
{
public:
	EFortButtonState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_GetCurrentState) == 0x000001, "Wrong alignment on FortButton_GetCurrentState");
static_assert(sizeof(FortButton_GetCurrentState) == 0x000001, "Wrong size on FortButton_GetCurrentState");
static_assert(offsetof(FortButton_GetCurrentState, ReturnValue) == 0x000000, "Member 'FortButton_GetCurrentState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButton.GetDisabled
// 0x0001 (0x0001 - 0x0000)
struct FortButton_GetDisabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_GetDisabled) == 0x000001, "Wrong alignment on FortButton_GetDisabled");
static_assert(sizeof(FortButton_GetDisabled) == 0x000001, "Wrong size on FortButton_GetDisabled");
static_assert(offsetof(FortButton_GetDisabled, ReturnValue) == 0x000000, "Member 'FortButton_GetDisabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButton.GetIndex
// 0x0004 (0x0004 - 0x0000)
struct FortButton_GetIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_GetIndex) == 0x000004, "Wrong alignment on FortButton_GetIndex");
static_assert(sizeof(FortButton_GetIndex) == 0x000004, "Wrong size on FortButton_GetIndex");
static_assert(offsetof(FortButton_GetIndex, ReturnValue) == 0x000000, "Member 'FortButton_GetIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButton.GetPendingState
// 0x0001 (0x0001 - 0x0000)
struct FortButton_GetPendingState final
{
public:
	EFortButtonState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_GetPendingState) == 0x000001, "Wrong alignment on FortButton_GetPendingState");
static_assert(sizeof(FortButton_GetPendingState) == 0x000001, "Wrong size on FortButton_GetPendingState");
static_assert(offsetof(FortButton_GetPendingState, ReturnValue) == 0x000000, "Member 'FortButton_GetPendingState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButton.GetText
// 0x000C (0x000C - 0x0000)
struct FortButton_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButton_GetText) == 0x000004, "Wrong alignment on FortButton_GetText");
static_assert(sizeof(FortButton_GetText) == 0x00000C, "Wrong size on FortButton_GetText");
static_assert(offsetof(FortButton_GetText, ReturnValue) == 0x000000, "Member 'FortButton_GetText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTabButton.SetSelection
// 0x0001 (0x0001 - 0x0000)
struct FortTabButton_SetSelection final
{
public:
	bool                                          InSelected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabButton_SetSelection) == 0x000001, "Wrong alignment on FortTabButton_SetSelection");
static_assert(sizeof(FortTabButton_SetSelection) == 0x000001, "Wrong size on FortTabButton_SetSelection");
static_assert(offsetof(FortTabButton_SetSelection, InSelected) == 0x000000, "Member 'FortTabButton_SetSelection::InSelected' has a wrong offset!");

// Function FortniteUI.FortTabButton.IsSelected
// 0x0001 (0x0001 - 0x0000)
struct FortTabButton_IsSelected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabButton_IsSelected) == 0x000001, "Wrong alignment on FortTabButton_IsSelected");
static_assert(sizeof(FortTabButton_IsSelected) == 0x000001, "Wrong size on FortTabButton_IsSelected");
static_assert(offsetof(FortTabButton_IsSelected, ReturnValue) == 0x000000, "Member 'FortTabButton_IsSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCapturePointWidget.OnCapturePointDataChanged
// 0x000C (0x000C - 0x0000)
struct FortCapturePointWidget_OnCapturePointDataChanged final
{
public:
	bool                                          bActivated;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bLocked;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CapturePercentage;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECaptureState                                 CaptureState;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortTeam                                     ControllingTeam;                                   // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCapturePointWidget_OnCapturePointDataChanged) == 0x000004, "Wrong alignment on FortCapturePointWidget_OnCapturePointDataChanged");
static_assert(sizeof(FortCapturePointWidget_OnCapturePointDataChanged) == 0x00000C, "Wrong size on FortCapturePointWidget_OnCapturePointDataChanged");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, bActivated) == 0x000000, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::bActivated' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, bLocked) == 0x000001, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::bLocked' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, CapturePercentage) == 0x000004, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::CapturePercentage' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, CaptureState) == 0x000008, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::CaptureState' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, ControllingTeam) == 0x000009, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::ControllingTeam' has a wrong offset!");

// Function FortniteUI.FortChatContainer.SetNativeWidgetHost
// 0x0004 (0x0004 - 0x0000)
struct FortChatContainer_SetNativeWidgetHost final
{
public:
	class UNativeWidgetHost*                      InNativeWidgetHost;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortChatContainer_SetNativeWidgetHost) == 0x000004, "Wrong alignment on FortChatContainer_SetNativeWidgetHost");
static_assert(sizeof(FortChatContainer_SetNativeWidgetHost) == 0x000004, "Wrong size on FortChatContainer_SetNativeWidgetHost");
static_assert(offsetof(FortChatContainer_SetNativeWidgetHost, InNativeWidgetHost) == 0x000000, "Member 'FortChatContainer_SetNativeWidgetHost::InNativeWidgetHost' has a wrong offset!");

// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorChanged
// 0x0004 (0x0004 - 0x0000)
struct FortItemCollectorWidget_OnItemCollectorChanged final
{
public:
	class ABuildingItemCollectorActor*            OutItemCollector;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCollectorWidget_OnItemCollectorChanged) == 0x000004, "Wrong alignment on FortItemCollectorWidget_OnItemCollectorChanged");
static_assert(sizeof(FortItemCollectorWidget_OnItemCollectorChanged) == 0x000004, "Wrong size on FortItemCollectorWidget_OnItemCollectorChanged");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorChanged, OutItemCollector) == 0x000000, "Member 'FortItemCollectorWidget_OnItemCollectorChanged::OutItemCollector' has a wrong offset!");

// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortItemCollectorWidget_OnItemCollectorStateChanged final
{
public:
	EFortItemCollectorState                       ItemCollectorState;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCollectorWidget_OnItemCollectorStateChanged) == 0x000001, "Wrong alignment on FortItemCollectorWidget_OnItemCollectorStateChanged");
static_assert(sizeof(FortItemCollectorWidget_OnItemCollectorStateChanged) == 0x000001, "Wrong size on FortItemCollectorWidget_OnItemCollectorStateChanged");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorStateChanged, ItemCollectorState) == 0x000000, "Member 'FortItemCollectorWidget_OnItemCollectorStateChanged::ItemCollectorState' has a wrong offset!");

// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorValuesChanged
// 0x0018 (0x0018 - 0x0000)
struct FortItemCollectorWidget_OnItemCollectorValuesChanged final
{
public:
	TArray<int32>                                 DepositAmounts;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 DepositGoals;                                      // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCollectorWidget_OnItemCollectorValuesChanged) == 0x000004, "Wrong alignment on FortItemCollectorWidget_OnItemCollectorValuesChanged");
static_assert(sizeof(FortItemCollectorWidget_OnItemCollectorValuesChanged) == 0x000018, "Wrong size on FortItemCollectorWidget_OnItemCollectorValuesChanged");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorValuesChanged, DepositAmounts) == 0x000000, "Member 'FortItemCollectorWidget_OnItemCollectorValuesChanged::DepositAmounts' has a wrong offset!");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorValuesChanged, DepositGoals) == 0x00000C, "Member 'FortItemCollectorWidget_OnItemCollectorValuesChanged::DepositGoals' has a wrong offset!");

// Function FortniteUI.FortListItem.SetData
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_SetData final
{
public:
	class UObject*                                InData;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_SetData) == 0x000004, "Wrong alignment on FortListItem_SetData");
static_assert(sizeof(FortListItem_SetData) == 0x000004, "Wrong size on FortListItem_SetData");
static_assert(offsetof(FortListItem_SetData, InData) == 0x000000, "Member 'FortListItem_SetData::InData' has a wrong offset!");

// Function FortniteUI.FortListItem.SetIndexInList
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_SetIndexInList final
{
public:
	int32                                         InIndexInList;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_SetIndexInList) == 0x000004, "Wrong alignment on FortListItem_SetIndexInList");
static_assert(sizeof(FortListItem_SetIndexInList) == 0x000004, "Wrong size on FortListItem_SetIndexInList");
static_assert(offsetof(FortListItem_SetIndexInList, InIndexInList) == 0x000000, "Member 'FortListItem_SetIndexInList::InIndexInList' has a wrong offset!");

// Function FortniteUI.FortListItem.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct FortListItem_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_SetSelected) == 0x000001, "Wrong alignment on FortListItem_SetSelected");
static_assert(sizeof(FortListItem_SetSelected) == 0x000001, "Wrong size on FortListItem_SetSelected");
static_assert(offsetof(FortListItem_SetSelected, bSelected) == 0x000000, "Member 'FortListItem_SetSelected::bSelected' has a wrong offset!");

// Function FortniteUI.FortListItem.DoesItemHaveChildren
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_DoesItemHaveChildren final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_DoesItemHaveChildren) == 0x000004, "Wrong alignment on FortListItem_DoesItemHaveChildren");
static_assert(sizeof(FortListItem_DoesItemHaveChildren) == 0x000004, "Wrong size on FortListItem_DoesItemHaveChildren");
static_assert(offsetof(FortListItem_DoesItemHaveChildren, ReturnValue) == 0x000000, "Member 'FortListItem_DoesItemHaveChildren::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListItem.GetIndentLevel
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_GetIndentLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_GetIndentLevel) == 0x000004, "Wrong alignment on FortListItem_GetIndentLevel");
static_assert(sizeof(FortListItem_GetIndentLevel) == 0x000004, "Wrong size on FortListItem_GetIndentLevel");
static_assert(offsetof(FortListItem_GetIndentLevel, ReturnValue) == 0x000000, "Member 'FortListItem_GetIndentLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListItem.GetSelectionMode
// 0x0001 (0x0001 - 0x0000)
struct FortListItem_GetSelectionMode final
{
public:
	ESelectionMode                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_GetSelectionMode) == 0x000001, "Wrong alignment on FortListItem_GetSelectionMode");
static_assert(sizeof(FortListItem_GetSelectionMode) == 0x000001, "Wrong size on FortListItem_GetSelectionMode");
static_assert(offsetof(FortListItem_GetSelectionMode, ReturnValue) == 0x000000, "Member 'FortListItem_GetSelectionMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListItem.IsItemExpanded
// 0x0001 (0x0001 - 0x0000)
struct FortListItem_IsItemExpanded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_IsItemExpanded) == 0x000001, "Wrong alignment on FortListItem_IsItemExpanded");
static_assert(sizeof(FortListItem_IsItemExpanded) == 0x000001, "Wrong size on FortListItem_IsItemExpanded");
static_assert(offsetof(FortListItem_IsItemExpanded, ReturnValue) == 0x000000, "Member 'FortListItem_IsItemExpanded::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginRewardItem.SetFortItem
// 0x0004 (0x0004 - 0x0000)
struct FortLoginRewardItem_SetFortItem final
{
public:
	class UFortItem*                              InFortItem;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewardItem_SetFortItem) == 0x000004, "Wrong alignment on FortLoginRewardItem_SetFortItem");
static_assert(sizeof(FortLoginRewardItem_SetFortItem) == 0x000004, "Wrong size on FortLoginRewardItem_SetFortItem");
static_assert(offsetof(FortLoginRewardItem_SetFortItem, InFortItem) == 0x000000, "Member 'FortLoginRewardItem_SetFortItem::InFortItem' has a wrong offset!");

// Function FortniteUI.FortLoginRewardItem.SetHighValueItem
// 0x0001 (0x0001 - 0x0000)
struct FortLoginRewardItem_SetHighValueItem final
{
public:
	bool                                          bInHighValueItem;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewardItem_SetHighValueItem) == 0x000001, "Wrong alignment on FortLoginRewardItem_SetHighValueItem");
static_assert(sizeof(FortLoginRewardItem_SetHighValueItem) == 0x000001, "Wrong size on FortLoginRewardItem_SetHighValueItem");
static_assert(offsetof(FortLoginRewardItem_SetHighValueItem, bInHighValueItem) == 0x000000, "Member 'FortLoginRewardItem_SetHighValueItem::bInHighValueItem' has a wrong offset!");

// Function FortniteUI.FortLoginRewardItem.SetLoginRewardDay
// 0x0004 (0x0004 - 0x0000)
struct FortLoginRewardItem_SetLoginRewardDay final
{
public:
	int32                                         InLoginRewardDay;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewardItem_SetLoginRewardDay) == 0x000004, "Wrong alignment on FortLoginRewardItem_SetLoginRewardDay");
static_assert(sizeof(FortLoginRewardItem_SetLoginRewardDay) == 0x000004, "Wrong size on FortLoginRewardItem_SetLoginRewardDay");
static_assert(offsetof(FortLoginRewardItem_SetLoginRewardDay, InLoginRewardDay) == 0x000000, "Member 'FortLoginRewardItem_SetLoginRewardDay::InLoginRewardDay' has a wrong offset!");

// Function FortniteUI.FortLoginRewardItem.SetPlayClaimAnimation
// 0x0001 (0x0001 - 0x0000)
struct FortLoginRewardItem_SetPlayClaimAnimation final
{
public:
	bool                                          bInPlayClaimAnimation;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewardItem_SetPlayClaimAnimation) == 0x000001, "Wrong alignment on FortLoginRewardItem_SetPlayClaimAnimation");
static_assert(sizeof(FortLoginRewardItem_SetPlayClaimAnimation) == 0x000001, "Wrong size on FortLoginRewardItem_SetPlayClaimAnimation");
static_assert(offsetof(FortLoginRewardItem_SetPlayClaimAnimation, bInPlayClaimAnimation) == 0x000000, "Member 'FortLoginRewardItem_SetPlayClaimAnimation::bInPlayClaimAnimation' has a wrong offset!");

// Function FortniteUI.FortLoginRewardItem.SetUnclaimedItem
// 0x0001 (0x0001 - 0x0000)
struct FortLoginRewardItem_SetUnclaimedItem final
{
public:
	bool                                          bInUnclaimedItem;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewardItem_SetUnclaimedItem) == 0x000001, "Wrong alignment on FortLoginRewardItem_SetUnclaimedItem");
static_assert(sizeof(FortLoginRewardItem_SetUnclaimedItem) == 0x000001, "Wrong size on FortLoginRewardItem_SetUnclaimedItem");
static_assert(offsetof(FortLoginRewardItem_SetUnclaimedItem, bInUnclaimedItem) == 0x000000, "Member 'FortLoginRewardItem_SetUnclaimedItem::bInUnclaimedItem' has a wrong offset!");

// Function FortniteUI.FortLoginRewards.CreateLoginRewardWidget
// 0x0004 (0x0004 - 0x0000)
struct FortLoginRewards_CreateLoginRewardWidget final
{
public:
	class UFortLoginRewardItem*                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewards_CreateLoginRewardWidget) == 0x000004, "Wrong alignment on FortLoginRewards_CreateLoginRewardWidget");
static_assert(sizeof(FortLoginRewards_CreateLoginRewardWidget) == 0x000004, "Wrong size on FortLoginRewards_CreateLoginRewardWidget");
static_assert(offsetof(FortLoginRewards_CreateLoginRewardWidget, ReturnValue) == 0x000000, "Member 'FortLoginRewards_CreateLoginRewardWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginRewards.DisablePaging
// 0x0001 (0x0001 - 0x0000)
struct FortLoginRewards_DisablePaging final
{
public:
	EPageDirection                                Direction;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewards_DisablePaging) == 0x000001, "Wrong alignment on FortLoginRewards_DisablePaging");
static_assert(sizeof(FortLoginRewards_DisablePaging) == 0x000001, "Wrong size on FortLoginRewards_DisablePaging");
static_assert(offsetof(FortLoginRewards_DisablePaging, Direction) == 0x000000, "Member 'FortLoginRewards_DisablePaging::Direction' has a wrong offset!");

// Function FortniteUI.FortLoginRewards.EnablePaging
// 0x0001 (0x0001 - 0x0000)
struct FortLoginRewards_EnablePaging final
{
public:
	EPageDirection                                Direction;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewards_EnablePaging) == 0x000001, "Wrong alignment on FortLoginRewards_EnablePaging");
static_assert(sizeof(FortLoginRewards_EnablePaging) == 0x000001, "Wrong size on FortLoginRewards_EnablePaging");
static_assert(offsetof(FortLoginRewards_EnablePaging, Direction) == 0x000000, "Member 'FortLoginRewards_EnablePaging::Direction' has a wrong offset!");

// Function FortniteUI.FortLoginRewards.SetGridPanel
// 0x0004 (0x0004 - 0x0000)
struct FortLoginRewards_SetGridPanel final
{
public:
	class UUniformGridPanel*                      InGridPanel;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewards_SetGridPanel) == 0x000004, "Wrong alignment on FortLoginRewards_SetGridPanel");
static_assert(sizeof(FortLoginRewards_SetGridPanel) == 0x000004, "Wrong size on FortLoginRewards_SetGridPanel");
static_assert(offsetof(FortLoginRewards_SetGridPanel, InGridPanel) == 0x000000, "Member 'FortLoginRewards_SetGridPanel::InGridPanel' has a wrong offset!");

// Function FortniteUI.FortLoginRewards.GetCurrentLoginDays
// 0x0004 (0x0004 - 0x0000)
struct FortLoginRewards_GetCurrentLoginDays final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewards_GetCurrentLoginDays) == 0x000004, "Wrong alignment on FortLoginRewards_GetCurrentLoginDays");
static_assert(sizeof(FortLoginRewards_GetCurrentLoginDays) == 0x000004, "Wrong size on FortLoginRewards_GetCurrentLoginDays");
static_assert(offsetof(FortLoginRewards_GetCurrentLoginDays, ReturnValue) == 0x000000, "Member 'FortLoginRewards_GetCurrentLoginDays::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginRewards.GetCurrentPage
// 0x0004 (0x0004 - 0x0000)
struct FortLoginRewards_GetCurrentPage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginRewards_GetCurrentPage) == 0x000004, "Wrong alignment on FortLoginRewards_GetCurrentPage");
static_assert(sizeof(FortLoginRewards_GetCurrentPage) == 0x000004, "Wrong size on FortLoginRewards_GetCurrentPage");
static_assert(offsetof(FortLoginRewards_GetCurrentPage, ReturnValue) == 0x000000, "Member 'FortLoginRewards_GetCurrentPage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginWindow.Login
// 0x001C (0x001C - 0x0000)
struct FortLoginWindow_Login final
{
public:
	class FString                                 InEmail;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InPassword;                                        // 0x000C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemember;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortLoginWindow_Login) == 0x000004, "Wrong alignment on FortLoginWindow_Login");
static_assert(sizeof(FortLoginWindow_Login) == 0x00001C, "Wrong size on FortLoginWindow_Login");
static_assert(offsetof(FortLoginWindow_Login, InEmail) == 0x000000, "Member 'FortLoginWindow_Login::InEmail' has a wrong offset!");
static_assert(offsetof(FortLoginWindow_Login, InPassword) == 0x00000C, "Member 'FortLoginWindow_Login::InPassword' has a wrong offset!");
static_assert(offsetof(FortLoginWindow_Login, bRemember) == 0x000018, "Member 'FortLoginWindow_Login::bRemember' has a wrong offset!");

// Function FortniteUI.FortLoginWindow.OnLoginStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct FortLoginWindow_OnLoginStatusChanged final
{
public:
	EUILoginStatus                                NewStatus;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InMessage;                                         // 0x0004(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginWindow_OnLoginStatusChanged) == 0x000004, "Wrong alignment on FortLoginWindow_OnLoginStatusChanged");
static_assert(sizeof(FortLoginWindow_OnLoginStatusChanged) == 0x000010, "Wrong size on FortLoginWindow_OnLoginStatusChanged");
static_assert(offsetof(FortLoginWindow_OnLoginStatusChanged, NewStatus) == 0x000000, "Member 'FortLoginWindow_OnLoginStatusChanged::NewStatus' has a wrong offset!");
static_assert(offsetof(FortLoginWindow_OnLoginStatusChanged, InMessage) == 0x000004, "Member 'FortLoginWindow_OnLoginStatusChanged::InMessage' has a wrong offset!");

// Function FortniteUI.FortLoginWindow.GetDefaultEmail
// 0x000C (0x000C - 0x0000)
struct FortLoginWindow_GetDefaultEmail final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginWindow_GetDefaultEmail) == 0x000004, "Wrong alignment on FortLoginWindow_GetDefaultEmail");
static_assert(sizeof(FortLoginWindow_GetDefaultEmail) == 0x00000C, "Wrong size on FortLoginWindow_GetDefaultEmail");
static_assert(offsetof(FortLoginWindow_GetDefaultEmail, ReturnValue) == 0x000000, "Member 'FortLoginWindow_GetDefaultEmail::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginWindow.GetLoginStatusText
// 0x000C (0x000C - 0x0000)
struct FortLoginWindow_GetLoginStatusText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginWindow_GetLoginStatusText) == 0x000004, "Wrong alignment on FortLoginWindow_GetLoginStatusText");
static_assert(sizeof(FortLoginWindow_GetLoginStatusText) == 0x00000C, "Wrong size on FortLoginWindow_GetLoginStatusText");
static_assert(offsetof(FortLoginWindow_GetLoginStatusText, ReturnValue) == 0x000000, "Member 'FortLoginWindow_GetLoginStatusText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginWindow.IsRememberMeChecked
// 0x0001 (0x0001 - 0x0000)
struct FortLoginWindow_IsRememberMeChecked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginWindow_IsRememberMeChecked) == 0x000001, "Wrong alignment on FortLoginWindow_IsRememberMeChecked");
static_assert(sizeof(FortLoginWindow_IsRememberMeChecked) == 0x000001, "Wrong size on FortLoginWindow_IsRememberMeChecked");
static_assert(offsetof(FortLoginWindow_IsRememberMeChecked, ReturnValue) == 0x000000, "Member 'FortLoginWindow_IsRememberMeChecked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginWindow.ShouldShowLoginButton
// 0x001C (0x001C - 0x0000)
struct FortLoginWindow_ShouldShowLoginButton final
{
public:
	class FString                                 InEmail;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InPassword;                                        // 0x000C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortLoginWindow_ShouldShowLoginButton) == 0x000004, "Wrong alignment on FortLoginWindow_ShouldShowLoginButton");
static_assert(sizeof(FortLoginWindow_ShouldShowLoginButton) == 0x00001C, "Wrong size on FortLoginWindow_ShouldShowLoginButton");
static_assert(offsetof(FortLoginWindow_ShouldShowLoginButton, InEmail) == 0x000000, "Member 'FortLoginWindow_ShouldShowLoginButton::InEmail' has a wrong offset!");
static_assert(offsetof(FortLoginWindow_ShouldShowLoginButton, InPassword) == 0x00000C, "Member 'FortLoginWindow_ShouldShowLoginButton::InPassword' has a wrong offset!");
static_assert(offsetof(FortLoginWindow_ShouldShowLoginButton, ReturnValue) == 0x000018, "Member 'FortLoginWindow_ShouldShowLoginButton::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.SetMediaPlayer
// 0x0004 (0x0004 - 0x0000)
struct FortMovieWidget_SetMediaPlayer final
{
public:
	class UMediaPlayer*                           NewMediaPlayer;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_SetMediaPlayer) == 0x000004, "Wrong alignment on FortMovieWidget_SetMediaPlayer");
static_assert(sizeof(FortMovieWidget_SetMediaPlayer) == 0x000004, "Wrong size on FortMovieWidget_SetMediaPlayer");
static_assert(offsetof(FortMovieWidget_SetMediaPlayer, NewMediaPlayer) == 0x000000, "Member 'FortMovieWidget_SetMediaPlayer::NewMediaPlayer' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.GetMediaPlayer
// 0x0004 (0x0004 - 0x0000)
struct FortMovieWidget_GetMediaPlayer final
{
public:
	class UMediaPlayer*                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_GetMediaPlayer) == 0x000004, "Wrong alignment on FortMovieWidget_GetMediaPlayer");
static_assert(sizeof(FortMovieWidget_GetMediaPlayer) == 0x000004, "Wrong size on FortMovieWidget_GetMediaPlayer");
static_assert(offsetof(FortMovieWidget_GetMediaPlayer, ReturnValue) == 0x000000, "Member 'FortMovieWidget_GetMediaPlayer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSocialItemWidget.SetSocialItem
// 0x0004 (0x0004 - 0x0000)
struct FortSocialItemWidget_SetSocialItem final
{
public:
	class UFortSocialItem*                        InSocialItem;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSocialItemWidget_SetSocialItem) == 0x000004, "Wrong alignment on FortSocialItemWidget_SetSocialItem");
static_assert(sizeof(FortSocialItemWidget_SetSocialItem) == 0x000004, "Wrong size on FortSocialItemWidget_SetSocialItem");
static_assert(offsetof(FortSocialItemWidget_SetSocialItem, InSocialItem) == 0x000000, "Member 'FortSocialItemWidget_SetSocialItem::InSocialItem' has a wrong offset!");

// Function FortniteUI.FortTutorialOverlay.SetTutorialNotificationActive
// 0x0001 (0x0001 - 0x0000)
struct FortTutorialOverlay_SetTutorialNotificationActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialOverlay_SetTutorialNotificationActive) == 0x000001, "Wrong alignment on FortTutorialOverlay_SetTutorialNotificationActive");
static_assert(sizeof(FortTutorialOverlay_SetTutorialNotificationActive) == 0x000001, "Wrong size on FortTutorialOverlay_SetTutorialNotificationActive");
static_assert(offsetof(FortTutorialOverlay_SetTutorialNotificationActive, bActive) == 0x000000, "Member 'FortTutorialOverlay_SetTutorialNotificationActive::bActive' has a wrong offset!");

// Function FortniteUI.FortTutorialOverlay.SetupNativeWidgets
// 0x0004 (0x0004 - 0x0000)
struct FortTutorialOverlay_SetupNativeWidgets final
{
public:
	class UNamedSlot*                             NativeSlot;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialOverlay_SetupNativeWidgets) == 0x000004, "Wrong alignment on FortTutorialOverlay_SetupNativeWidgets");
static_assert(sizeof(FortTutorialOverlay_SetupNativeWidgets) == 0x000004, "Wrong size on FortTutorialOverlay_SetupNativeWidgets");
static_assert(offsetof(FortTutorialOverlay_SetupNativeWidgets, NativeSlot) == 0x000000, "Member 'FortTutorialOverlay_SetupNativeWidgets::NativeSlot' has a wrong offset!");

// Function FortniteUI.FortTutorialScreen.OnShowTutorialScreen
// 0x0004 (0x0004 - 0x0000)
struct FortTutorialScreen_OnShowTutorialScreen final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialScreen_OnShowTutorialScreen) == 0x000004, "Wrong alignment on FortTutorialScreen_OnShowTutorialScreen");
static_assert(sizeof(FortTutorialScreen_OnShowTutorialScreen) == 0x000004, "Wrong size on FortTutorialScreen_OnShowTutorialScreen");
static_assert(offsetof(FortTutorialScreen_OnShowTutorialScreen, Image) == 0x000000, "Member 'FortTutorialScreen_OnShowTutorialScreen::Image' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.CreateUIStateTrigger
// 0x000C (0x000C - 0x0000)
struct FortUIManagerWidget_CreateUIStateTrigger final
{
public:
	TSubclassOf<class UFortUIStateTrigger>        Class_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUIStateTrigger*                    ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_CreateUIStateTrigger) == 0x000004, "Wrong alignment on FortUIManagerWidget_CreateUIStateTrigger");
static_assert(sizeof(FortUIManagerWidget_CreateUIStateTrigger) == 0x00000C, "Wrong size on FortUIManagerWidget_CreateUIStateTrigger");
static_assert(offsetof(FortUIManagerWidget_CreateUIStateTrigger, Class_0) == 0x000000, "Member 'FortUIManagerWidget_CreateUIStateTrigger::Class_0' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_CreateUIStateTrigger, WorldContextObject) == 0x000004, "Member 'FortUIManagerWidget_CreateUIStateTrigger::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_CreateUIStateTrigger, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_CreateUIStateTrigger::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.GetUIManagerWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_GetUIManagerWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUIManagerWidget*                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_GetUIManagerWidget) == 0x000004, "Wrong alignment on FortUIManagerWidget_GetUIManagerWidget");
static_assert(sizeof(FortUIManagerWidget_GetUIManagerWidget) == 0x000008, "Wrong size on FortUIManagerWidget_GetUIManagerWidget");
static_assert(offsetof(FortUIManagerWidget_GetUIManagerWidget, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_GetUIManagerWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_GetUIManagerWidget, ReturnValue) == 0x000004, "Member 'FortUIManagerWidget_GetUIManagerWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.KillConfirmationDialog
// 0x0004 (0x0004 - 0x0000)
struct FortUIManagerWidget_KillConfirmationDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_KillConfirmationDialog) == 0x000004, "Wrong alignment on FortUIManagerWidget_KillConfirmationDialog");
static_assert(sizeof(FortUIManagerWidget_KillConfirmationDialog) == 0x000004, "Wrong size on FortUIManagerWidget_KillConfirmationDialog");
static_assert(offsetof(FortUIManagerWidget_KillConfirmationDialog, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_KillConfirmationDialog::WorldContextObject' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.ShowErrorDialog
// 0x0028 (0x0028 - 0x0000)
struct FortUIManagerWidget_ShowErrorDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OperationDesc;                                     // 0x0004(0x000C)(Parm, NativeAccessSpecifierPublic)
	class FText                                   DisplayMessage;                                    // 0x0010(0x000C)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ErrorCode;                                         // 0x001C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_ShowErrorDialog) == 0x000004, "Wrong alignment on FortUIManagerWidget_ShowErrorDialog");
static_assert(sizeof(FortUIManagerWidget_ShowErrorDialog) == 0x000028, "Wrong size on FortUIManagerWidget_ShowErrorDialog");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_ShowErrorDialog::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, OperationDesc) == 0x000004, "Member 'FortUIManagerWidget_ShowErrorDialog::OperationDesc' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, DisplayMessage) == 0x000010, "Member 'FortUIManagerWidget_ShowErrorDialog::DisplayMessage' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, ErrorCode) == 0x00001C, "Member 'FortUIManagerWidget_ShowErrorDialog::ErrorCode' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.DisplayErrorDialog
// 0x002C (0x002C - 0x0000)
struct FortUIManagerWidget_DisplayErrorDialog final
{
public:
	struct FFortErrorInfo                         Info;                                              // 0x0000(0x002C)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_DisplayErrorDialog) == 0x000004, "Wrong alignment on FortUIManagerWidget_DisplayErrorDialog");
static_assert(sizeof(FortUIManagerWidget_DisplayErrorDialog) == 0x00002C, "Wrong size on FortUIManagerWidget_DisplayErrorDialog");
static_assert(offsetof(FortUIManagerWidget_DisplayErrorDialog, Info) == 0x000000, "Member 'FortUIManagerWidget_DisplayErrorDialog::Info' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.DisplayStateContent
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_DisplayStateContent final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_DisplayStateContent) == 0x000001, "Wrong alignment on FortUIManagerWidget_DisplayStateContent");
static_assert(sizeof(FortUIManagerWidget_DisplayStateContent) == 0x000001, "Wrong size on FortUIManagerWidget_DisplayStateContent");
static_assert(offsetof(FortUIManagerWidget_DisplayStateContent, bDisplay) == 0x000000, "Member 'FortUIManagerWidget_DisplayStateContent::bDisplay' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.OnShowConfirmation
// 0x0050 (0x0050 - 0x0000)
struct FortUIManagerWidget_OnShowConfirmation final
{
public:
	struct FFortDialogDescription                 Description;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_OnShowConfirmation) == 0x000004, "Wrong alignment on FortUIManagerWidget_OnShowConfirmation");
static_assert(sizeof(FortUIManagerWidget_OnShowConfirmation) == 0x000050, "Wrong size on FortUIManagerWidget_OnShowConfirmation");
static_assert(offsetof(FortUIManagerWidget_OnShowConfirmation, Description) == 0x000000, "Member 'FortUIManagerWidget_OnShowConfirmation::Description' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.RegisterStateTrigger
// 0x0004 (0x0004 - 0x0000)
struct FortUIManagerWidget_RegisterStateTrigger final
{
public:
	class UFortUIStateTrigger*                    StateTrigger;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_RegisterStateTrigger) == 0x000004, "Wrong alignment on FortUIManagerWidget_RegisterStateTrigger");
static_assert(sizeof(FortUIManagerWidget_RegisterStateTrigger) == 0x000004, "Wrong size on FortUIManagerWidget_RegisterStateTrigger");
static_assert(offsetof(FortUIManagerWidget_RegisterStateTrigger, StateTrigger) == 0x000000, "Member 'FortUIManagerWidget_RegisterStateTrigger::StateTrigger' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.SetStateContentDisplayed
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_SetStateContentDisplayed final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_SetStateContentDisplayed) == 0x000001, "Wrong alignment on FortUIManagerWidget_SetStateContentDisplayed");
static_assert(sizeof(FortUIManagerWidget_SetStateContentDisplayed) == 0x000001, "Wrong size on FortUIManagerWidget_SetStateContentDisplayed");
static_assert(offsetof(FortUIManagerWidget_SetStateContentDisplayed, bDisplay) == 0x000000, "Member 'FortUIManagerWidget_SetStateContentDisplayed::bDisplay' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.UnregisterStateTrigger
// 0x0004 (0x0004 - 0x0000)
struct FortUIManagerWidget_UnregisterStateTrigger final
{
public:
	class UFortUIStateTrigger*                    TriggerToRemove;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_UnregisterStateTrigger) == 0x000004, "Wrong alignment on FortUIManagerWidget_UnregisterStateTrigger");
static_assert(sizeof(FortUIManagerWidget_UnregisterStateTrigger) == 0x000004, "Wrong size on FortUIManagerWidget_UnregisterStateTrigger");
static_assert(offsetof(FortUIManagerWidget_UnregisterStateTrigger, TriggerToRemove) == 0x000000, "Member 'FortUIManagerWidget_UnregisterStateTrigger::TriggerToRemove' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.UpdateStateWidgetContent
// 0x0004 (0x0004 - 0x0000)
struct FortUIManagerWidget_UpdateStateWidgetContent final
{
public:
	class UFortUIStateWidget*                     StateWidget;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_UpdateStateWidgetContent) == 0x000004, "Wrong alignment on FortUIManagerWidget_UpdateStateWidgetContent");
static_assert(sizeof(FortUIManagerWidget_UpdateStateWidgetContent) == 0x000004, "Wrong size on FortUIManagerWidget_UpdateStateWidgetContent");
static_assert(offsetof(FortUIManagerWidget_UpdateStateWidgetContent, StateWidget) == 0x000000, "Member 'FortUIManagerWidget_UpdateStateWidgetContent::StateWidget' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget._BPGetCurrentUIState
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget__BPGetCurrentUIState final
{
public:
	EFortUIState                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget__BPGetCurrentUIState) == 0x000001, "Wrong alignment on FortUIManagerWidget__BPGetCurrentUIState");
static_assert(sizeof(FortUIManagerWidget__BPGetCurrentUIState) == 0x000001, "Wrong size on FortUIManagerWidget__BPGetCurrentUIState");
static_assert(offsetof(FortUIManagerWidget__BPGetCurrentUIState, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget__BPGetCurrentUIState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.GetCurrentUIStateWidget
// 0x0004 (0x0004 - 0x0000)
struct FortUIManagerWidget_GetCurrentUIStateWidget final
{
public:
	class UFortUIStateWidget*                     ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_GetCurrentUIStateWidget) == 0x000004, "Wrong alignment on FortUIManagerWidget_GetCurrentUIStateWidget");
static_assert(sizeof(FortUIManagerWidget_GetCurrentUIStateWidget) == 0x000004, "Wrong size on FortUIManagerWidget_GetCurrentUIStateWidget");
static_assert(offsetof(FortUIManagerWidget_GetCurrentUIStateWidget, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_GetCurrentUIStateWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.IsStateContentDisplayed
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_IsStateContentDisplayed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_IsStateContentDisplayed) == 0x000001, "Wrong alignment on FortUIManagerWidget_IsStateContentDisplayed");
static_assert(sizeof(FortUIManagerWidget_IsStateContentDisplayed) == 0x000001, "Wrong size on FortUIManagerWidget_IsStateContentDisplayed");
static_assert(offsetof(FortUIManagerWidget_IsStateContentDisplayed, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_IsStateContentDisplayed::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessageItemWidget.StackItem
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageItemWidget_StackItem final
{
public:
	class UFortUIMessageItemWidget*               StackedItem;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageItemWidget_StackItem) == 0x000004, "Wrong alignment on FortUIMessageItemWidget_StackItem");
static_assert(sizeof(FortUIMessageItemWidget_StackItem) == 0x000004, "Wrong size on FortUIMessageItemWidget_StackItem");
static_assert(offsetof(FortUIMessageItemWidget_StackItem, StackedItem) == 0x000000, "Member 'FortUIMessageItemWidget_StackItem::StackedItem' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.GetInfo
// 0x0620 (0x0620 - 0x0000)
struct FortVaultDetailsWidget_GetInfo final
{
public:
	struct FVaultDetailsInfo                      ReturnValue;                                       // 0x0000(0x0620)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_GetInfo) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_GetInfo");
static_assert(sizeof(FortVaultDetailsWidget_GetInfo) == 0x000620, "Wrong size on FortVaultDetailsWidget_GetInfo");
static_assert(offsetof(FortVaultDetailsWidget_GetInfo, ReturnValue) == 0x000000, "Member 'FortVaultDetailsWidget_GetInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.GetItem
// 0x0004 (0x0004 - 0x0000)
struct FortVaultDetailsWidget_GetItem final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_GetItem) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_GetItem");
static_assert(sizeof(FortVaultDetailsWidget_GetItem) == 0x000004, "Wrong size on FortVaultDetailsWidget_GetItem");
static_assert(offsetof(FortVaultDetailsWidget_GetItem, ReturnValue) == 0x000000, "Member 'FortVaultDetailsWidget_GetItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.GetLevelProperty
// 0x0028 (0x0028 - 0x0000)
struct FortVaultDetailsWidget_GetLevelProperty final
{
public:
	struct FVaultPropertyInfo                     ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_GetLevelProperty) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_GetLevelProperty");
static_assert(sizeof(FortVaultDetailsWidget_GetLevelProperty) == 0x000028, "Wrong size on FortVaultDetailsWidget_GetLevelProperty");
static_assert(offsetof(FortVaultDetailsWidget_GetLevelProperty, ReturnValue) == 0x000000, "Member 'FortVaultDetailsWidget_GetLevelProperty::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.GetMaxLevelProperty
// 0x0028 (0x0028 - 0x0000)
struct FortVaultDetailsWidget_GetMaxLevelProperty final
{
public:
	struct FVaultPropertyInfo                     ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_GetMaxLevelProperty) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_GetMaxLevelProperty");
static_assert(sizeof(FortVaultDetailsWidget_GetMaxLevelProperty) == 0x000028, "Wrong size on FortVaultDetailsWidget_GetMaxLevelProperty");
static_assert(offsetof(FortVaultDetailsWidget_GetMaxLevelProperty, ReturnValue) == 0x000000, "Member 'FortVaultDetailsWidget_GetMaxLevelProperty::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.GetProperties
// 0x0010 (0x0010 - 0x0000)
struct FortVaultDetailsWidget_GetProperties final
{
public:
	TArray<struct FVaultPropertyInfo>             Properties;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bWithUpgradeData;                                  // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVaultDetailsWidget_GetProperties) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_GetProperties");
static_assert(sizeof(FortVaultDetailsWidget_GetProperties) == 0x000010, "Wrong size on FortVaultDetailsWidget_GetProperties");
static_assert(offsetof(FortVaultDetailsWidget_GetProperties, Properties) == 0x000000, "Member 'FortVaultDetailsWidget_GetProperties::Properties' has a wrong offset!");
static_assert(offsetof(FortVaultDetailsWidget_GetProperties, bWithUpgradeData) == 0x00000C, "Member 'FortVaultDetailsWidget_GetProperties::bWithUpgradeData' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.HasPendingCustomization
// 0x0001 (0x0001 - 0x0000)
struct FortVaultDetailsWidget_HasPendingCustomization final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_HasPendingCustomization) == 0x000001, "Wrong alignment on FortVaultDetailsWidget_HasPendingCustomization");
static_assert(sizeof(FortVaultDetailsWidget_HasPendingCustomization) == 0x000001, "Wrong size on FortVaultDetailsWidget_HasPendingCustomization");
static_assert(offsetof(FortVaultDetailsWidget_HasPendingCustomization, ReturnValue) == 0x000000, "Member 'FortVaultDetailsWidget_HasPendingCustomization::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.HasPendingUpgrade
// 0x0001 (0x0001 - 0x0000)
struct FortVaultDetailsWidget_HasPendingUpgrade final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_HasPendingUpgrade) == 0x000001, "Wrong alignment on FortVaultDetailsWidget_HasPendingUpgrade");
static_assert(sizeof(FortVaultDetailsWidget_HasPendingUpgrade) == 0x000001, "Wrong size on FortVaultDetailsWidget_HasPendingUpgrade");
static_assert(offsetof(FortVaultDetailsWidget_HasPendingUpgrade, ReturnValue) == 0x000000, "Member 'FortVaultDetailsWidget_HasPendingUpgrade::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.SetItem
// 0x0008 (0x0008 - 0x0000)
struct FortVaultDetailsWidget_SetItem final
{
public:
	const class UFortItem*                        InItem;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVaultDetailsWidget_SetItem) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_SetItem");
static_assert(sizeof(FortVaultDetailsWidget_SetItem) == 0x000008, "Wrong size on FortVaultDetailsWidget_SetItem");
static_assert(offsetof(FortVaultDetailsWidget_SetItem, InItem) == 0x000000, "Member 'FortVaultDetailsWidget_SetItem::InItem' has a wrong offset!");
static_assert(offsetof(FortVaultDetailsWidget_SetItem, bForce) == 0x000004, "Member 'FortVaultDetailsWidget_SetItem::bForce' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.SetItemForCommand
// 0x0008 (0x0008 - 0x0000)
struct FortVaultDetailsWidget_SetItemForCommand final
{
public:
	const class UFortItem*                        InItem;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaultCommandType                             InCommand;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0005(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVaultDetailsWidget_SetItemForCommand) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_SetItemForCommand");
static_assert(sizeof(FortVaultDetailsWidget_SetItemForCommand) == 0x000008, "Wrong size on FortVaultDetailsWidget_SetItemForCommand");
static_assert(offsetof(FortVaultDetailsWidget_SetItemForCommand, InItem) == 0x000000, "Member 'FortVaultDetailsWidget_SetItemForCommand::InItem' has a wrong offset!");
static_assert(offsetof(FortVaultDetailsWidget_SetItemForCommand, InCommand) == 0x000004, "Member 'FortVaultDetailsWidget_SetItemForCommand::InCommand' has a wrong offset!");
static_assert(offsetof(FortVaultDetailsWidget_SetItemForCommand, bForce) == 0x000005, "Member 'FortVaultDetailsWidget_SetItemForCommand::bForce' has a wrong offset!");

// Function FortniteUI.FortVaultDetailsWidget.GetAlterationSlots
// 0x000C (0x000C - 0x0000)
struct FortVaultDetailsWidget_GetAlterationSlots final
{
public:
	TArray<struct FVaultAlterationInfo>           Slots;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultDetailsWidget_GetAlterationSlots) == 0x000004, "Wrong alignment on FortVaultDetailsWidget_GetAlterationSlots");
static_assert(sizeof(FortVaultDetailsWidget_GetAlterationSlots) == 0x00000C, "Wrong size on FortVaultDetailsWidget_GetAlterationSlots");
static_assert(offsetof(FortVaultDetailsWidget_GetAlterationSlots, Slots) == 0x000000, "Member 'FortVaultDetailsWidget_GetAlterationSlots::Slots' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.GetItemList
// 0x0020 (0x0020 - 0x0000)
struct FortVaultWidget_GetItemList final
{
public:
	TArray<class UFortAccountItem*>               OutItemList;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	EVaultContentType                             InContentType;                                     // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVaultContentDetails                   Details;                                           // 0x0010(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_GetItemList) == 0x000004, "Wrong alignment on FortVaultWidget_GetItemList");
static_assert(sizeof(FortVaultWidget_GetItemList) == 0x000020, "Wrong size on FortVaultWidget_GetItemList");
static_assert(offsetof(FortVaultWidget_GetItemList, OutItemList) == 0x000000, "Member 'FortVaultWidget_GetItemList::OutItemList' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_GetItemList, InContentType) == 0x00000C, "Member 'FortVaultWidget_GetItemList::InContentType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_GetItemList, Details) == 0x000010, "Member 'FortVaultWidget_GetItemList::Details' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsSupportedSortType
// 0x0004 (0x0004 - 0x0000)
struct FortVaultWidget_IsSupportedSortType final
{
public:
	EVaultContentSortType                         InSortType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaultContentType                             InContentType;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortInventoryFilter                          InContentSubType;                                  // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_IsSupportedSortType) == 0x000001, "Wrong alignment on FortVaultWidget_IsSupportedSortType");
static_assert(sizeof(FortVaultWidget_IsSupportedSortType) == 0x000004, "Wrong size on FortVaultWidget_IsSupportedSortType");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, InSortType) == 0x000000, "Member 'FortVaultWidget_IsSupportedSortType::InSortType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, InContentType) == 0x000001, "Member 'FortVaultWidget_IsSupportedSortType::InContentType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, InContentSubType) == 0x000002, "Member 'FortVaultWidget_IsSupportedSortType::InContentSubType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, ReturnValue) == 0x000003, "Member 'FortVaultWidget_IsSupportedSortType::ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
