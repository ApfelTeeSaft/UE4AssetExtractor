#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_BaseDespawn

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GAB_BaseDespawn.GAB_BaseDespawn_C.ExecuteUbergraph_GAB_BaseDespawn
// 0x0114 (0x0114 - 0x0000)
struct GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0018(0x0008)()
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0020(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0034(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x004C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0060(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0078(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0080(0x0014)()
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0098(0x0058)(ConstParm)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn) == 0x000004, "Wrong alignment on GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn");
static_assert(sizeof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn) == 0x000114, "Wrong size on GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, EntryPoint) == 0x000000, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CustomEvent_TargetData3) == 0x000004, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CustomEvent_ApplicationTag3) == 0x000018, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CustomEvent_TargetData2) == 0x000020, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CustomEvent_ApplicationTag2) == 0x000034, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CustomEvent_TargetData) == 0x00004C, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CustomEvent_ApplicationTag) == 0x000060, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, Temp_struct_Variable) == 0x000078, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, Temp_struct_Variable2) == 0x000080, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, CallFunc_K2_CommitAbility_ReturnValue) == 0x000094, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_Event_EventData) == 0x000098, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F0, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_DynamicCast_AsFort_AIPawn) == 0x000100, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, K2Node_DynamicCast_bSuccess) == 0x000104, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, CallFunc_GetController_ReturnValue) == 0x000108, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x00010C, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'GAB_BaseDespawn_C_ExecuteUbergraph_GAB_BaseDespawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GAB_BaseDespawn.GAB_BaseDespawn_C.K2_ActivateAbilityFromEvent
// 0x0058 (0x0058 - 0x0000)
struct GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent) == 0x000004, "Wrong alignment on GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent) == 0x000058, "Wrong size on GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GAB_BaseDespawn_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GAB_BaseDespawn.GAB_BaseDespawn_C.Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12
// 0x001C (0x001C - 0x0000)
struct GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12) == 0x000004, "Wrong alignment on GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12");
static_assert(sizeof(GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12) == 0x00001C, "Wrong size on GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12");
static_assert(offsetof(GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12, TargetData) == 0x000000, "Member 'GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12, ApplicationTag) == 0x000014, "Member 'GAB_BaseDespawn_C_Triggered_32BE25FF4375C5CD3FD5BABD11D3AB12::ApplicationTag' has a wrong offset!");

// Function GAB_BaseDespawn.GAB_BaseDespawn_C.Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12
// 0x001C (0x001C - 0x0000)
struct GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12) == 0x000004, "Wrong alignment on GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12");
static_assert(sizeof(GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12) == 0x00001C, "Wrong size on GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12");
static_assert(offsetof(GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12, TargetData) == 0x000000, "Member 'GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12, ApplicationTag) == 0x000014, "Member 'GAB_BaseDespawn_C_Cancelled_32BE25FF4375C5CD3FD5BABD11D3AB12::ApplicationTag' has a wrong offset!");

// Function GAB_BaseDespawn.GAB_BaseDespawn_C.Completed_32BE25FF4375C5CD3FD5BABD11D3AB12
// 0x001C (0x001C - 0x0000)
struct GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12) == 0x000004, "Wrong alignment on GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12");
static_assert(sizeof(GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12) == 0x00001C, "Wrong size on GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12");
static_assert(offsetof(GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12, TargetData) == 0x000000, "Member 'GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12, ApplicationTag) == 0x000014, "Member 'GAB_BaseDespawn_C_Completed_32BE25FF4375C5CD3FD5BABD11D3AB12::ApplicationTag' has a wrong offset!");

}

#pragma pack(pop)
