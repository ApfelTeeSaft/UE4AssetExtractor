#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_HuskBaseRadialMelee

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GAB_HuskBaseRadialMelee.GAB_HuskBaseRadialMelee_C.ExecuteUbergraph_GAB_HuskBaseRadialMelee
// 0x0230 (0x0230 - 0x0000)
struct GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0008(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x001C(0x0008)()
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0070(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0084(0x0008)()
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x008C(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0094(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x00A8(0x000C)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAIAbilityTarget_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayAbilityMontageInfo        K2Node_MakeStruct_FortGameplayAbilityMontageInfo;  // 0x00BC(0x0044)()
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x011C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0130(0x0008)()
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue2;           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue2;         // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue2;        // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue2;                      // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X3;                           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y3;                           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z3;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate3;             // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue3;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue3;         // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue3;        // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue4;         // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee) == 0x000004, "Wrong alignment on GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee");
static_assert(sizeof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee) == 0x000230, "Wrong size on GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, EntryPoint) == 0x000000, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_GetActivatingPawn_ReturnValue) == 0x000004, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CustomEvent_TargetData2) == 0x000008, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CustomEvent_ApplicationTag2) == 0x00001C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00003C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CustomEvent_TargetData) == 0x000070, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CustomEvent_ApplicationTag) == 0x000084, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, Temp_struct_Variable) == 0x00008C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, Temp_struct_Variable2) == 0x000094, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x0000A8, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000B4, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_GetAIAbilityTarget_ReturnValue) == 0x0000B8, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_GetAIAbilityTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_MakeStruct_FortGameplayAbilityMontageInfo) == 0x0000BC, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_MakeStruct_FortGameplayAbilityMontageInfo' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_DynamicCast_AsFort_Pawn) == 0x000100, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_DynamicCast_bSuccess) == 0x000104, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x000108, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00010C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CustomEvent_TargetData3) == 0x00011C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CustomEvent_ApplicationTag3) == 0x000130, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_GetActivatingPawn_ReturnValue2) == 0x000138, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_GetActivatingPawn_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorRotation_ReturnValue2) == 0x00013C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x000148, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Conv_RotatorToVector_ReturnValue2) == 0x000154, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Conv_RotatorToVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000160, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_X) == 0x00016C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_Y) == 0x000170, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_Z) == 0x000174, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_X2) == 0x000178, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_Y2) == 0x00017C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_Z2) == 0x000180, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_MakeVector_ReturnValue) == 0x000184, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_MakeVector_ReturnValue2) == 0x000190, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Normal_ReturnValue) == 0x00019C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Normal_ReturnValue2) == 0x0001A8, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Normal_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001B4, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_X3) == 0x0001C0, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_Y3) == 0x0001C4, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_BreakVector_Z3) == 0x0001C8, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CreateDelegate_OutputDelegate2) == 0x0001CC, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001DC, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, K2Node_CreateDelegate_OutputDelegate3) == 0x0001E0, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_GetActivatingPawn_ReturnValue3) == 0x0001F0, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_GetActivatingPawn_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorRotation_ReturnValue3) == 0x0001F4, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorRotation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Conv_RotatorToVector_ReturnValue3) == 0x000200, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Conv_RotatorToVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_K2_GetActorLocation_ReturnValue4) == 0x00020C, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_K2_GetActorLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000218, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee, CallFunc_Add_VectorVector_ReturnValue2) == 0x000224, "Member 'GAB_HuskBaseRadialMelee_C_ExecuteUbergraph_GAB_HuskBaseRadialMelee::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");

// Function GAB_HuskBaseRadialMelee.GAB_HuskBaseRadialMelee_C.Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D
// 0x001C (0x001C - 0x0000)
struct GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D) == 0x000004, "Wrong alignment on GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D");
static_assert(sizeof(GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D) == 0x00001C, "Wrong size on GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D, TargetData) == 0x000000, "Member 'GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D, ApplicationTag) == 0x000014, "Member 'GAB_HuskBaseRadialMelee_C_Triggered_A0D25C0C4C9CDEEB0EB0018B3334307D::ApplicationTag' has a wrong offset!");

// Function GAB_HuskBaseRadialMelee.GAB_HuskBaseRadialMelee_C.Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D
// 0x001C (0x001C - 0x0000)
struct GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D) == 0x000004, "Wrong alignment on GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D");
static_assert(sizeof(GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D) == 0x00001C, "Wrong size on GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D, TargetData) == 0x000000, "Member 'GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D, ApplicationTag) == 0x000014, "Member 'GAB_HuskBaseRadialMelee_C_Cancelled_A0D25C0C4C9CDEEB0EB0018B3334307D::ApplicationTag' has a wrong offset!");

// Function GAB_HuskBaseRadialMelee.GAB_HuskBaseRadialMelee_C.Completed_A0D25C0C4C9CDEEB0EB0018B3334307D
// 0x001C (0x001C - 0x0000)
struct GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D) == 0x000004, "Wrong alignment on GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D");
static_assert(sizeof(GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D) == 0x00001C, "Wrong size on GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D, TargetData) == 0x000000, "Member 'GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D, ApplicationTag) == 0x000014, "Member 'GAB_HuskBaseRadialMelee_C_Completed_A0D25C0C4C9CDEEB0EB0018B3334307D::ApplicationTag' has a wrong offset!");

// Function GAB_HuskBaseRadialMelee.GAB_HuskBaseRadialMelee_C.K2_CanActivateAbility
// 0x00CC (0x00CC - 0x0000)
struct GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0034)(Parm, ContainsInstancedReference)
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0034(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAIAbilityTarget_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue2;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetAIAbilityTarget_ReturnValue2;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanActivate;                                       // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility) == 0x000004, "Wrong alignment on GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility");
static_assert(sizeof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility) == 0x0000CC, "Wrong size on GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, RelevantTags) == 0x000034, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, ReturnValue) == 0x00004C, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_GetAIAbilityTarget_ReturnValue) == 0x000050, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_GetAIAbilityTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_GetActivatingPawn_ReturnValue) == 0x000058, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_GetActivatingPawn_ReturnValue2) == 0x000068, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_GetActivatingPawn_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_GetAIAbilityTarget_ReturnValue2) == 0x00006C, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_GetAIAbilityTarget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000070, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00007C, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000088, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000094, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_BreakVector_X) == 0x0000A0, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_Normal_ReturnValue) == 0x0000B8, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C4, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility, CanActivate) == 0x0000C9, "Member 'GAB_HuskBaseRadialMelee_C_K2_CanActivateAbility::CanActivate' has a wrong offset!");

}

#pragma pack(pop)
