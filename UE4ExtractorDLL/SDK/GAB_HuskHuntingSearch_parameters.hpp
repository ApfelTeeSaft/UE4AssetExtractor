#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_HuskHuntingSearch

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GAB_HuskHuntingSearch.GAB_HuskHuntingSearch_C.ExecuteUbergraph_GAB_HuskHuntingSearch
// 0x00B0 (0x00B0 - 0x0000)
struct GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0018(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0030(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0044(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x005C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0070(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0088(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0090(0x0014)()
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch) == 0x000004, "Wrong alignment on GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch");
static_assert(sizeof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch) == 0x0000B0, "Wrong size on GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, EntryPoint) == 0x000000, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CustomEvent_TargetData3) == 0x000004, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CustomEvent_ApplicationTag3) == 0x000018, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CustomEvent_TargetData2) == 0x000030, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CustomEvent_ApplicationTag2) == 0x000044, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CreateDelegate_OutputDelegate2) == 0x00004C, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CustomEvent_TargetData) == 0x00005C, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CustomEvent_ApplicationTag) == 0x000070, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, K2Node_CreateDelegate_OutputDelegate3) == 0x000078, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, Temp_struct_Variable) == 0x000088, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, Temp_struct_Variable2) == 0x000090, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000A4, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x0000A8, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch, CallFunc_IsValid_ReturnValue) == 0x0000AC, "Member 'GAB_HuskHuntingSearch_C_ExecuteUbergraph_GAB_HuskHuntingSearch::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GAB_HuskHuntingSearch.GAB_HuskHuntingSearch_C.Triggered_9925B44A484135CDB5C78BAF8BED9454
// 0x001C (0x001C - 0x0000)
struct GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454) == 0x000004, "Wrong alignment on GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454");
static_assert(sizeof(GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454) == 0x00001C, "Wrong size on GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454");
static_assert(offsetof(GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454, TargetData) == 0x000000, "Member 'GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454, ApplicationTag) == 0x000014, "Member 'GAB_HuskHuntingSearch_C_Triggered_9925B44A484135CDB5C78BAF8BED9454::ApplicationTag' has a wrong offset!");

// Function GAB_HuskHuntingSearch.GAB_HuskHuntingSearch_C.Cancelled_9925B44A484135CDB5C78BAF8BED9454
// 0x001C (0x001C - 0x0000)
struct GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454) == 0x000004, "Wrong alignment on GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454");
static_assert(sizeof(GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454) == 0x00001C, "Wrong size on GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454");
static_assert(offsetof(GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454, TargetData) == 0x000000, "Member 'GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454, ApplicationTag) == 0x000014, "Member 'GAB_HuskHuntingSearch_C_Cancelled_9925B44A484135CDB5C78BAF8BED9454::ApplicationTag' has a wrong offset!");

// Function GAB_HuskHuntingSearch.GAB_HuskHuntingSearch_C.Completed_9925B44A484135CDB5C78BAF8BED9454
// 0x001C (0x001C - 0x0000)
struct GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454) == 0x000004, "Wrong alignment on GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454");
static_assert(sizeof(GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454) == 0x00001C, "Wrong size on GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454");
static_assert(offsetof(GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454, TargetData) == 0x000000, "Member 'GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454, ApplicationTag) == 0x000014, "Member 'GAB_HuskHuntingSearch_C_Completed_9925B44A484135CDB5C78BAF8BED9454::ApplicationTag' has a wrong offset!");

}

#pragma pack(pop)
