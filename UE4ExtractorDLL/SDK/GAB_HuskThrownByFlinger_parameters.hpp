#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_HuskThrownByFlinger

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.ExecuteUbergraph_GAB_HuskThrownByFlinger
// 0x04F0 (0x04F0 - 0x0000)
struct GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0018(0x0008)()
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0030(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0044(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x005C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0070(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0088(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0090(0x0014)()
	TDelegate<void(const struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate4;             // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate5;             // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate6;             // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActorRotation_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate7;             // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x012C(0x0058)(ConstParm)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHuskPawn_C*                            K2Node_DynamicCast_AsHusk_Pawn;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData6;                    // 0x01C8(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag6;                // 0x01DC(0x0008)()
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable3;                             // 0x0218(0x0014)()
	struct FGameplayTag                           Temp_struct_Variable4;                             // 0x022C(0x0008)()
	struct FHitResult                             K2Node_CustomEvent_Hit2;                           // 0x0234(0x0080)(ConstParm, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_SelfActor;                      // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x02C8(0x0080)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate8;             // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData4;                    // 0x0358(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag4;                // 0x036C(0x0008)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0374(0x0004)()
	struct FVector                                CallFunc_GetVelocity_ReturnValue2;                 // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActive_ReturnValue;             // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActorRotation_ReturnValue2;            // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate9;             // 0x03BC(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData5;                    // 0x03E8(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag5;                // 0x03FC(0x0008)()
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue2;         // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0428(0x0008)()
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue3;     // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoGameplayTagsMatch_ReturnValue;          // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue2;      // 0x0458(0x0008)()
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0460(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoGameplayTagsMatch_ReturnValue2;         // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2[0x2];                                      // 0x04E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue3;      // 0x04E4(0x0008)()
	bool                                          CallFunc_DoGameplayTagsMatch_ReturnValue3;         // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger) == 0x0004F0, "Wrong size on GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, EntryPoint) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_TargetData3) == 0x000004, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_ApplicationTag3) == 0x000018, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_TargetData2) == 0x000030, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_ApplicationTag2) == 0x000044, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate2) == 0x00004C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_TargetData) == 0x00005C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_ApplicationTag) == 0x000070, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate3) == 0x000078, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, Temp_struct_Variable) == 0x000088, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, Temp_struct_Variable2) == 0x000090, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate4) == 0x0000A4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate5) == 0x0000B4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate6) == 0x0000C4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000D8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakRotator_Roll) == 0x0000E4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakRotator_Pitch) == 0x0000E8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakRotator_Yaw) == 0x0000EC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_MakeRotator_ReturnValue) == 0x0000FC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_TeleportTo_ReturnValue) == 0x000108, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00010C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_SetActorRotation_ReturnValue) == 0x000118, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate7) == 0x00011C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_Event_EventData) == 0x00012C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_GetActivatingPawn_ReturnValue) == 0x000184, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_DynamicCast_AsHusk_Pawn) == 0x000188, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_DynamicCast_AsHusk_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_DynamicCast_bSuccess) == 0x00018C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_DamagedActor) == 0x000190, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_Damage) == 0x000194, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_InstigatedBy) == 0x000198, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_DamageCauser) == 0x00019C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_HitLocation) == 0x0001A0, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_FHitComponent) == 0x0001AC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_BoneName) == 0x0001B0, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_Momentum) == 0x0001B8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x0001C4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_TargetData6) == 0x0001C8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_TargetData6' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_ApplicationTag6) == 0x0001DC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_ApplicationTag6' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_IsValid_ReturnValue2) == 0x0001E4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_GetVelocity_ReturnValue) == 0x0001E8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001F4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakVector_X) == 0x000200, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakVector_Y) == 0x000204, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakVector_Z) == 0x000208, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_MakeVector_ReturnValue) == 0x00020C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, Temp_struct_Variable3) == 0x000218, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, Temp_struct_Variable4) == 0x00022C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_Hit2) == 0x000234, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_Hit2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_SelfActor) == 0x0002B4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_SelfActor' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_OtherActor) == 0x0002B8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_NormalImpulse) == 0x0002BC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_Hit) == 0x0002C8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate8) == 0x000348, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_TargetData4) == 0x000358, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_TargetData4' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_ApplicationTag4) == 0x00036C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_ApplicationTag4' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_SetTimer_ReturnValue) == 0x000374, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_GetVelocity_ReturnValue2) == 0x000378, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_GetVelocity_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_Normal_ReturnValue) == 0x000384, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000390, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakRotator_Roll2) == 0x00039C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakRotator_Pitch2) == 0x0003A0, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_BreakRotator_Yaw2) == 0x0003A4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003A8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_MakeRotator_ReturnValue2) == 0x0003AC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_IsTimerActive_ReturnValue) == 0x0003B8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_IsTimerActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_SetActorRotation_ReturnValue2) == 0x0003B9, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_SetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CreateDelegate_OutputDelegate9) == 0x0003BC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x0003CC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_GetCollisionProfileName_ReturnValue) == 0x0003D8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x0003E0, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_IsValid_ReturnValue3) == 0x0003E4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_TargetData5) == 0x0003E8, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_TargetData5' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, K2Node_CustomEvent_ApplicationTag5) == 0x0003FC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::K2Node_CustomEvent_ApplicationTag5' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000404, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000410, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetActorRotation_ReturnValue2) == 0x00041C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000428, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_GetComponentLocation_ReturnValue3) == 0x000430, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_GetComponentLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_DoGameplayTagsMatch_ReturnValue) == 0x00043C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_DoGameplayTagsMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000440, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_Add_VectorVector_ReturnValue) == 0x00044C, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_MakeLiteralGameplayTag_ReturnValue2) == 0x000458, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_MakeLiteralGameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000460, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0004E0, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_DoGameplayTagsMatch_ReturnValue2) == 0x0004E1, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_DoGameplayTagsMatch_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_MakeLiteralGameplayTag_ReturnValue3) == 0x0004E4, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_MakeLiteralGameplayTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger, CallFunc_DoGameplayTagsMatch_ReturnValue3) == 0x0004EC, "Member 'GAB_HuskThrownByFlinger_C_ExecuteUbergraph_GAB_HuskThrownByFlinger::CallFunc_DoGameplayTagsMatch_ReturnValue3' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.HuskHit
// 0x0094 (0x0094 - 0x0000)
struct GAB_HuskThrownByFlinger_C_HuskHit final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 OtherActor;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                NormalImpulse;                                     // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             Hit;                                               // 0x0014(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_HuskHit) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_HuskHit");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_HuskHit) == 0x000094, "Wrong size on GAB_HuskThrownByFlinger_C_HuskHit");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskHit, SelfActor) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_HuskHit::SelfActor' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskHit, OtherActor) == 0x000004, "Member 'GAB_HuskThrownByFlinger_C_HuskHit::OtherActor' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskHit, NormalImpulse) == 0x000008, "Member 'GAB_HuskThrownByFlinger_C_HuskHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskHit, Hit) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_HuskHit::Hit' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.HuskLanded
// 0x0080 (0x0080 - 0x0000)
struct GAB_HuskThrownByFlinger_C_HuskLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_HuskLanded) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_HuskLanded");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_HuskLanded) == 0x000080, "Wrong size on GAB_HuskThrownByFlinger_C_HuskLanded");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskLanded, Hit) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_HuskLanded::Hit' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.HuskDamaged
// 0x0034 (0x0034 - 0x0000)
struct GAB_HuskThrownByFlinger_C_HuskDamaged final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Damage;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            InstigatedBy;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageCauser;                                      // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   BoneName;                                          // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_HuskDamaged) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_HuskDamaged");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_HuskDamaged) == 0x000034, "Wrong size on GAB_HuskThrownByFlinger_C_HuskDamaged");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, DamagedActor) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::DamagedActor' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, Damage) == 0x000004, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::Damage' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, InstigatedBy) == 0x000008, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, DamageCauser) == 0x00000C, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::DamageCauser' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, HitLocation) == 0x000010, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::HitLocation' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, FHitComponent) == 0x00001C, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::FHitComponent' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, BoneName) == 0x000020, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::BoneName' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_HuskDamaged, Momentum) == 0x000028, "Member 'GAB_HuskThrownByFlinger_C_HuskDamaged::Momentum' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.K2_ActivateAbilityFromEvent
// 0x0058 (0x0058 - 0x0000)
struct GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent) == 0x000058, "Wrong size on GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.Triggered_E287620540AA42D086331C807CAC562F
// 0x001C (0x001C - 0x0000)
struct GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F) == 0x00001C, "Wrong size on GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F, TargetData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F, ApplicationTag) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_Triggered_E287620540AA42D086331C807CAC562F::ApplicationTag' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.Cancelled_E287620540AA42D086331C807CAC562F
// 0x001C (0x001C - 0x0000)
struct GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F) == 0x00001C, "Wrong size on GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F, TargetData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F, ApplicationTag) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_Cancelled_E287620540AA42D086331C807CAC562F::ApplicationTag' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.Completed_E287620540AA42D086331C807CAC562F
// 0x001C (0x001C - 0x0000)
struct GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F) == 0x00001C, "Wrong size on GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F, TargetData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F, ApplicationTag) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_Completed_E287620540AA42D086331C807CAC562F::ApplicationTag' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.Triggered_405AED2944EC7B63E07F8CBC114C4467
// 0x001C (0x001C - 0x0000)
struct GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467) == 0x00001C, "Wrong size on GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467, TargetData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467, ApplicationTag) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_Triggered_405AED2944EC7B63E07F8CBC114C4467::ApplicationTag' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.Cancelled_405AED2944EC7B63E07F8CBC114C4467
// 0x001C (0x001C - 0x0000)
struct GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467) == 0x00001C, "Wrong size on GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467, TargetData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467, ApplicationTag) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_Cancelled_405AED2944EC7B63E07F8CBC114C4467::ApplicationTag' has a wrong offset!");

// Function GAB_HuskThrownByFlinger.GAB_HuskThrownByFlinger_C.Completed_405AED2944EC7B63E07F8CBC114C4467
// 0x001C (0x001C - 0x0000)
struct GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467) == 0x000004, "Wrong alignment on GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467");
static_assert(sizeof(GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467) == 0x00001C, "Wrong size on GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467, TargetData) == 0x000000, "Member 'GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467, ApplicationTag) == 0x000014, "Member 'GAB_HuskThrownByFlinger_C_Completed_405AED2944EC7B63E07F8CBC114C4467::ApplicationTag' has a wrong offset!");

}

#pragma pack(pop)
