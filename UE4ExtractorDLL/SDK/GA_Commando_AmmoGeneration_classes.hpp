#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Commando_AmmoGeneration

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GAT_CommandoTriggeredAbility_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Commando_AmmoGeneration.GA_Commando_AmmoGeneration_C
// 0x0024 (0x0764 - 0x0740)
class UGA_Commando_AmmoGeneration_C final : public UGAT_CommandoTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Commando_AmmoGeneration_C;       // 0x0740(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           TC_IsAssaultRifle;                                 // 0x0744(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventActivation;                                   // 0x074C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventComplete;                                     // 0x0754(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AmountGiven;                                       // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         UpgradedAmmoAmount;                                // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Commando_AmmoGeneration(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void SetupVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Commando_AmmoGeneration_C">();
	}
	static class UGA_Commando_AmmoGeneration_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Commando_AmmoGeneration_C>();
	}
};
static_assert(alignof(UGA_Commando_AmmoGeneration_C) == 0x000004, "Wrong alignment on UGA_Commando_AmmoGeneration_C");
static_assert(sizeof(UGA_Commando_AmmoGeneration_C) == 0x000764, "Wrong size on UGA_Commando_AmmoGeneration_C");
static_assert(offsetof(UGA_Commando_AmmoGeneration_C, UberGraphFrame_GA_Commando_AmmoGeneration_C) == 0x000740, "Member 'UGA_Commando_AmmoGeneration_C::UberGraphFrame_GA_Commando_AmmoGeneration_C' has a wrong offset!");
static_assert(offsetof(UGA_Commando_AmmoGeneration_C, TC_IsAssaultRifle) == 0x000744, "Member 'UGA_Commando_AmmoGeneration_C::TC_IsAssaultRifle' has a wrong offset!");
static_assert(offsetof(UGA_Commando_AmmoGeneration_C, EventActivation) == 0x00074C, "Member 'UGA_Commando_AmmoGeneration_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Commando_AmmoGeneration_C, EventComplete) == 0x000754, "Member 'UGA_Commando_AmmoGeneration_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Commando_AmmoGeneration_C, AmountGiven) == 0x00075C, "Member 'UGA_Commando_AmmoGeneration_C::AmountGiven' has a wrong offset!");
static_assert(offsetof(UGA_Commando_AmmoGeneration_C, UpgradedAmmoAmount) == 0x000760, "Member 'UGA_Commando_AmmoGeneration_C::UpgradedAmmoAmount' has a wrong offset!");

}

#pragma pack(pop)
