#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Commando_DebilitatingShots

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GAT_CommandoTriggeredAbility_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Commando_DebilitatingShots.GA_Commando_DebilitatingShots_C
// 0x00E0 (0x0820 - 0x0740)
class UGA_Commando_DebilitatingShots_C final : public UGAT_CommandoTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Commando_DebilitatingShots_C;    // 0x0740(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           TC_IsGun;                                          // 0x0744(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventActivation;                                   // 0x074C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_DebilitatingShots;                              // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventComplete;                                     // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventDirectTrigger;                                // 0x0760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         StackCount;                                        // 0x0768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         DefaultStackCount;                                 // 0x076C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         PerfectEngineeringStack;                           // 0x0770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0774(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_LingeringPain;                                  // 0x0788(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_HackStackBreaker;                               // 0x07A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_LingeringPain;                                  // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_Kneecapper;                                     // 0x07BC(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DebuffValue;                                       // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DefaultValue;                                      // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         KneecapperValue;                                   // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DebuffDuration;                                    // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_ApplyFatigue;                                   // 0x07E4(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_CommandoFatigueInstant;                         // 0x07FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_IsAfflicted;                                    // 0x0800(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPawn*                              HitTargetPawn;                                     // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_CommandoFatigueDuration;                        // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Commando_DebilitatingShots(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void SetupGameplayEffect(class AActor* HitActor, const struct FGameplayTag& EventTag, class UObject* OptionalObject, struct FGameplayAbilityTargetDataHandle* Target_Data, class UClass** DebilitatingShots, int32* Effect_Level, int32* Stack_Count);
	void SetupAppliedEffect(float Duration, float Magnitude, int32 Stack_Count, const struct FGameplayEffectSpecHandle& EffectSpecHandle, struct FGameplayEffectSpecHandle* EffectspecHandleOut);
	void SetupFatigue(struct FGameplayEffectSpecHandle* EffectspecOutInstant, struct FGameplayEffectSpecHandle* EffectspecOutDuration);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Commando_DebilitatingShots_C">();
	}
	static class UGA_Commando_DebilitatingShots_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Commando_DebilitatingShots_C>();
	}
};
static_assert(alignof(UGA_Commando_DebilitatingShots_C) == 0x000004, "Wrong alignment on UGA_Commando_DebilitatingShots_C");
static_assert(sizeof(UGA_Commando_DebilitatingShots_C) == 0x000820, "Wrong size on UGA_Commando_DebilitatingShots_C");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, UberGraphFrame_GA_Commando_DebilitatingShots_C) == 0x000740, "Member 'UGA_Commando_DebilitatingShots_C::UberGraphFrame_GA_Commando_DebilitatingShots_C' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TC_IsGun) == 0x000744, "Member 'UGA_Commando_DebilitatingShots_C::TC_IsGun' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, EventActivation) == 0x00074C, "Member 'UGA_Commando_DebilitatingShots_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, GE_DebilitatingShots) == 0x000754, "Member 'UGA_Commando_DebilitatingShots_C::GE_DebilitatingShots' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, EventComplete) == 0x000758, "Member 'UGA_Commando_DebilitatingShots_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, EventDirectTrigger) == 0x000760, "Member 'UGA_Commando_DebilitatingShots_C::EventDirectTrigger' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, StackCount) == 0x000768, "Member 'UGA_Commando_DebilitatingShots_C::StackCount' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, DefaultStackCount) == 0x00076C, "Member 'UGA_Commando_DebilitatingShots_C::DefaultStackCount' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, PerfectEngineeringStack) == 0x000770, "Member 'UGA_Commando_DebilitatingShots_C::PerfectEngineeringStack' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TargetData) == 0x000774, "Member 'UGA_Commando_DebilitatingShots_C::TargetData' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TC_LingeringPain) == 0x000788, "Member 'UGA_Commando_DebilitatingShots_C::TC_LingeringPain' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TC_HackStackBreaker) == 0x0007A0, "Member 'UGA_Commando_DebilitatingShots_C::TC_HackStackBreaker' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, GE_LingeringPain) == 0x0007B8, "Member 'UGA_Commando_DebilitatingShots_C::GE_LingeringPain' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TC_Kneecapper) == 0x0007BC, "Member 'UGA_Commando_DebilitatingShots_C::TC_Kneecapper' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, DebuffValue) == 0x0007D4, "Member 'UGA_Commando_DebilitatingShots_C::DebuffValue' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, DefaultValue) == 0x0007D8, "Member 'UGA_Commando_DebilitatingShots_C::DefaultValue' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, KneecapperValue) == 0x0007DC, "Member 'UGA_Commando_DebilitatingShots_C::KneecapperValue' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, DebuffDuration) == 0x0007E0, "Member 'UGA_Commando_DebilitatingShots_C::DebuffDuration' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TC_ApplyFatigue) == 0x0007E4, "Member 'UGA_Commando_DebilitatingShots_C::TC_ApplyFatigue' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, GE_CommandoFatigueInstant) == 0x0007FC, "Member 'UGA_Commando_DebilitatingShots_C::GE_CommandoFatigueInstant' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, TC_IsAfflicted) == 0x000800, "Member 'UGA_Commando_DebilitatingShots_C::TC_IsAfflicted' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, HitTargetPawn) == 0x000818, "Member 'UGA_Commando_DebilitatingShots_C::HitTargetPawn' has a wrong offset!");
static_assert(offsetof(UGA_Commando_DebilitatingShots_C, GE_CommandoFatigueDuration) == 0x00081C, "Member 'UGA_Commando_DebilitatingShots_C::GE_CommandoFatigueDuration' has a wrong offset!");

}

#pragma pack(pop)
