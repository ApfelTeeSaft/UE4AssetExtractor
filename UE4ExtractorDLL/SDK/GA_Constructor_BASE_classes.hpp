#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Constructor_BASE

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Constructor_BASE.GA_Constructor_BASE_C
// 0x00D8 (0x07B4 - 0x06DC)
class UGA_Constructor_BASE_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06DC(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     EventData;                                         // 0x06E0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APlayerPawn_Constructor_C*              ConstructorPawn;                                   // 0x0738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventActivation;                                   // 0x073C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           M_PlaceBase;                                       // 0x0744(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             CuePlacement;                                      // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             CueActivation;                                     // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_FullyContained;                                 // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_FullyContained;                                 // 0x0754(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortAbilityDecoTool*                   DecoTool;                                          // 0x076C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FAbilityToolSpawnParameters            SpawnParameters;                                   // 0x0770(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_CardioFeedbackLoop;                             // 0x0790(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_CardioFeedbackLoop;                             // 0x07A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         HealPerSecond;                                     // 0x07AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_GrantDmgReflection;                             // 0x07B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Constructor_BASE(int32 EntryPoint);
	void K2_ActivateAbility();
	void OnComplete_448313A941E0C180B5FAED9820171140();
	void OnInterrupted_448313A941E0C180B5FAED9820171140();
	void OnCancelled_448313A941E0C180B5FAED9820171140();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Constructor_BASE_C">();
	}
	static class UGA_Constructor_BASE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Constructor_BASE_C>();
	}
};
static_assert(alignof(UGA_Constructor_BASE_C) == 0x000004, "Wrong alignment on UGA_Constructor_BASE_C");
static_assert(sizeof(UGA_Constructor_BASE_C) == 0x0007B4, "Wrong size on UGA_Constructor_BASE_C");
static_assert(offsetof(UGA_Constructor_BASE_C, UberGraphFrame) == 0x0006DC, "Member 'UGA_Constructor_BASE_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, EventData) == 0x0006E0, "Member 'UGA_Constructor_BASE_C::EventData' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, ConstructorPawn) == 0x000738, "Member 'UGA_Constructor_BASE_C::ConstructorPawn' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, EventActivation) == 0x00073C, "Member 'UGA_Constructor_BASE_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, M_PlaceBase) == 0x000744, "Member 'UGA_Constructor_BASE_C::M_PlaceBase' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, CuePlacement) == 0x000748, "Member 'UGA_Constructor_BASE_C::CuePlacement' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, CueActivation) == 0x00074C, "Member 'UGA_Constructor_BASE_C::CueActivation' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, GE_FullyContained) == 0x000750, "Member 'UGA_Constructor_BASE_C::GE_FullyContained' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, TC_FullyContained) == 0x000754, "Member 'UGA_Constructor_BASE_C::TC_FullyContained' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, DecoTool) == 0x00076C, "Member 'UGA_Constructor_BASE_C::DecoTool' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, SpawnParameters) == 0x000770, "Member 'UGA_Constructor_BASE_C::SpawnParameters' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, TC_CardioFeedbackLoop) == 0x000790, "Member 'UGA_Constructor_BASE_C::TC_CardioFeedbackLoop' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, GE_CardioFeedbackLoop) == 0x0007A8, "Member 'UGA_Constructor_BASE_C::GE_CardioFeedbackLoop' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, HealPerSecond) == 0x0007AC, "Member 'UGA_Constructor_BASE_C::HealPerSecond' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_BASE_C, GE_GrantDmgReflection) == 0x0007B0, "Member 'UGA_Constructor_BASE_C::GE_GrantDmgReflection' has a wrong offset!");

}

#pragma pack(pop)
