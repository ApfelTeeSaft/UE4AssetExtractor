#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Constructor_KineticOverload

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GAT_ConstructorTriggeredAbility_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C
// 0x0130 (0x0870 - 0x0740)
class UGA_Constructor_KineticOverload_C final : public UGAT_ConstructorTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Constructor_KineticOverload_C;   // 0x0740(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x0744(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventComplete;                                     // 0x074C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_KineticDamage;                                  // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FHitResult                             HitActor;                                          // 0x0758(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FGameplayTagContainer                  TC_BeatDown;                                       // 0x07D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_BeatDown;                                       // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_KineticOverdrive;                               // 0x07F4(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          KineticOverdrive;                                  // 0x080C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_80D[0x3];                                      // 0x080D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MainTargetLocation;                                // 0x0810(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       AOETargets;                                        // 0x081C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EC_AoeTarget;                                      // 0x0830(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_NiceAndSlow;                                    // 0x0838(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_NiceAndSlowDamage;                              // 0x0850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_BluntDamage;                                    // 0x0854(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 PrimaryTarget;                                     // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Constructor_KineticOverload(int32 EntryPoint);
	void AbilityTimeout();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void Targeted_AEF31BFB4F9F700D450DB3A243436FC5(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_AEF31BFB4F9F700D450DB3A243436FC5(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void HitTarget();

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;
	struct FTransform GetCustomAbilitySourceTransform() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Constructor_KineticOverload_C">();
	}
	static class UGA_Constructor_KineticOverload_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Constructor_KineticOverload_C>();
	}
};
static_assert(alignof(UGA_Constructor_KineticOverload_C) == 0x000004, "Wrong alignment on UGA_Constructor_KineticOverload_C");
static_assert(sizeof(UGA_Constructor_KineticOverload_C) == 0x000870, "Wrong size on UGA_Constructor_KineticOverload_C");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, UberGraphFrame_GA_Constructor_KineticOverload_C) == 0x000740, "Member 'UGA_Constructor_KineticOverload_C::UberGraphFrame_GA_Constructor_KineticOverload_C' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, EventActivation) == 0x000744, "Member 'UGA_Constructor_KineticOverload_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, EventComplete) == 0x00074C, "Member 'UGA_Constructor_KineticOverload_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, GE_KineticDamage) == 0x000754, "Member 'UGA_Constructor_KineticOverload_C::GE_KineticDamage' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, HitActor) == 0x000758, "Member 'UGA_Constructor_KineticOverload_C::HitActor' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, TC_BeatDown) == 0x0007D8, "Member 'UGA_Constructor_KineticOverload_C::TC_BeatDown' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, GE_BeatDown) == 0x0007F0, "Member 'UGA_Constructor_KineticOverload_C::GE_BeatDown' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, TC_KineticOverdrive) == 0x0007F4, "Member 'UGA_Constructor_KineticOverload_C::TC_KineticOverdrive' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, KineticOverdrive) == 0x00080C, "Member 'UGA_Constructor_KineticOverload_C::KineticOverdrive' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, MainTargetLocation) == 0x000810, "Member 'UGA_Constructor_KineticOverload_C::MainTargetLocation' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, AOETargets) == 0x00081C, "Member 'UGA_Constructor_KineticOverload_C::AOETargets' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, EC_AoeTarget) == 0x000830, "Member 'UGA_Constructor_KineticOverload_C::EC_AoeTarget' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, TC_NiceAndSlow) == 0x000838, "Member 'UGA_Constructor_KineticOverload_C::TC_NiceAndSlow' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, GE_NiceAndSlowDamage) == 0x000850, "Member 'UGA_Constructor_KineticOverload_C::GE_NiceAndSlowDamage' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, TC_BluntDamage) == 0x000854, "Member 'UGA_Constructor_KineticOverload_C::TC_BluntDamage' has a wrong offset!");
static_assert(offsetof(UGA_Constructor_KineticOverload_C, PrimaryTarget) == 0x00086C, "Member 'UGA_Constructor_KineticOverload_C::PrimaryTarget' has a wrong offset!");

}

#pragma pack(pop)
