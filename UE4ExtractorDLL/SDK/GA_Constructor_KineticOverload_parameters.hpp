#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Constructor_KineticOverload

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.ExecuteUbergraph_GA_Constructor_KineticOverload
// 0x0118 (0x0118 - 0x0000)
struct GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0020(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0034(0x0008)()
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x003C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0050(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0068(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0070(0x0014)()
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0084(0x0058)(ConstParm)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x00DC(0x000C)()
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x00E8(0x0004)()
	class UFortAbilityTask_WaitTargetSelection*   CallFunc_WaitTargetSelection_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue2;  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput; // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue3;  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload) == 0x000004, "Wrong alignment on GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload");
static_assert(sizeof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload) == 0x000118, "Wrong size on GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, EntryPoint) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_CustomEvent_TargetData2) == 0x000020, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_CustomEvent_ApplicationTag2) == 0x000034, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_CustomEvent_TargetData) == 0x00003C, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_CustomEvent_ApplicationTag) == 0x000050, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_CreateDelegate_OutputDelegate2) == 0x000058, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, Temp_struct_Variable) == 0x000068, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, Temp_struct_Variable2) == 0x000070, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, K2Node_Event_EventData) == 0x000084, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x0000DC, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x0000E8, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_WaitTargetSelection_ReturnValue) == 0x0000EC, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_WaitTargetSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x0000F4, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x0000FC, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput) == 0x000100, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_HasAllMatchingGameplayTags_ReturnValue2) == 0x000108, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_HasAllMatchingGameplayTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput) == 0x00010C, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload, CallFunc_HasAllMatchingGameplayTags_ReturnValue3) == 0x000114, "Member 'GA_Constructor_KineticOverload_C_ExecuteUbergraph_GA_Constructor_KineticOverload::CallFunc_HasAllMatchingGameplayTags_ReturnValue3' has a wrong offset!");

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.K2_ActivateAbilityFromEvent
// 0x0058 (0x0058 - 0x0000)
struct GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent) == 0x000004, "Wrong alignment on GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent) == 0x000058, "Wrong size on GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.Targeted_AEF31BFB4F9F700D450DB3A243436FC5
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5) == 0x000004, "Wrong alignment on GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5");
static_assert(sizeof(GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5) == 0x00001C, "Wrong size on GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5");
static_assert(offsetof(GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5, TargetData) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5, ApplicationTag) == 0x000014, "Member 'GA_Constructor_KineticOverload_C_Targeted_AEF31BFB4F9F700D450DB3A243436FC5::ApplicationTag' has a wrong offset!");

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.Cancelled_AEF31BFB4F9F700D450DB3A243436FC5
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5) == 0x000004, "Wrong alignment on GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5");
static_assert(sizeof(GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5) == 0x00001C, "Wrong size on GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5");
static_assert(offsetof(GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5, TargetData) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5, ApplicationTag) == 0x000014, "Member 'GA_Constructor_KineticOverload_C_Cancelled_AEF31BFB4F9F700D450DB3A243436FC5::ApplicationTag' has a wrong offset!");

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.HitTarget
// 0x0040 (0x0040 - 0x0000)
struct GA_Constructor_KineticOverload_C_HitTarget final
{
public:
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0008(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x001C(0x000C)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0028(0x000C)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0034(0x000C)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_HitTarget) == 0x000004, "Wrong alignment on GA_Constructor_KineticOverload_C_HitTarget");
static_assert(sizeof(GA_Constructor_KineticOverload_C_HitTarget) == 0x000040, "Wrong size on GA_Constructor_KineticOverload_C_HitTarget");
static_assert(offsetof(GA_Constructor_KineticOverload_C_HitTarget, K2Node_DynamicCast_AsFort_Pawn) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_HitTarget::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_HitTarget, K2Node_DynamicCast_bSuccess) == 0x000004, "Member 'GA_Constructor_KineticOverload_C_HitTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_HitTarget, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000008, "Member 'GA_Constructor_KineticOverload_C_HitTarget::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_HitTarget, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x00001C, "Member 'GA_Constructor_KineticOverload_C_HitTarget::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_HitTarget, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000028, "Member 'GA_Constructor_KineticOverload_C_HitTarget::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_HitTarget, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000034, "Member 'GA_Constructor_KineticOverload_C_HitTarget::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.K2_ShouldAbilityRespondToEvent
// 0x0098 (0x0098 - 0x0000)
struct GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0034)(Parm, ContainsInstancedReference)
	struct FGameplayEventData                     Payload;                                           // 0x0034(0x0058)(Parm)
	bool                                          ReturnValue;                                       // 0x008C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesContainerMatchAllTagsInContainer_ReturnValue; // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCriticalHit_ReturnValue;                // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPawn;                                            // 0x0097(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent) == 0x000004, "Wrong alignment on GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent");
static_assert(sizeof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent) == 0x000098, "Wrong size on GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, ActorInfo) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, Payload) == 0x000034, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, ReturnValue) == 0x00008C, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, CallFunc_DoesContainerMatchAllTagsInContainer_ReturnValue) == 0x00008D, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::CallFunc_DoesContainerMatchAllTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, CallFunc_IsCriticalHit_ReturnValue) == 0x00008E, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::CallFunc_IsCriticalHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_AsFort_Pawn) == 0x000090, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x000094, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, CallFunc_BooleanAND_ReturnValue) == 0x000095, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, CallFunc_BooleanAND_ReturnValue2) == 0x000096, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent, IsPawn) == 0x000097, "Member 'GA_Constructor_KineticOverload_C_K2_ShouldAbilityRespondToEvent::IsPawn' has a wrong offset!");

// Function GA_Constructor_KineticOverload.GA_Constructor_KineticOverload_C.GetCustomAbilitySourceTransform
// 0x0060 (0x0060 - 0x0000)
struct GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform) == 0x000010, "Wrong alignment on GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform");
static_assert(sizeof(GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform) == 0x000060, "Wrong size on GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform");
static_assert(offsetof(GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform, ReturnValue) == 0x000000, "Member 'GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'GA_Constructor_KineticOverload_C_GetCustomAbilitySourceTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
