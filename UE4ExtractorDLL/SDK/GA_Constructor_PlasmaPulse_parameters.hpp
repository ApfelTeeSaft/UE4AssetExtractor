#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Constructor_PlasmaPulse

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.ExecuteUbergraph_GA_Constructor_PlasmaPulse
// 0x03AC (0x03AC - 0x0000)
struct GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DarkHackyMath_SetByCallerValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData5;                // 0x0008(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData4;                // 0x0034(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData3;                // 0x0060(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate3;             // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData2;                // 0x008C(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate4;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData;                 // 0x00B8(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate5;             // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   Temp_struct_Variable;                              // 0x00E4(0x001C)(ContainsInstancedReference)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0110(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0124(0x0008)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0138(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x014C(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0164(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0178(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate8;             // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x0190(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable3;                             // 0x0198(0x0014)()
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData6;                // 0x01AC(0x001C)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x01CC(0x0034)(ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0200(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerPawn_Constructor_C*              K2Node_DynamicCast_AsPlayer_Pawn_Constructor;      // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0218(0x0058)()
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0270(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0284(0x000C)(ZeroConstructor, ReferenceParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SetupPlasmaPulse_Spawn_Location;          // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SetupPlasmaPulse_Spawn_Rotation;          // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_SetupPlasmaPulse_Plasma_Explosion;        // 0x02AC(0x0064)()
	struct FFortGameplayEffectContainerSpec       CallFunc_SetupPlasmaPulse_Mini_Explosion;          // 0x0310(0x0064)()
	class UFortAbilityTask_SpawnProjectileAndWait* CallFunc_SpawnProjectileAndWait_ReturnValue;       // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    CallFunc_BeginSpawningActor_SpawnedActor;          // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue;           // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E[0x2];                                      // 0x037E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x038C(0x000C)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignSetByCallerMagnitude_ReturnValue;   // 0x0398(0x000C)()
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x03A4(0x0004)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x03A8(0x0004)()
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse) == 0x0003AC, "Wrong size on GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, EntryPoint) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_DarkHackyMath_SetByCallerValue) == 0x000004, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_DarkHackyMath_SetByCallerValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ProjectileData5) == 0x000008, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ProjectileData5' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ProjectileData4) == 0x000034, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ProjectileData4' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate2) == 0x000050, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ProjectileData3) == 0x000060, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ProjectileData3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate3) == 0x00007C, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ProjectileData2) == 0x00008C, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ProjectileData2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate4) == 0x0000A8, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ProjectileData) == 0x0000B8, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ProjectileData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate5) == 0x0000D4, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, Temp_struct_Variable) == 0x0000E4, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate6) == 0x000100, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_TargetData3) == 0x000110, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ApplicationTag3) == 0x000124, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00012C, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_TargetData2) == 0x000138, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ApplicationTag2) == 0x00014C, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate7) == 0x000154, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_TargetData) == 0x000164, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ApplicationTag) == 0x000178, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate8) == 0x000180, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, Temp_struct_Variable2) == 0x000190, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, Temp_struct_Variable3) == 0x000198, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CustomEvent_ProjectileData6) == 0x0001AC, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CustomEvent_ProjectileData6' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_K2_CommitAbility_ReturnValue) == 0x0001C8, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_GetActorInfo_ReturnValue) == 0x0001CC, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_CreateDelegate_OutputDelegate9) == 0x000200, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_DynamicCast_AsPlayer_Pawn_Constructor) == 0x000210, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_DynamicCast_AsPlayer_Pawn_Constructor' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_DynamicCast_bSuccess) == 0x000214, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, K2Node_MakeStruct_GameplayEventData) == 0x000218, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000270, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000284, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000290, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_SetupPlasmaPulse_Spawn_Location) == 0x000294, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_SetupPlasmaPulse_Spawn_Location' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_SetupPlasmaPulse_Spawn_Rotation) == 0x0002A0, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_SetupPlasmaPulse_Spawn_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_SetupPlasmaPulse_Plasma_Explosion) == 0x0002AC, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_SetupPlasmaPulse_Plasma_Explosion' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_SetupPlasmaPulse_Mini_Explosion) == 0x000310, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_SetupPlasmaPulse_Mini_Explosion' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_SpawnProjectileAndWait_ReturnValue) == 0x000374, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_SpawnProjectileAndWait_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_BeginSpawningActor_SpawnedActor) == 0x000378, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_BeginSpawningActor_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_BeginSpawningActor_ReturnValue) == 0x00037C, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_BeginSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_IsValid_ReturnValue) == 0x00037D, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x000380, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_RandomFloatInRange_ReturnValue) == 0x000384, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_IsValid_ReturnValue2) == 0x000388, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x00038C, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_AssignSetByCallerMagnitude_ReturnValue) == 0x000398, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_AssignSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x0003A4, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0003A8, "Member 'GA_Constructor_PlasmaPulse_C_ExecuteUbergraph_GA_Constructor_PlasmaPulse::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B, TargetData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B, ApplicationTag) == 0x000014, "Member 'GA_Constructor_PlasmaPulse_C_Triggered_6AC3F9A4491B91FDE0457DAC0E8B468B::ApplicationTag' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B, TargetData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B, ApplicationTag) == 0x000014, "Member 'GA_Constructor_PlasmaPulse_C_Cancelled_6AC3F9A4491B91FDE0457DAC0E8B468B::ApplicationTag' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Completed_6AC3F9A4491B91FDE0457DAC0E8B468B
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B, TargetData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B, ApplicationTag) == 0x000014, "Member 'GA_Constructor_PlasmaPulse_C_Completed_6AC3F9A4491B91FDE0457DAC0E8B468B::ApplicationTag' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Created_76104D9B4F6C3F61303653918697EC35
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35, ProjectileData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Created_76104D9B4F6C3F61303653918697EC35::ProjectileData' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Touched_76104D9B4F6C3F61303653918697EC35
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35, ProjectileData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Touched_76104D9B4F6C3F61303653918697EC35::ProjectileData' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Bounced_76104D9B4F6C3F61303653918697EC35
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35, ProjectileData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Bounced_76104D9B4F6C3F61303653918697EC35::ProjectileData' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Stopped_76104D9B4F6C3F61303653918697EC35
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35, ProjectileData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Stopped_76104D9B4F6C3F61303653918697EC35::ProjectileData' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Exploded_76104D9B4F6C3F61303653918697EC35
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35, ProjectileData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Exploded_76104D9B4F6C3F61303653918697EC35::ProjectileData' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.Destroyed_76104D9B4F6C3F61303653918697EC35
// 0x001C (0x001C - 0x0000)
struct GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35) == 0x00001C, "Wrong size on GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35, ProjectileData) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_Destroyed_76104D9B4F6C3F61303653918697EC35::ProjectileData' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.SetupPlasmaPulse
// 0x01FC (0x01FC - 0x0000)
struct GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse final
{
public:
	class UAbilitySystemComponent*                Ability_System_Component;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Spawn_Location;                                    // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Spawn_Rotation;                                    // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       Plasma_Explosion;                                  // 0x001C(0x0064)(Parm, OutParm)
	struct FFortGameplayEffectContainerSpec       Mini_Explosion;                                    // 0x0080(0x0064)(Parm, OutParm)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue2;  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput; // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue3;  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue; // 0x010C(0x0064)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue2; // 0x0174(0x0064)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface4_CastInput; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue4;  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAimLocationNearestPawn_ReturnValue;    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse) == 0x0001FC, "Wrong size on GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, Ability_System_Component) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::Ability_System_Component' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, Spawn_Location) == 0x000004, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::Spawn_Location' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, Spawn_Rotation) == 0x000010, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::Spawn_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, Plasma_Explosion) == 0x00001C, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::Plasma_Explosion' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, Mini_Explosion) == 0x000080, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::Mini_Explosion' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x0000E4, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x0000EC, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput) == 0x0000F0, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_ReturnValue2) == 0x0000F8, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput) == 0x0000FC, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_ReturnValue3) == 0x000104, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000108, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue) == 0x00010C, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000170, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue2) == 0x000174, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface4_CastInput) == 0x0001D8, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface4_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_HasAllMatchingGameplayTags_ReturnValue4) == 0x0001E0, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_HasAllMatchingGameplayTags_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001E4, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse, CallFunc_GetAimLocationNearestPawn_ReturnValue) == 0x0001F0, "Member 'GA_Constructor_PlasmaPulse_C_SetupPlasmaPulse::CallFunc_GetAimLocationNearestPawn_ReturnValue' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.SpawnMiniPulses
// 0x00D0 (0x00D0 - 0x0000)
struct GA_Constructor_PlasmaPulse_C_SpawnMiniPulses final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       EffectContainerSpec;                               // 0x000C(0x0064)(Parm)
	class AActor*                                 ParentPulse;                                       // 0x0070(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue3;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    CallFunc_SpawnProjectile_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_SpawnMiniPulses");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses) == 0x0000D0, "Wrong size on GA_Constructor_PlasmaPulse_C_SpawnMiniPulses");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, HitLocation) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, EffectContainerSpec) == 0x00000C, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::EffectContainerSpec' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, ParentPulse) == 0x000070, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::ParentPulse' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_BreakVector_X) == 0x000074, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_BreakVector_Y) == 0x000078, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_BreakVector_Z) == 0x00007C, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_BreakVector_X2) == 0x000080, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_BreakVector_Y2) == 0x000084, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_BreakVector_Z2) == 0x000088, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_RandomFloatInRange_ReturnValue) == 0x00009C, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_RandomFloatInRange_ReturnValue2) == 0x0000A0, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0000A4, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_Add_FloatFloat_ReturnValue3) == 0x0000A8, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_RandomFloatInRange_ReturnValue3) == 0x0000AC, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_RandomFloatInRange_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_Add_FloatFloat_ReturnValue4) == 0x0000B0, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_MakeVector_ReturnValue2) == 0x0000B4, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000C0, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_SpawnMiniPulses, CallFunc_SpawnProjectile_ReturnValue) == 0x0000CC, "Member 'GA_Constructor_PlasmaPulse_C_SpawnMiniPulses::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");

// Function GA_Constructor_PlasmaPulse.GA_Constructor_PlasmaPulse_C.DarkHackyMath
// 0x0020 (0x0020 - 0x0000)
struct GA_Constructor_PlasmaPulse_C_DarkHackyMath final
{
public:
	float                                         SetByCallerValue;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxShield_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Constructor_PlasmaPulse_C_DarkHackyMath) == 0x000004, "Wrong alignment on GA_Constructor_PlasmaPulse_C_DarkHackyMath");
static_assert(sizeof(GA_Constructor_PlasmaPulse_C_DarkHackyMath) == 0x000020, "Wrong size on GA_Constructor_PlasmaPulse_C_DarkHackyMath");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, SetByCallerValue) == 0x000000, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::SetByCallerValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_GetMaxShield_ReturnValue) == 0x000004, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_GetMaxShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000008, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_GetFloatAttribute_ReturnValue) == 0x00000C, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Constructor_PlasmaPulse_C_DarkHackyMath, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00001C, "Member 'GA_Constructor_PlasmaPulse_C_DarkHackyMath::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");

}

#pragma pack(pop)
