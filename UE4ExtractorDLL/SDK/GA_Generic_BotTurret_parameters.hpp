#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Generic_BotTurret

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.ExecuteUbergraph_GA_Generic_BotTurret
// 0x0120 (0x0120 - 0x0000)
struct GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0018(0x0008)()
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0020(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0034(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x004C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0060(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0078(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0080(0x0014)()
	class AB_BGA_BotTurret_C*                     K2Node_DynamicCast_AsB_BGA_Bot_Turret;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_SetUpBot_PlayerPawn;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SetUpBot_SpawnLocation;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SetUpBot_SpawnRotation;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_SetUpBot_BGATurret;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class ABuildingGameplayActor*                 CallFunc_SpawnBuildingGameplayActor_ReturnValue;   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_BGA_BotTurret_C*                     K2Node_DynamicCast_AsB_BGA_Bot_Turret2;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret) == 0x000010, "Wrong alignment on GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret");
static_assert(sizeof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret) == 0x000120, "Wrong size on GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, EntryPoint) == 0x000000, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CustomEvent_TargetData3) == 0x000004, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CustomEvent_ApplicationTag3) == 0x000018, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CustomEvent_TargetData2) == 0x000020, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CustomEvent_ApplicationTag2) == 0x000034, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CustomEvent_TargetData) == 0x00004C, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CustomEvent_ApplicationTag) == 0x000060, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, Temp_struct_Variable) == 0x000078, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, Temp_struct_Variable2) == 0x000080, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_DynamicCast_AsB_BGA_Bot_Turret) == 0x000094, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_DynamicCast_AsB_BGA_Bot_Turret' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x00009C, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_CreateDelegate_OutputDelegate3) == 0x0000A0, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_SetUpBot_PlayerPawn) == 0x0000B4, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_SetUpBot_PlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_SetUpBot_SpawnLocation) == 0x0000B8, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_SetUpBot_SpawnLocation' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_SetUpBot_SpawnRotation) == 0x0000C4, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_SetUpBot_SpawnRotation' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_SetUpBot_BGATurret) == 0x0000D0, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_SetUpBot_BGATurret' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, CallFunc_SpawnBuildingGameplayActor_ReturnValue) == 0x000110, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::CallFunc_SpawnBuildingGameplayActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_DynamicCast_AsB_BGA_Bot_Turret2) == 0x000114, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_DynamicCast_AsB_BGA_Bot_Turret2' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret, K2Node_DynamicCast_bSuccess2) == 0x000118, "Member 'GA_Generic_BotTurret_C_ExecuteUbergraph_GA_Generic_BotTurret::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.Triggered_3A74E5BE4F4D85991B8887A89A2350CB
// 0x001C (0x001C - 0x0000)
struct GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB) == 0x000004, "Wrong alignment on GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB");
static_assert(sizeof(GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB) == 0x00001C, "Wrong size on GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB");
static_assert(offsetof(GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB, TargetData) == 0x000000, "Member 'GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB, ApplicationTag) == 0x000014, "Member 'GA_Generic_BotTurret_C_Triggered_3A74E5BE4F4D85991B8887A89A2350CB::ApplicationTag' has a wrong offset!");

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.Cancelled_3A74E5BE4F4D85991B8887A89A2350CB
// 0x001C (0x001C - 0x0000)
struct GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB) == 0x000004, "Wrong alignment on GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB");
static_assert(sizeof(GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB) == 0x00001C, "Wrong size on GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB");
static_assert(offsetof(GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB, TargetData) == 0x000000, "Member 'GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB, ApplicationTag) == 0x000014, "Member 'GA_Generic_BotTurret_C_Cancelled_3A74E5BE4F4D85991B8887A89A2350CB::ApplicationTag' has a wrong offset!");

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.Completed_3A74E5BE4F4D85991B8887A89A2350CB
// 0x001C (0x001C - 0x0000)
struct GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB) == 0x000004, "Wrong alignment on GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB");
static_assert(sizeof(GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB) == 0x00001C, "Wrong size on GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB");
static_assert(offsetof(GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB, TargetData) == 0x000000, "Member 'GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB, ApplicationTag) == 0x000014, "Member 'GA_Generic_BotTurret_C_Completed_3A74E5BE4F4D85991B8887A89A2350CB::ApplicationTag' has a wrong offset!");

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.SetUpBot
// 0x0050 (0x0050 - 0x0000)
struct GA_Generic_BotTurret_C_SetUpBot final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                SpawnLocation;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               SpawnRotation;                                     // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 BGATurret;                                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetDefaultTargetingRotation_ReturnValue;  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAimLocationNearestPawn_ReturnValue;    // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Generic_BotTurret_C_SetUpBot) == 0x000004, "Wrong alignment on GA_Generic_BotTurret_C_SetUpBot");
static_assert(sizeof(GA_Generic_BotTurret_C_SetUpBot) == 0x000050, "Wrong size on GA_Generic_BotTurret_C_SetUpBot");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, PlayerPawn) == 0x000000, "Member 'GA_Generic_BotTurret_C_SetUpBot::PlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, SpawnLocation) == 0x000004, "Member 'GA_Generic_BotTurret_C_SetUpBot::SpawnLocation' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, SpawnRotation) == 0x000010, "Member 'GA_Generic_BotTurret_C_SetUpBot::SpawnRotation' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, BGATurret) == 0x00001C, "Member 'GA_Generic_BotTurret_C_SetUpBot::BGATurret' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, CallFunc_GetDefaultTargetingRotation_ReturnValue) == 0x000020, "Member 'GA_Generic_BotTurret_C_SetUpBot::CallFunc_GetDefaultTargetingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, CallFunc_GetAimLocationNearestPawn_ReturnValue) == 0x00002C, "Member 'GA_Generic_BotTurret_C_SetUpBot::CallFunc_GetAimLocationNearestPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'GA_Generic_BotTurret_C_SetUpBot::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'GA_Generic_BotTurret_C_SetUpBot::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'GA_Generic_BotTurret_C_SetUpBot::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetUpBot, CallFunc_MakeRotator_ReturnValue) == 0x000044, "Member 'GA_Generic_BotTurret_C_SetUpBot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.SetLevelUpgrades
// 0x0014 (0x0014 - 0x0000)
struct GA_Generic_BotTurret_C_SetLevelUpgrades final
{
public:
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Generic_BotTurret_C_SetLevelUpgrades) == 0x000004, "Wrong alignment on GA_Generic_BotTurret_C_SetLevelUpgrades");
static_assert(sizeof(GA_Generic_BotTurret_C_SetLevelUpgrades) == 0x000014, "Wrong size on GA_Generic_BotTurret_C_SetLevelUpgrades");
static_assert(offsetof(GA_Generic_BotTurret_C_SetLevelUpgrades, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000000, "Member 'GA_Generic_BotTurret_C_SetLevelUpgrades::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetLevelUpgrades, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000004, "Member 'GA_Generic_BotTurret_C_SetLevelUpgrades::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetLevelUpgrades, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'GA_Generic_BotTurret_C_SetLevelUpgrades::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetLevelUpgrades, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'GA_Generic_BotTurret_C_SetLevelUpgrades::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_SetLevelUpgrades, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'GA_Generic_BotTurret_C_SetLevelUpgrades::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function GA_Generic_BotTurret.GA_Generic_BotTurret_C.ApplyStatScaling
// 0x0050 (0x0050 - 0x0000)
struct GA_Generic_BotTurret_C_ApplyStatScaling final
{
public:
	class AB_BGA_BotTurret_C*                     BotReference;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0004(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0020(0x000C)()
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEffectSpecHandle              CallFunc_AssignSetByCallerMagnitude_ReturnValue;   // 0x0034(0x000C)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0040(0x000C)(ZeroConstructor, ReferenceParm)
	float                                         LocalDamageBoost;                                  // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Generic_BotTurret_C_ApplyStatScaling) == 0x000004, "Wrong alignment on GA_Generic_BotTurret_C_ApplyStatScaling");
static_assert(sizeof(GA_Generic_BotTurret_C_ApplyStatScaling) == 0x000050, "Wrong size on GA_Generic_BotTurret_C_ApplyStatScaling");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, BotReference) == 0x000000, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::BotReference' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000004, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x00001C, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000020, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x00002C, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_AssignSetByCallerMagnitude_ReturnValue) == 0x000034, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_AssignSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000040, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Generic_BotTurret_C_ApplyStatScaling, LocalDamageBoost) == 0x00004C, "Member 'GA_Generic_BotTurret_C_ApplyStatScaling::LocalDamageBoost' has a wrong offset!");

}

#pragma pack(pop)
