#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Generic_SlowField

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Generic_SlowField.GA_Generic_SlowField_C
// 0x0114 (0x07F0 - 0x06DC)
class UGA_Generic_SlowField_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06DC(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     Event_Data;                                        // 0x06E0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        Fort_Player_Pawn;                                  // 0x0738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           Event_Activate;                                    // 0x073C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortGameplayAbilityMontageInfo        Montage;                                           // 0x0744(0x0044)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 SlowFieldClass;                                    // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         InitialSpeed;                                      // 0x078C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Radius;                                            // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             ThrowSound;                                        // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           Event_Complete;                                    // 0x0798(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayAttribute                     MartialArtsAcademySubBuilding3;                    // 0x07A0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Radius_Lv1;                                        // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Radius_Lv2;                                        // 0x07A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Radius_Lv3;                                        // 0x07AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Radius_Lv4;                                        // 0x07B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Radius_Lv5;                                        // 0x07B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Height;                                            // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DefaultHeight;                                     // 0x07BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Duration;                                          // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Duration_Lv1;                                      // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Duration_Lv2;                                      // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Duration_Lv3;                                      // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Duration_Lv4;                                      // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Duration_Lv5;                                      // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Activation_Time;                                   // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationTime_Lv1;                                // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationTime_Lv2;                                // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationTime_Lv3;                                // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationTime_Lv4;                                // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationTime_Lv5;                                // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Generic_SlowField(int32 EntryPoint);
	void K2_ActivateAbility();
	void Triggered_A2F5E033421F17DEA0CEC299A791A6C9(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_A2F5E033421F17DEA0CEC299A791A6C9(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_A2F5E033421F17DEA0CEC299A791A6C9(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void SpawnSlowField();
	void SetVariable_Upgrades();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Generic_SlowField_C">();
	}
	static class UGA_Generic_SlowField_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Generic_SlowField_C>();
	}
};
static_assert(alignof(UGA_Generic_SlowField_C) == 0x000004, "Wrong alignment on UGA_Generic_SlowField_C");
static_assert(sizeof(UGA_Generic_SlowField_C) == 0x0007F0, "Wrong size on UGA_Generic_SlowField_C");
static_assert(offsetof(UGA_Generic_SlowField_C, UberGraphFrame) == 0x0006DC, "Member 'UGA_Generic_SlowField_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Event_Data) == 0x0006E0, "Member 'UGA_Generic_SlowField_C::Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Fort_Player_Pawn) == 0x000738, "Member 'UGA_Generic_SlowField_C::Fort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Event_Activate) == 0x00073C, "Member 'UGA_Generic_SlowField_C::Event_Activate' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Montage) == 0x000744, "Member 'UGA_Generic_SlowField_C::Montage' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, SlowFieldClass) == 0x000788, "Member 'UGA_Generic_SlowField_C::SlowFieldClass' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, InitialSpeed) == 0x00078C, "Member 'UGA_Generic_SlowField_C::InitialSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Radius) == 0x000790, "Member 'UGA_Generic_SlowField_C::Radius' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, ThrowSound) == 0x000794, "Member 'UGA_Generic_SlowField_C::ThrowSound' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Event_Complete) == 0x000798, "Member 'UGA_Generic_SlowField_C::Event_Complete' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, MartialArtsAcademySubBuilding3) == 0x0007A0, "Member 'UGA_Generic_SlowField_C::MartialArtsAcademySubBuilding3' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Radius_Lv1) == 0x0007A4, "Member 'UGA_Generic_SlowField_C::Radius_Lv1' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Radius_Lv2) == 0x0007A8, "Member 'UGA_Generic_SlowField_C::Radius_Lv2' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Radius_Lv3) == 0x0007AC, "Member 'UGA_Generic_SlowField_C::Radius_Lv3' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Radius_Lv4) == 0x0007B0, "Member 'UGA_Generic_SlowField_C::Radius_Lv4' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Radius_Lv5) == 0x0007B4, "Member 'UGA_Generic_SlowField_C::Radius_Lv5' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Height) == 0x0007B8, "Member 'UGA_Generic_SlowField_C::Height' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, DefaultHeight) == 0x0007BC, "Member 'UGA_Generic_SlowField_C::DefaultHeight' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Duration) == 0x0007C0, "Member 'UGA_Generic_SlowField_C::Duration' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Duration_Lv1) == 0x0007C4, "Member 'UGA_Generic_SlowField_C::Duration_Lv1' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Duration_Lv2) == 0x0007C8, "Member 'UGA_Generic_SlowField_C::Duration_Lv2' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Duration_Lv3) == 0x0007CC, "Member 'UGA_Generic_SlowField_C::Duration_Lv3' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Duration_Lv4) == 0x0007D0, "Member 'UGA_Generic_SlowField_C::Duration_Lv4' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Duration_Lv5) == 0x0007D4, "Member 'UGA_Generic_SlowField_C::Duration_Lv5' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, Activation_Time) == 0x0007D8, "Member 'UGA_Generic_SlowField_C::Activation_Time' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, ActivationTime_Lv1) == 0x0007DC, "Member 'UGA_Generic_SlowField_C::ActivationTime_Lv1' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, ActivationTime_Lv2) == 0x0007E0, "Member 'UGA_Generic_SlowField_C::ActivationTime_Lv2' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, ActivationTime_Lv3) == 0x0007E4, "Member 'UGA_Generic_SlowField_C::ActivationTime_Lv3' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, ActivationTime_Lv4) == 0x0007E8, "Member 'UGA_Generic_SlowField_C::ActivationTime_Lv4' has a wrong offset!");
static_assert(offsetof(UGA_Generic_SlowField_C, ActivationTime_Lv5) == 0x0007EC, "Member 'UGA_Generic_SlowField_C::ActivationTime_Lv5' has a wrong offset!");

}

#pragma pack(pop)
