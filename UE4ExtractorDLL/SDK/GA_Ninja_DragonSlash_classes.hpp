#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_DragonSlash

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C
// 0x0164 (0x0840 - 0x06DC)
class UGA_Ninja_DragonSlash_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06DC(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x06E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   SavedCollision;                                    // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_DragonSlashDamage;                              // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayEventData                     EventData;                                         // 0x06F4(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APlayerPawn_Ninja_C*                    NinjaPawn;                                         // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAnimMontage*                           M_DragonSlash;                                     // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DragonSlashAnimDistance;                           // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventComplete;                                     // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventActivateShadowStance;                         // 0x0760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_ZenGardens;                                     // 0x0768(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_ReturnOfTheDragon;                              // 0x0780(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_ReturnOfTheDragonSnare;                         // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 PawnActors;                                        // 0x079C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_ShroudOfTheDragon;                              // 0x07A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_BreathOfTheDragon;                              // 0x07B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DefaultDragonSlashSize;                            // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         UpgradeDragonSlashSize;                            // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DragonSlashDistance;                               // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 TrailAOEClass;                                     // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DragonSlashAnimDuration;                           // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         AreaOfEffectCount;                                 // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableDamageTrail;                                // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9[0x3];                                      // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DragonSlashMovementStartTime;                      // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LastAOELocation;                                   // 0x07F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         AOEDistance;                                       // 0x07FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_TailOfTheDragon;                                // 0x0800(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_WingsOfTheDragon;                               // 0x0818(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EndedTailProperly;                                 // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         HitActors;                                         // 0x0834(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Ninja_DragonSlash(int32 EntryPoint);
	void TrySpawnAOETrail();
	void BeginAOETrail();
	void OverlapActors(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void K2_OnEndAbility();
	void K2_ActivateAbility();
	void OnFinish_5E00AB5343CB83D80843BE94EC51F21E();
	void OnFinish_9B08D05C4E0F86CA462DDE9A829D7C13();
	void Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void ApplyDamageToTarget(class AActor* Hit_Actor, class APlayerPawn_Ninja_C* Ninja_Pawn);
	void SetupAbility();
	void SetupCollision(class APlayerPawn_Ninja_C* Ninja_Pawn);
	void SetWeaponVisibility(bool Ability_Active);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_DragonSlash_C">();
	}
	static class UGA_Ninja_DragonSlash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_DragonSlash_C>();
	}
};
static_assert(alignof(UGA_Ninja_DragonSlash_C) == 0x000004, "Wrong alignment on UGA_Ninja_DragonSlash_C");
static_assert(sizeof(UGA_Ninja_DragonSlash_C) == 0x000840, "Wrong size on UGA_Ninja_DragonSlash_C");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, UberGraphFrame) == 0x0006DC, "Member 'UGA_Ninja_DragonSlash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, EventActivation) == 0x0006E0, "Member 'UGA_Ninja_DragonSlash_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, SavedCollision) == 0x0006E8, "Member 'UGA_Ninja_DragonSlash_C::SavedCollision' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, GE_DragonSlashDamage) == 0x0006F0, "Member 'UGA_Ninja_DragonSlash_C::GE_DragonSlashDamage' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, EventData) == 0x0006F4, "Member 'UGA_Ninja_DragonSlash_C::EventData' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, NinjaPawn) == 0x00074C, "Member 'UGA_Ninja_DragonSlash_C::NinjaPawn' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, M_DragonSlash) == 0x000750, "Member 'UGA_Ninja_DragonSlash_C::M_DragonSlash' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, DragonSlashAnimDistance) == 0x000754, "Member 'UGA_Ninja_DragonSlash_C::DragonSlashAnimDistance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, EventComplete) == 0x000758, "Member 'UGA_Ninja_DragonSlash_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, EventActivateShadowStance) == 0x000760, "Member 'UGA_Ninja_DragonSlash_C::EventActivateShadowStance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TC_ZenGardens) == 0x000768, "Member 'UGA_Ninja_DragonSlash_C::TC_ZenGardens' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TC_ReturnOfTheDragon) == 0x000780, "Member 'UGA_Ninja_DragonSlash_C::TC_ReturnOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, GE_ReturnOfTheDragonSnare) == 0x000798, "Member 'UGA_Ninja_DragonSlash_C::GE_ReturnOfTheDragonSnare' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, PawnActors) == 0x00079C, "Member 'UGA_Ninja_DragonSlash_C::PawnActors' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TC_ShroudOfTheDragon) == 0x0007A0, "Member 'UGA_Ninja_DragonSlash_C::TC_ShroudOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TC_BreathOfTheDragon) == 0x0007B8, "Member 'UGA_Ninja_DragonSlash_C::TC_BreathOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, DefaultDragonSlashSize) == 0x0007D0, "Member 'UGA_Ninja_DragonSlash_C::DefaultDragonSlashSize' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, UpgradeDragonSlashSize) == 0x0007D4, "Member 'UGA_Ninja_DragonSlash_C::UpgradeDragonSlashSize' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, DragonSlashDistance) == 0x0007D8, "Member 'UGA_Ninja_DragonSlash_C::DragonSlashDistance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TrailAOEClass) == 0x0007DC, "Member 'UGA_Ninja_DragonSlash_C::TrailAOEClass' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, DragonSlashAnimDuration) == 0x0007E0, "Member 'UGA_Ninja_DragonSlash_C::DragonSlashAnimDuration' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, AreaOfEffectCount) == 0x0007E4, "Member 'UGA_Ninja_DragonSlash_C::AreaOfEffectCount' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, bEnableDamageTrail) == 0x0007E8, "Member 'UGA_Ninja_DragonSlash_C::bEnableDamageTrail' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, DragonSlashMovementStartTime) == 0x0007EC, "Member 'UGA_Ninja_DragonSlash_C::DragonSlashMovementStartTime' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, LastAOELocation) == 0x0007F0, "Member 'UGA_Ninja_DragonSlash_C::LastAOELocation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, AOEDistance) == 0x0007FC, "Member 'UGA_Ninja_DragonSlash_C::AOEDistance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TC_TailOfTheDragon) == 0x000800, "Member 'UGA_Ninja_DragonSlash_C::TC_TailOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, TC_WingsOfTheDragon) == 0x000818, "Member 'UGA_Ninja_DragonSlash_C::TC_WingsOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, EndedTailProperly) == 0x000830, "Member 'UGA_Ninja_DragonSlash_C::EndedTailProperly' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_DragonSlash_C, HitActors) == 0x000834, "Member 'UGA_Ninja_DragonSlash_C::HitActors' has a wrong offset!");

}

#pragma pack(pop)
