#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_DragonSlash

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.ExecuteUbergraph_GA_Ninja_DragonSlash
// 0x02D8 (0x02D8 - 0x0000)
struct GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0018(0x0008)()
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0020(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0034(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x004C(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0054(0x0014)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable2;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x00B8(0x0080)(ConstParm, ContainsInstancedReference)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue3;                // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput; // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue2;  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue; // 0x0158(0x0064)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate5;             // 0x01E4(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue2;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortAreaOfEffectCloud*                 CallFunc_SpawnAreaOfEffectCloud_ReturnValue;       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AAOE_Ninja_DragonSlashTrail_C*          K2Node_DynamicCast_AsAOE_Ninja_Dragon_Slash_Trail; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0284(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0298(0x0008)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate6;             // 0x02A4(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput; // 0x02B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue3;  // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface4_CastInput; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue4;  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0x1];                                      // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash");
static_assert(sizeof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash) == 0x0002D8, "Wrong size on GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, EntryPoint) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_TargetData3) == 0x000004, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_ApplicationTag3) == 0x000018, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_TargetData) == 0x000020, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_ApplicationTag) == 0x000034, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, Temp_struct_Variable) == 0x00004C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, Temp_struct_Variable2) == 0x000054, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CreateDelegate_OutputDelegate3) == 0x000078, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, Temp_bool_Variable) == 0x000088, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, Temp_float_Variable) == 0x00008C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, Temp_float_Variable2) == 0x000090, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CreateDelegate_OutputDelegate4) == 0x000094, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000A4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAuthority_ReturnValue) == 0x0000A5, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_OtherActor) == 0x0000A8, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_OtherComp) == 0x0000AC, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_OtherBodyIndex) == 0x0000B0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_bFromSweep) == 0x0000B4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_SweepResult) == 0x0000B8, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_DynamicCast_AsFort_Pawn) == 0x000138, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_DynamicCast_bSuccess) == 0x00013C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00013D, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAuthority_ReturnValue2) == 0x00013E, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAuthority_ReturnValue3) == 0x00013F, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAuthority_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000140, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000148, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput) == 0x00014C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_ReturnValue2) == 0x000154, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue) == 0x000158, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001BC, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x0001C0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001C4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Add_IntInt_ReturnValue) == 0x0001E0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CreateDelegate_OutputDelegate5) == 0x0001E4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_WaitDelay_ReturnValue) == 0x0001F4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x0001F8, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_IsValid_ReturnValue2) == 0x0001FC, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000200, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00020C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000210, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_VSizeSquared_ReturnValue) == 0x00021C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000220, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000224, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_WaitDelay_ReturnValue2) == 0x000228, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_WaitDelay_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_IsValid_ReturnValue3) == 0x00022C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000230, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Normal_ReturnValue) == 0x00023C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000248, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Add_VectorVector_ReturnValue) == 0x000254, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_SpawnAreaOfEffectCloud_ReturnValue) == 0x000260, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_SpawnAreaOfEffectCloud_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_DynamicCast_AsAOE_Ninja_Dragon_Slash_Trail) == 0x000264, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_DynamicCast_AsAOE_Ninja_Dragon_Slash_Trail' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_DynamicCast_bSuccess2) == 0x000268, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x00026C, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Round_ReturnValue) == 0x000270, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x000278, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_TargetData2) == 0x000284, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CustomEvent_ApplicationTag2) == 0x000298, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0002A0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_CreateDelegate_OutputDelegate6) == 0x0002A4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput) == 0x0002B4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_ReturnValue3) == 0x0002BC, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface4_CastInput) == 0x0002C0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface4_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_HasAllMatchingGameplayTags_ReturnValue4) == 0x0002C8, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_HasAllMatchingGameplayTags_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, K2Node_Select_Default) == 0x0002CC, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Not_PreBool_ReturnValue) == 0x0002D0, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_BooleanAND_ReturnValue) == 0x0002D1, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Array_Contains_ReturnValue) == 0x0002D2, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash, CallFunc_Array_Add_ReturnValue) == 0x0002D4, "Member 'GA_Ninja_DragonSlash_C_ExecuteUbergraph_GA_Ninja_DragonSlash::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.OverlapActors
// 0x0090 (0x0090 - 0x0000)
struct GA_Ninja_DragonSlash_C_OverlapActors final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         OtherBodyIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromSweep;                                        // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0010(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_OverlapActors) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_OverlapActors");
static_assert(sizeof(GA_Ninja_DragonSlash_C_OverlapActors) == 0x000090, "Wrong size on GA_Ninja_DragonSlash_C_OverlapActors");
static_assert(offsetof(GA_Ninja_DragonSlash_C_OverlapActors, OtherActor) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_OverlapActors::OtherActor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_OverlapActors, OtherComp) == 0x000004, "Member 'GA_Ninja_DragonSlash_C_OverlapActors::OtherComp' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_OverlapActors, OtherBodyIndex) == 0x000008, "Member 'GA_Ninja_DragonSlash_C_OverlapActors::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_OverlapActors, bFromSweep) == 0x00000C, "Member 'GA_Ninja_DragonSlash_C_OverlapActors::bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_OverlapActors, SweepResult) == 0x000010, "Member 'GA_Ninja_DragonSlash_C_OverlapActors::SweepResult' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A");
static_assert(sizeof(GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A) == 0x00001C, "Wrong size on GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A");
static_assert(offsetof(GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A, TargetData) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A, ApplicationTag) == 0x000014, "Member 'GA_Ninja_DragonSlash_C_Triggered_28380CAC46B6057F2BF9DFAD8C7B8F2A::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A");
static_assert(sizeof(GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A) == 0x00001C, "Wrong size on GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A");
static_assert(offsetof(GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A, TargetData) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A, ApplicationTag) == 0x000014, "Member 'GA_Ninja_DragonSlash_C_Cancelled_28380CAC46B6057F2BF9DFAD8C7B8F2A::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A");
static_assert(sizeof(GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A) == 0x00001C, "Wrong size on GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A");
static_assert(offsetof(GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A, TargetData) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A, ApplicationTag) == 0x000014, "Member 'GA_Ninja_DragonSlash_C_Completed_28380CAC46B6057F2BF9DFAD8C7B8F2A::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.ApplyDamageToTarget
// 0x0030 (0x0030 - 0x0000)
struct GA_Ninja_DragonSlash_C_ApplyDamageToTarget final
{
public:
	class AActor*                                 Hit_Actor;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerPawn_Ninja_C*                    Ninja_Pawn;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x000C(0x0014)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0024(0x000C)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_ApplyDamageToTarget");
static_assert(sizeof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget) == 0x000030, "Wrong size on GA_Ninja_DragonSlash_C_ApplyDamageToTarget");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget, Hit_Actor) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_ApplyDamageToTarget::Hit_Actor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget, Ninja_Pawn) == 0x000004, "Member 'GA_Ninja_DragonSlash_C_ApplyDamageToTarget::Ninja_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget, CallFunc_GetTeamAffiliation_ReturnValue) == 0x000008, "Member 'GA_Ninja_DragonSlash_C_ApplyDamageToTarget::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x00000C, "Member 'GA_Ninja_DragonSlash_C_ApplyDamageToTarget::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'GA_Ninja_DragonSlash_C_ApplyDamageToTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_ApplyDamageToTarget, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000024, "Member 'GA_Ninja_DragonSlash_C_ApplyDamageToTarget::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.SetupAbility
// 0x00C8 (0x00C8 - 0x0000)
struct GA_Ninja_DragonSlash_C_SetupAbility final
{
public:
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0000(0x0034)(ContainsInstancedReference)
	class APlayerPawn_Ninja_C*                    K2Node_DynamicCast_AsPlayer_Pawn_Ninja;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x003C(0x0058)()
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0094(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00A8(0x000C)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_SetupAbility) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_SetupAbility");
static_assert(sizeof(GA_Ninja_DragonSlash_C_SetupAbility) == 0x0000C8, "Wrong size on GA_Ninja_DragonSlash_C_SetupAbility");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, CallFunc_GetActorInfo_ReturnValue) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, K2Node_DynamicCast_AsPlayer_Pawn_Ninja) == 0x000034, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::K2Node_DynamicCast_AsPlayer_Pawn_Ninja' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, K2Node_MakeStruct_GameplayEventData) == 0x00003C, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000094, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000A8, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B4, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, CallFunc_GetPlayLength_ReturnValue) == 0x0000C0, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupAbility, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000C4, "Member 'GA_Ninja_DragonSlash_C_SetupAbility::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.SetupCollision
// 0x000C (0x000C - 0x0000)
struct GA_Ninja_DragonSlash_C_SetupCollision final
{
public:
	class APlayerPawn_Ninja_C*                    Ninja_Pawn;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_SetupCollision) == 0x000004, "Wrong alignment on GA_Ninja_DragonSlash_C_SetupCollision");
static_assert(sizeof(GA_Ninja_DragonSlash_C_SetupCollision) == 0x00000C, "Wrong size on GA_Ninja_DragonSlash_C_SetupCollision");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupCollision, Ninja_Pawn) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_SetupCollision::Ninja_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetupCollision, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000004, "Member 'GA_Ninja_DragonSlash_C_SetupCollision::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");

// Function GA_Ninja_DragonSlash.GA_Ninja_DragonSlash_C.SetWeaponVisibility
// 0x0001 (0x0001 - 0x0000)
struct GA_Ninja_DragonSlash_C_SetWeaponVisibility final
{
public:
	bool                                          Ability_Active;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_DragonSlash_C_SetWeaponVisibility) == 0x000001, "Wrong alignment on GA_Ninja_DragonSlash_C_SetWeaponVisibility");
static_assert(sizeof(GA_Ninja_DragonSlash_C_SetWeaponVisibility) == 0x000001, "Wrong size on GA_Ninja_DragonSlash_C_SetWeaponVisibility");
static_assert(offsetof(GA_Ninja_DragonSlash_C_SetWeaponVisibility, Ability_Active) == 0x000000, "Member 'GA_Ninja_DragonSlash_C_SetWeaponVisibility::Ability_Active' has a wrong offset!");

}

#pragma pack(pop)
