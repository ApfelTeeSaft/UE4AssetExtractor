#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_PoisonedBlade

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_PoisonedBlade.GA_Ninja_PoisonedBlade_C
// 0x00FC (0x07D8 - 0x06DC)
class UGA_Ninja_PoisonedBlade_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06DC(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     PayloadData;                                       // 0x06E0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_PoisonedBladeDOT;                               // 0x0738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_EdgedDamage;                                    // 0x073C(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_IsWeapon;                                       // 0x0754(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     EventData;                                         // 0x076C(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APlayerPawn_Ninja_C*                    NinjaPawn;                                         // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventActivation;                                   // 0x07C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventComplete;                                     // 0x07D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Ninja_PoisonedBlade(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData_0);
	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_PoisonedBlade_C">();
	}
	static class UGA_Ninja_PoisonedBlade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_PoisonedBlade_C>();
	}
};
static_assert(alignof(UGA_Ninja_PoisonedBlade_C) == 0x000004, "Wrong alignment on UGA_Ninja_PoisonedBlade_C");
static_assert(sizeof(UGA_Ninja_PoisonedBlade_C) == 0x0007D8, "Wrong size on UGA_Ninja_PoisonedBlade_C");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, UberGraphFrame) == 0x0006DC, "Member 'UGA_Ninja_PoisonedBlade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, PayloadData) == 0x0006E0, "Member 'UGA_Ninja_PoisonedBlade_C::PayloadData' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, GE_PoisonedBladeDOT) == 0x000738, "Member 'UGA_Ninja_PoisonedBlade_C::GE_PoisonedBladeDOT' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, TC_EdgedDamage) == 0x00073C, "Member 'UGA_Ninja_PoisonedBlade_C::TC_EdgedDamage' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, TC_IsWeapon) == 0x000754, "Member 'UGA_Ninja_PoisonedBlade_C::TC_IsWeapon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, EventData) == 0x00076C, "Member 'UGA_Ninja_PoisonedBlade_C::EventData' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, NinjaPawn) == 0x0007C4, "Member 'UGA_Ninja_PoisonedBlade_C::NinjaPawn' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, EventActivation) == 0x0007C8, "Member 'UGA_Ninja_PoisonedBlade_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_PoisonedBlade_C, EventComplete) == 0x0007D0, "Member 'UGA_Ninja_PoisonedBlade_C::EventComplete' has a wrong offset!");

}

#pragma pack(pop)
