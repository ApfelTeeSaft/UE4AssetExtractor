#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_ShadowStance

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Ninja_ShadowStance.GA_Ninja_ShadowStance_C.ExecuteUbergraph_GA_Ninja_ShadowStance
// 0x0118 (0x0118 - 0x0000)
struct GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0004(0x0058)(ConstParm)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x005C(0x0034)(ContainsInstancedReference)
	class APlayerPawn_Ninja_C*                    K2Node_DynamicCast_AsPlayer_Pawn_Ninja;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0098(0x0058)()
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00F0(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0104(0x000C)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0114(0x0004)()
};
static_assert(alignof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance) == 0x000004, "Wrong alignment on GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance");
static_assert(sizeof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance) == 0x000118, "Wrong size on GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, EntryPoint) == 0x000000, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, K2Node_Event_EventData) == 0x000004, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, CallFunc_GetActorInfo_ReturnValue) == 0x00005C, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, K2Node_DynamicCast_AsPlayer_Pawn_Ninja) == 0x000090, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::K2Node_DynamicCast_AsPlayer_Pawn_Ninja' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, K2Node_DynamicCast_bSuccess) == 0x000094, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, K2Node_MakeStruct_GameplayEventData) == 0x000098, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000F0, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000104, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, CallFunc_K2_CommitAbility_ReturnValue) == 0x000110, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000114, "Member 'GA_Ninja_ShadowStance_C_ExecuteUbergraph_GA_Ninja_ShadowStance::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Ninja_ShadowStance.GA_Ninja_ShadowStance_C.K2_ActivateAbilityFromEvent
// 0x0058 (0x0058 - 0x0000)
struct GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent) == 0x000004, "Wrong alignment on GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent) == 0x000058, "Wrong size on GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Ninja_ShadowStance_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Ninja_ShadowStance.GA_Ninja_ShadowStance_C.K2_ShouldAbilityRespondToEvent
// 0x0098 (0x0098 - 0x0000)
struct GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0034)(Parm, ContainsInstancedReference)
	struct FGameplayEventData                     Payload;                                           // 0x0034(0x0058)(Parm)
	bool                                          ReturnValue;                                       // 0x008C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesContainerMatchAllTagsInContainer_ReturnValue; // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesContainerHaveTag_ReturnValue;         // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldActivate;                                    // 0x0096(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent) == 0x000004, "Wrong alignment on GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent");
static_assert(sizeof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent) == 0x000098, "Wrong size on GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, ActorInfo) == 0x000000, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, Payload) == 0x000034, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, ReturnValue) == 0x00008C, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, CallFunc_DoesContainerMatchAllTagsInContainer_ReturnValue) == 0x00008D, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::CallFunc_DoesContainerMatchAllTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_AsFort_Pawn) == 0x000090, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x000094, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, CallFunc_DoesContainerHaveTag_ReturnValue) == 0x000095, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::CallFunc_DoesContainerHaveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent, ShouldActivate) == 0x000096, "Member 'GA_Ninja_ShadowStance_C_K2_ShouldAbilityRespondToEvent::ShouldActivate' has a wrong offset!");

}

#pragma pack(pop)
