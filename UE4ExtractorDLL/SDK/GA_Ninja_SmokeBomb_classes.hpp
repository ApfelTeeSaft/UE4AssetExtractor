#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_SmokeBomb

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GAT_NinjaActiveAbility_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C
// 0x0128 (0x0868 - 0x0740)
class UGA_Ninja_SmokeBomb_C final : public UGAT_NinjaActiveAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Ninja_SmokeBomb_C;               // 0x0740(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          CanExecute;                                        // 0x0744(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 P_SmokeBomb;                                       // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Position_Offset;                                   // 0x074C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventActivation;                                   // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventComplete;                                     // 0x0760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventRunSpeed;                                     // 0x0768(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     EventData;                                         // 0x0770(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_FireAndSmoke;                                   // 0x07C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventEnterShadowStance;                            // 0x07E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_ImpactVisuals;                                  // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           GC_RunTrails;                                      // 0x07EC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_CloudPersist;                                   // 0x07F4(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 AOE_CloudPersist;                                  // 0x080C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ExplosionLocation;                                 // 0x0810(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EC_PersistCloud;                                   // 0x081C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayAttribute                     ATT_GunpowderFoundry;                              // 0x0824(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ProjectileThrown;                                  // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTriggered;                                       // 0x0829(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A[0x2];                                      // 0x082A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BombSpeed;                                         // 0x082C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_InAir;                                          // 0x0830(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_NinjaTrainingV;                                 // 0x0848(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DefaultDuration;                                   // 0x0860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         UpgradeDuration;                                   // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Ninja_SmokeBomb(int32 EntryPoint);
	void K2_ActivateAbility();
	void Created_4C7C12404F5C962CA59DD49973166CB9(const struct FProjectileEventData& ProjectileData);
	void Touched_4C7C12404F5C962CA59DD49973166CB9(const struct FProjectileEventData& ProjectileData);
	void Bounced_4C7C12404F5C962CA59DD49973166CB9(const struct FProjectileEventData& ProjectileData);
	void Stopped_4C7C12404F5C962CA59DD49973166CB9(const struct FProjectileEventData& ProjectileData);
	void Exploded_4C7C12404F5C962CA59DD49973166CB9(const struct FProjectileEventData& ProjectileData);
	void Destroyed_4C7C12404F5C962CA59DD49973166CB9(const struct FProjectileEventData& ProjectileData);
	void Triggered_3644944049E84BE80D314DBC53F664CB(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_3644944049E84BE80D314DBC53F664CB(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_3644944049E84BE80D314DBC53F664CB(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void ThrowSmokeBomb(class APlayerPawn_Ninja_C** Requestor, struct FVector* Location, struct FRotator* Rotation, struct FFortGameplayEffectContainerSpec* EffectSpec);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_SmokeBomb_C">();
	}
	static class UGA_Ninja_SmokeBomb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_SmokeBomb_C>();
	}
};
static_assert(alignof(UGA_Ninja_SmokeBomb_C) == 0x000004, "Wrong alignment on UGA_Ninja_SmokeBomb_C");
static_assert(sizeof(UGA_Ninja_SmokeBomb_C) == 0x000868, "Wrong size on UGA_Ninja_SmokeBomb_C");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, UberGraphFrame_GA_Ninja_SmokeBomb_C) == 0x000740, "Member 'UGA_Ninja_SmokeBomb_C::UberGraphFrame_GA_Ninja_SmokeBomb_C' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, CanExecute) == 0x000744, "Member 'UGA_Ninja_SmokeBomb_C::CanExecute' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, P_SmokeBomb) == 0x000748, "Member 'UGA_Ninja_SmokeBomb_C::P_SmokeBomb' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, Position_Offset) == 0x00074C, "Member 'UGA_Ninja_SmokeBomb_C::Position_Offset' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, EventActivation) == 0x000758, "Member 'UGA_Ninja_SmokeBomb_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, EventComplete) == 0x000760, "Member 'UGA_Ninja_SmokeBomb_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, EventRunSpeed) == 0x000768, "Member 'UGA_Ninja_SmokeBomb_C::EventRunSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, EventData) == 0x000770, "Member 'UGA_Ninja_SmokeBomb_C::EventData' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, TC_FireAndSmoke) == 0x0007C8, "Member 'UGA_Ninja_SmokeBomb_C::TC_FireAndSmoke' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, EventEnterShadowStance) == 0x0007E0, "Member 'UGA_Ninja_SmokeBomb_C::EventEnterShadowStance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, GE_ImpactVisuals) == 0x0007E8, "Member 'UGA_Ninja_SmokeBomb_C::GE_ImpactVisuals' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, GC_RunTrails) == 0x0007EC, "Member 'UGA_Ninja_SmokeBomb_C::GC_RunTrails' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, TC_CloudPersist) == 0x0007F4, "Member 'UGA_Ninja_SmokeBomb_C::TC_CloudPersist' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, AOE_CloudPersist) == 0x00080C, "Member 'UGA_Ninja_SmokeBomb_C::AOE_CloudPersist' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, ExplosionLocation) == 0x000810, "Member 'UGA_Ninja_SmokeBomb_C::ExplosionLocation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, EC_PersistCloud) == 0x00081C, "Member 'UGA_Ninja_SmokeBomb_C::EC_PersistCloud' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, ATT_GunpowderFoundry) == 0x000824, "Member 'UGA_Ninja_SmokeBomb_C::ATT_GunpowderFoundry' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, ProjectileThrown) == 0x000828, "Member 'UGA_Ninja_SmokeBomb_C::ProjectileThrown' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, IsTriggered) == 0x000829, "Member 'UGA_Ninja_SmokeBomb_C::IsTriggered' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, BombSpeed) == 0x00082C, "Member 'UGA_Ninja_SmokeBomb_C::BombSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, TC_InAir) == 0x000830, "Member 'UGA_Ninja_SmokeBomb_C::TC_InAir' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, TC_NinjaTrainingV) == 0x000848, "Member 'UGA_Ninja_SmokeBomb_C::TC_NinjaTrainingV' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, DefaultDuration) == 0x000860, "Member 'UGA_Ninja_SmokeBomb_C::DefaultDuration' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_SmokeBomb_C, UpgradeDuration) == 0x000864, "Member 'UGA_Ninja_SmokeBomb_C::UpgradeDuration' has a wrong offset!");

}

#pragma pack(pop)
