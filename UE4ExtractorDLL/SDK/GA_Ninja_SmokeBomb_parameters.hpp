#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_SmokeBomb

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.ExecuteUbergraph_GA_Ninja_SmokeBomb
// 0x02FC (0x02FC - 0x0000)
struct GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0018(0x0008)()
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0020(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0028(0x0014)()
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData6;                // 0x003C(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData5;                // 0x0068(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData4;                // 0x0094(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData3;                // 0x00C0(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate4;             // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData2;                // 0x00EC(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData;                 // 0x0118(0x001C)(ConstParm, ContainsInstancedReference)
	TDelegate<void(const struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   Temp_struct_Variable3;                             // 0x0144(0x001C)(ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_A_Execution_Happened_Variable;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_B_Execution_Happened_Variable;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Ninja_C*                    CallFunc_ThrowSmokeBomb_Requestor;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ThrowSmokeBomb_Location;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ThrowSmokeBomb_Rotation;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_ThrowSmokeBomb_EffectSpec;                // 0x01A0(0x0064)()
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_SpawnProjectileAndWait* CallFunc_SpawnProjectileAndWait_ReturnValue;       // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    CallFunc_BeginSpawningActor_SpawnedActor;          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue;           // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue; // 0x0218(0x0064)()
	class AFortAreaOfEffectCloud*                 CallFunc_SpawnAreaOfEffectCloud_ReturnValue;       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAOE_Ninja_SmokeBomb_Cloud_C*           K2Node_DynamicCast_AsAOE_Ninja_Smoke_Bomb_Cloud;   // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput; // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue2;  // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x02A0(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x02B4(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate8;             // 0x02BC(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x02CC(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x02E0(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate9;             // 0x02E8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb) == 0x0002FC, "Wrong size on GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, EntryPoint) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_TargetData3) == 0x000004, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ApplicationTag3) == 0x000018, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, Temp_struct_Variable) == 0x000020, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, Temp_struct_Variable2) == 0x000028, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ProjectileData6) == 0x00003C, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ProjectileData6' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ProjectileData5) == 0x000068, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ProjectileData5' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate2) == 0x000084, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ProjectileData4) == 0x000094, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ProjectileData4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate3) == 0x0000B0, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ProjectileData3) == 0x0000C0, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ProjectileData3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate4) == 0x0000DC, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ProjectileData2) == 0x0000EC, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ProjectileData2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate5) == 0x000108, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ProjectileData) == 0x000118, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ProjectileData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate6) == 0x000134, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, Temp_struct_Variable3) == 0x000144, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, Temp_bool_Variable) == 0x000160, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000164, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate7) == 0x000170, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, Temp_bool_A_Execution_Happened_Variable) == 0x000180, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::Temp_bool_A_Execution_Happened_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, Temp_bool_B_Execution_Happened_Variable) == 0x000181, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::Temp_bool_B_Execution_Happened_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_BooleanAND_ReturnValue) == 0x000182, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_ThrowSmokeBomb_Requestor) == 0x000184, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_ThrowSmokeBomb_Requestor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_ThrowSmokeBomb_Location) == 0x000188, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_ThrowSmokeBomb_Location' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_ThrowSmokeBomb_Rotation) == 0x000194, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_ThrowSmokeBomb_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_ThrowSmokeBomb_EffectSpec) == 0x0001A0, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_ThrowSmokeBomb_EffectSpec' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x000204, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_IsValid_ReturnValue) == 0x000208, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_SpawnProjectileAndWait_ReturnValue) == 0x00020C, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_SpawnProjectileAndWait_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_BeginSpawningActor_SpawnedActor) == 0x000210, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_BeginSpawningActor_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_BeginSpawningActor_ReturnValue) == 0x000214, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_BeginSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_IsValid_ReturnValue2) == 0x000215, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue) == 0x000218, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_SpawnAreaOfEffectCloud_ReturnValue) == 0x00027C, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_SpawnAreaOfEffectCloud_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000280, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000288, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_DynamicCast_AsAOE_Ninja_Smoke_Bomb_Cloud) == 0x00028C, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_DynamicCast_AsAOE_Ninja_Smoke_Bomb_Cloud' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput) == 0x000294, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, CallFunc_HasAllMatchingGameplayTags_ReturnValue2) == 0x00029C, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::CallFunc_HasAllMatchingGameplayTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_TargetData) == 0x0002A0, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ApplicationTag) == 0x0002B4, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate8) == 0x0002BC, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_TargetData2) == 0x0002CC, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CustomEvent_ApplicationTag2) == 0x0002E0, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_CreateDelegate_OutputDelegate9) == 0x0002E8, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb, K2Node_Select_Default) == 0x0002F8, "Member 'GA_Ninja_SmokeBomb_C_ExecuteUbergraph_GA_Ninja_SmokeBomb::K2Node_Select_Default' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Created_4C7C12404F5C962CA59DD49973166CB9
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9, ProjectileData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Created_4C7C12404F5C962CA59DD49973166CB9::ProjectileData' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Touched_4C7C12404F5C962CA59DD49973166CB9
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9, ProjectileData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Touched_4C7C12404F5C962CA59DD49973166CB9::ProjectileData' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Bounced_4C7C12404F5C962CA59DD49973166CB9
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9, ProjectileData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Bounced_4C7C12404F5C962CA59DD49973166CB9::ProjectileData' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Stopped_4C7C12404F5C962CA59DD49973166CB9
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9, ProjectileData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Stopped_4C7C12404F5C962CA59DD49973166CB9::ProjectileData' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Exploded_4C7C12404F5C962CA59DD49973166CB9
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9, ProjectileData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Exploded_4C7C12404F5C962CA59DD49973166CB9::ProjectileData' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Destroyed_4C7C12404F5C962CA59DD49973166CB9
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9, ProjectileData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Destroyed_4C7C12404F5C962CA59DD49973166CB9::ProjectileData' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Triggered_3644944049E84BE80D314DBC53F664CB
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB, TargetData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB, ApplicationTag) == 0x000014, "Member 'GA_Ninja_SmokeBomb_C_Triggered_3644944049E84BE80D314DBC53F664CB::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Cancelled_3644944049E84BE80D314DBC53F664CB
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB, TargetData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB, ApplicationTag) == 0x000014, "Member 'GA_Ninja_SmokeBomb_C_Cancelled_3644944049E84BE80D314DBC53F664CB::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.Completed_3644944049E84BE80D314DBC53F664CB
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB) == 0x000004, "Wrong alignment on GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB) == 0x00001C, "Wrong size on GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB, TargetData) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB, ApplicationTag) == 0x000014, "Member 'GA_Ninja_SmokeBomb_C_Completed_3644944049E84BE80D314DBC53F664CB::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_SmokeBomb.GA_Ninja_SmokeBomb_C.ThrowSmokeBomb
// 0x0130 (0x0130 - 0x0000)
struct GA_Ninja_SmokeBomb_C_ThrowSmokeBomb final
{
public:
	class APlayerPawn_Ninja_C*                    Requestor;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Rotation;                                          // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       EffectSpec;                                        // 0x001C(0x0064)(Parm, OutParm)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetDefaultTargetingRotation_ReturnValue;  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue; // 0x00BC(0x0064)()
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb) == 0x000010, "Wrong alignment on GA_Ninja_SmokeBomb_C_ThrowSmokeBomb");
static_assert(sizeof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb) == 0x000130, "Wrong size on GA_Ninja_SmokeBomb_C_ThrowSmokeBomb");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, Requestor) == 0x000000, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::Requestor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, Location) == 0x000004, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::Location' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, Rotation) == 0x000010, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::Rotation' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, EffectSpec) == 0x00001C, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::EffectSpec' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, CallFunc_GetDefaultTargetingRotation_ReturnValue) == 0x0000B0, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::CallFunc_GetDefaultTargetingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue) == 0x0000BC, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SmokeBomb_C_ThrowSmokeBomb, CallFunc_TransformLocation_ReturnValue) == 0x000120, "Member 'GA_Ninja_SmokeBomb_C_ThrowSmokeBomb::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
