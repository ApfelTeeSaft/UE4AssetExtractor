#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_ThrowingStars

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.ExecuteUbergraph_GA_Ninja_ThrowingStars
// 0x02E4 (0x02E4 - 0x0000)
struct GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x000C(0x0014)()
	class UFortAbilityTask_WaitTargetSelection*   CallFunc_WaitTargetSelection_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0024(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData3;                    // 0x0110(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag3;                // 0x0124(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x013C(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0150(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0168(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x017C(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable3;                             // 0x0194(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable4;                             // 0x019C(0x0014)()
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData5;                    // 0x01B4(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag5;                // 0x01C8(0x0008)()
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x01D0(0x0034)(ContainsInstancedReference)
	class APlayerPawn_Ninja_C*                    K2Node_DynamicCast_AsPlayer_Pawn_Ninja;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x020C(0x0058)()
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0264(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0278(0x000C)(ZeroConstructor, ReferenceParm)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0284(0x0010)(ZeroConstructor, NoDestructor)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAimLocationNearestPawn_ReturnValue;    // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetDefaultTargetingRotation_ReturnValue;  // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData4;                    // 0x02B4(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag4;                // 0x02C8(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate5;             // 0x02D0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars) == 0x0002E4, "Wrong size on GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, EntryPoint) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, Temp_struct_Variable) == 0x000004, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, Temp_struct_Variable2) == 0x00000C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_WaitTargetSelection_ReturnValue) == 0x000020, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_WaitTargetSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000024, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A5, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_Time) == 0x0000A8, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_PhysMat) == 0x0000DC, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_HitComponent) == 0x0000E4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_TraceStart) == 0x0000F4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BreakHitResult_TraceEnd) == 0x000100, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_IsValid_ReturnValue) == 0x00010C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_TargetData3) == 0x000110, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_TargetData3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_ApplicationTag3) == 0x000124, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_ApplicationTag3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CreateDelegate_OutputDelegate) == 0x00012C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_TargetData2) == 0x00013C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_ApplicationTag2) == 0x000150, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CreateDelegate_OutputDelegate2) == 0x000158, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_TargetData) == 0x000168, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_ApplicationTag) == 0x00017C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CreateDelegate_OutputDelegate3) == 0x000184, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, Temp_struct_Variable3) == 0x000194, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, Temp_struct_Variable4) == 0x00019C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_K2_CommitAbility_ReturnValue) == 0x0001B0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_TargetData5) == 0x0001B4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_TargetData5' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_ApplicationTag5) == 0x0001C8, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_ApplicationTag5' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_GetActorInfo_ReturnValue) == 0x0001D0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_DynamicCast_AsPlayer_Pawn_Ninja) == 0x000204, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_DynamicCast_AsPlayer_Pawn_Ninja' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_MakeStruct_GameplayEventData) == 0x00020C, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000264, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000278, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CreateDelegate_OutputDelegate4) == 0x000284, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x000294, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_GetAimLocationNearestPawn_ReturnValue) == 0x000298, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_GetAimLocationNearestPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_IsValid_ReturnValue2) == 0x0002A4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_GetDefaultTargetingRotation_ReturnValue) == 0x0002A8, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_GetDefaultTargetingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_TargetData4) == 0x0002B4, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_TargetData4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CustomEvent_ApplicationTag4) == 0x0002C8, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CustomEvent_ApplicationTag4' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, K2Node_CreateDelegate_OutputDelegate5) == 0x0002D0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars, CallFunc_Add_IntInt_ReturnValue) == 0x0002E0, "Member 'GA_Ninja_ThrowingStars_C_ExecuteUbergraph_GA_Ninja_ThrowingStars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.Triggered_6FEC3EAA4C7675A1295702BBAE17678C
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C) == 0x00001C, "Wrong size on GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C, TargetData) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C, ApplicationTag) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_Triggered_6FEC3EAA4C7675A1295702BBAE17678C::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.Cancelled_6FEC3EAA4C7675A1295702BBAE17678C
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C) == 0x00001C, "Wrong size on GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C, TargetData) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C, ApplicationTag) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_Cancelled_6FEC3EAA4C7675A1295702BBAE17678C::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.Completed_6FEC3EAA4C7675A1295702BBAE17678C
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C) == 0x00001C, "Wrong size on GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C, TargetData) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C, ApplicationTag) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_Completed_6FEC3EAA4C7675A1295702BBAE17678C::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6) == 0x00001C, "Wrong size on GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6, TargetData) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6, ApplicationTag) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_Targeted_F7576E764ABBFFFBF1A6BE95A742E0A6::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6
// 0x001C (0x001C - 0x0000)
struct GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6) == 0x00001C, "Wrong size on GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6, TargetData) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6, ApplicationTag) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_Cancelled_F7576E764ABBFFFBF1A6BE95A742E0A6::ApplicationTag' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.SpawnThrowingStar
// 0x00F0 (0x00F0 - 0x0000)
struct GA_Ninja_ThrowingStars_C_SpawnThrowingStar final
{
public:
	struct FVector                                Transform_Offset;                                  // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Horizontal_Spread;                                 // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Homing_Target;                                     // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue; // 0x0014(0x0064)()
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    CallFunc_SpawnProjectile_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_Prj_Ninja_ThrowingStars_C*           K2Node_DynamicCast_AsB_Prj_Ninja_Throwing_Stars;   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar) == 0x000010, "Wrong alignment on GA_Ninja_ThrowingStars_C_SpawnThrowingStar");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar) == 0x0000F0, "Wrong size on GA_Ninja_ThrowingStars_C_SpawnThrowingStar");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, Transform_Offset) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::Transform_Offset' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, Horizontal_Spread) == 0x00000C, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::Horizontal_Spread' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, Homing_Target) == 0x000010, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::Homing_Target' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_MakeRotator_ReturnValue) == 0x000088, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_TransformLocation_ReturnValue) == 0x0000D0, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, CallFunc_SpawnProjectile_ReturnValue) == 0x0000DC, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, K2Node_DynamicCast_AsB_Prj_Ninja_Throwing_Stars) == 0x0000E0, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::K2Node_DynamicCast_AsB_Prj_Ninja_Throwing_Stars' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SpawnThrowingStar, K2Node_DynamicCast_bSuccess) == 0x0000E4, "Member 'GA_Ninja_ThrowingStars_C_SpawnThrowingStar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.ThrowBasicStars
// 0x0003 (0x0003 - 0x0000)
struct GA_Ninja_ThrowingStars_C_ThrowBasicStars final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_ThrowBasicStars) == 0x000001, "Wrong alignment on GA_Ninja_ThrowingStars_C_ThrowBasicStars");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_ThrowBasicStars) == 0x000003, "Wrong size on GA_Ninja_ThrowingStars_C_ThrowBasicStars");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowBasicStars, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_ThrowBasicStars::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowBasicStars, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'GA_Ninja_ThrowingStars_C_ThrowBasicStars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowBasicStars, CallFunc_BooleanAND_ReturnValue2) == 0x000002, "Member 'GA_Ninja_ThrowingStars_C_ThrowBasicStars::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.Thow Lv2 Stars
// 0x0001 (0x0001 - 0x0000)
struct GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars) == 0x000001, "Wrong alignment on GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars) == 0x000001, "Wrong size on GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_Thow_Lv2_Stars::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.ThrowAdditionalStars
// 0x0040 (0x0040 - 0x0000)
struct GA_Ninja_ThrowingStars_C_ThrowAdditionalStars final
{
public:
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0000(0x0034)(ContainsInstancedReference)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_ThrowAdditionalStars");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars) == 0x000040, "Wrong size on GA_Ninja_ThrowingStars_C_ThrowAdditionalStars");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_GetActorInfo_ReturnValue) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000034, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_GetFloatAttribute_ReturnValue) == 0x000038, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x00003D, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_ThrowAdditionalStars, CallFunc_BooleanAND_ReturnValue2) == 0x00003F, "Member 'GA_Ninja_ThrowingStars_C_ThrowAdditionalStars::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function GA_Ninja_ThrowingStars.GA_Ninja_ThrowingStars_C.SetupVariables
// 0x003C (0x003C - 0x0000)
struct GA_Ninja_ThrowingStars_C_SetupVariables final
{
public:
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute2; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue2;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput; // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue2;  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue3;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_ThrowingStars_C_SetupVariables) == 0x000004, "Wrong alignment on GA_Ninja_ThrowingStars_C_SetupVariables");
static_assert(sizeof(GA_Ninja_ThrowingStars_C_SetupVariables) == 0x00003C, "Wrong size on GA_Ninja_ThrowingStars_C_SetupVariables");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000000, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_GetFloatAttribute_ReturnValue) == 0x000004, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute2) == 0x000008, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_GetFloatAttribute_ReturnValue2) == 0x00000C, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_GetFloatAttribute_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000011, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_BooleanAND_ReturnValue2) == 0x000013, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000018, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000020, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput) == 0x000024, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAllMatchingGameplayTags_ReturnValue2) == 0x00002C, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAllMatchingGameplayTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput) == 0x000030, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface3_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Ninja_ThrowingStars_C_SetupVariables, CallFunc_HasAllMatchingGameplayTags_ReturnValue3) == 0x000038, "Member 'GA_Ninja_ThrowingStars_C_SetupVariables::CallFunc_HasAllMatchingGameplayTags_ReturnValue3' has a wrong offset!");

}

#pragma pack(pop)
