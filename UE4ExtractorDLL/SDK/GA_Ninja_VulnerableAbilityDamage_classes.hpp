#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_VulnerableAbilityDamage

#include "Basic.hpp"

#include "GAT_NinjaTriggeredAbility_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_VulnerableAbilityDamage.GA_Ninja_VulnerableAbilityDamage_C
// 0x0078 (0x07B8 - 0x0740)
class UGA_Ninja_VulnerableAbilityDamage_C final : public UGAT_NinjaTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Ninja_VulnerableAbilityDamage_C; // 0x0740(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x0744(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_NinjaFatigue;                                   // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_NinjaFatigueInstant;                            // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StaminaDrain;                                      // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_SmokeBomb;                                      // 0x0758(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_ThrowingStars;                                  // 0x0770(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_NinjaAbility;                                   // 0x0788(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_IsVulnerable;                                   // 0x07A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Ninja_VulnerableAbilityDamage(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_VulnerableAbilityDamage_C">();
	}
	static class UGA_Ninja_VulnerableAbilityDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_VulnerableAbilityDamage_C>();
	}
};
static_assert(alignof(UGA_Ninja_VulnerableAbilityDamage_C) == 0x000004, "Wrong alignment on UGA_Ninja_VulnerableAbilityDamage_C");
static_assert(sizeof(UGA_Ninja_VulnerableAbilityDamage_C) == 0x0007B8, "Wrong size on UGA_Ninja_VulnerableAbilityDamage_C");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, UberGraphFrame_GA_Ninja_VulnerableAbilityDamage_C) == 0x000740, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::UberGraphFrame_GA_Ninja_VulnerableAbilityDamage_C' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, EventActivation) == 0x000744, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, GE_NinjaFatigue) == 0x00074C, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::GE_NinjaFatigue' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, GE_NinjaFatigueInstant) == 0x000750, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::GE_NinjaFatigueInstant' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, StaminaDrain) == 0x000754, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::StaminaDrain' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, TC_SmokeBomb) == 0x000758, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::TC_SmokeBomb' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, TC_ThrowingStars) == 0x000770, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::TC_ThrowingStars' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, TC_NinjaAbility) == 0x000788, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::TC_NinjaAbility' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_VulnerableAbilityDamage_C, TC_IsVulnerable) == 0x0007A0, "Member 'UGA_Ninja_VulnerableAbilityDamage_C::TC_IsVulnerable' has a wrong offset!");

}

#pragma pack(pop)
