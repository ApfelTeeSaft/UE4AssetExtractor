#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Outlander_GravitySphere

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// GameplayAbilityBlueprintGeneratedClass GA_Outlander_GravitySphere.GA_Outlander_GravitySphere_C
// 0x015C (0x0838 - 0x06DC)
class UGA_Outlander_GravitySphere_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06DC(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     EventData;                                         // 0x06E0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APlayerPawn_Outlander_C*                Outlander_Pawn;                                    // 0x0738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventActivation;                                   // 0x073C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 Prj_MatterCollector;                               // 0x0744(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventComplete;                                     // 0x0748(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortGameplayEffectContainerSpec       Spec_Damage;                                       // 0x0750(0x0064)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EC_BaseTargetting;                                 // 0x07B4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EC_BaseDamage;                                     // 0x07BC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_MatterCollectorDamage;                          // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ProjectileSpeed;                                   // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ProjectileGravity;                                 // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_HowInTheWorld;                                  // 0x07D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_HowInTheWorld;                                  // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_DefaultDamage;                                  // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Stopped;                                           // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x3];                                      // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortFeedbackHandle                    MatterCollectDialogFeedback;                       // 0x07F4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EC_FriendlyTargets;                                // 0x0804(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Impact_Location;                                   // 0x080C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EC_EnemyTargets;                                   // 0x0818(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_HeavyStuff;                                     // 0x0820(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Outlander_GravitySphere(int32 EntryPoint);
	void K2_ActivateAbility();
	void Triggered_A8F6F5F8468ED284B63ADFA133F95943(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_A8F6F5F8468ED284B63ADFA133F95943(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_A8F6F5F8468ED284B63ADFA133F95943(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Created_E1B7FD7947617E82F2B80E9DEA42A6E8(const struct FProjectileEventData& ProjectileData);
	void Touched_E1B7FD7947617E82F2B80E9DEA42A6E8(const struct FProjectileEventData& ProjectileData);
	void Bounced_E1B7FD7947617E82F2B80E9DEA42A6E8(const struct FProjectileEventData& ProjectileData);
	void Stopped_E1B7FD7947617E82F2B80E9DEA42A6E8(const struct FProjectileEventData& ProjectileData);
	void Exploded_E1B7FD7947617E82F2B80E9DEA42A6E8(const struct FProjectileEventData& ProjectileData);
	void Destroyed_E1B7FD7947617E82F2B80E9DEA42A6E8(const struct FProjectileEventData& ProjectileData);
	void SetupCollector(class UClass** MatterCollector, struct FVector* SpawnLocation, struct FRotator* ProjectileRotation, float* MatterSpeed, float* MatterGravity, struct FFortGameplayEffectContainerSpec* TargetSpec);
	void DamageTargets(const struct FProjectileEventData& ProjectileEventData);

	struct FTransform GetCustomAbilitySourceTransform() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Outlander_GravitySphere_C">();
	}
	static class UGA_Outlander_GravitySphere_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Outlander_GravitySphere_C>();
	}
};
static_assert(alignof(UGA_Outlander_GravitySphere_C) == 0x000004, "Wrong alignment on UGA_Outlander_GravitySphere_C");
static_assert(sizeof(UGA_Outlander_GravitySphere_C) == 0x000838, "Wrong size on UGA_Outlander_GravitySphere_C");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, UberGraphFrame) == 0x0006DC, "Member 'UGA_Outlander_GravitySphere_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EventData) == 0x0006E0, "Member 'UGA_Outlander_GravitySphere_C::EventData' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, Outlander_Pawn) == 0x000738, "Member 'UGA_Outlander_GravitySphere_C::Outlander_Pawn' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EventActivation) == 0x00073C, "Member 'UGA_Outlander_GravitySphere_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, Prj_MatterCollector) == 0x000744, "Member 'UGA_Outlander_GravitySphere_C::Prj_MatterCollector' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EventComplete) == 0x000748, "Member 'UGA_Outlander_GravitySphere_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, Spec_Damage) == 0x000750, "Member 'UGA_Outlander_GravitySphere_C::Spec_Damage' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EC_BaseTargetting) == 0x0007B4, "Member 'UGA_Outlander_GravitySphere_C::EC_BaseTargetting' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EC_BaseDamage) == 0x0007BC, "Member 'UGA_Outlander_GravitySphere_C::EC_BaseDamage' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, GE_MatterCollectorDamage) == 0x0007C4, "Member 'UGA_Outlander_GravitySphere_C::GE_MatterCollectorDamage' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, ProjectileSpeed) == 0x0007C8, "Member 'UGA_Outlander_GravitySphere_C::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, ProjectileGravity) == 0x0007CC, "Member 'UGA_Outlander_GravitySphere_C::ProjectileGravity' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, TC_HowInTheWorld) == 0x0007D0, "Member 'UGA_Outlander_GravitySphere_C::TC_HowInTheWorld' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, GE_HowInTheWorld) == 0x0007E8, "Member 'UGA_Outlander_GravitySphere_C::GE_HowInTheWorld' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, GE_DefaultDamage) == 0x0007EC, "Member 'UGA_Outlander_GravitySphere_C::GE_DefaultDamage' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, Stopped) == 0x0007F0, "Member 'UGA_Outlander_GravitySphere_C::Stopped' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, MatterCollectDialogFeedback) == 0x0007F4, "Member 'UGA_Outlander_GravitySphere_C::MatterCollectDialogFeedback' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EC_FriendlyTargets) == 0x000804, "Member 'UGA_Outlander_GravitySphere_C::EC_FriendlyTargets' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, Impact_Location) == 0x00080C, "Member 'UGA_Outlander_GravitySphere_C::Impact_Location' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, EC_EnemyTargets) == 0x000818, "Member 'UGA_Outlander_GravitySphere_C::EC_EnemyTargets' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_GravitySphere_C, TC_HeavyStuff) == 0x000820, "Member 'UGA_Outlander_GravitySphere_C::TC_HeavyStuff' has a wrong offset!");

}

#pragma pack(pop)
