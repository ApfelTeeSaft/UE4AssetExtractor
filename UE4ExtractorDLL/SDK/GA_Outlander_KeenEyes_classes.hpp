#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Outlander_KeenEyes

#include "Basic.hpp"

#include "StructKeenEyesTargets_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GAT_OutlanderTriggeredAbility_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass GA_Outlander_KeenEyes.GA_Outlander_KeenEyes_C
// 0x016C (0x08AC - 0x0740)
class UGA_Outlander_KeenEyes_C final : public UGAT_OutlanderTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Outlander_KeenEyes_C;            // 0x0740(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                V_SpawnColor;                                      // 0x0744(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Uncommon_Color;                                    // 0x0750(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Normal_Color;                                      // 0x075C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Epic_Color;                                        // 0x0768(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_LootIcon;                                        // 0x0774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   SpawnColor;                                        // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                RareColor;                                         // 0x0780(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           EventActivation;                                   // 0x078C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         KeenEyesTimer;                                     // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_InTheZone;                                      // 0x0798(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AFortPawn*>                      Fort_Pawn_Array;                                   // 0x07B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          WithReachOfTreasure_CanPlay_;                      // 0x07BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_KeenerEyes;                                     // 0x07C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DefaultRadius;                                     // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         UpgradeRadius;                                     // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class ABuildingContainer*>             BuildingContainer;                                 // 0x07E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FStructKeenEyesTargets>         KeenEyesTargets;                                   // 0x07EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FHitResult                             EmptyHitResult;                                    // 0x07F8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AFortPawn*>                      VisableActors;                                     // 0x0878(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          HasRevealPulse;                                    // 0x0884(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885[0x3];                                      // 0x0885(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Enemy_FX_Color;                                    // 0x0888(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Post_MID;                                          // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Current_Radius;                                    // 0x089C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationTimestamp;                               // 0x08A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActivationDeactivationAnimRate;                    // 0x08A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USphereComponent*                       Keen_Eyes_Sphere;                                  // 0x08A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Outlander_KeenEyes(int32 EntryPoint);
	void TestTurnOffKeenEyes();
	void K2_OnEndAbility();
	void EndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OverlapTreasure(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData_0);
	void PulseKeenEyes();
	void GetNearbyLoot(class AActor* NewIncomingActor);
	void Set_Or_Remove_Keen_Eyes_Custom_Depth(class AFortPawn* Character_Mesh, bool Render_CustomDepth);
	void Deactivate_Keen_Eye_Particles_as_Objects_Leave_the_Overlap_Region(class ABuildingContainer* Building_Container, class AFortPawn* Fort_Pawn, bool Fort_Pawn_True_Building_container_False);
	void Activate_Deactivate_Outline_Post_Process(float Outline_Weight);
	void Setup_Post_Fades(bool Activating__T__Or_Deactivating__F_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Outlander_KeenEyes_C">();
	}
	static class UGA_Outlander_KeenEyes_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Outlander_KeenEyes_C>();
	}
};
static_assert(alignof(UGA_Outlander_KeenEyes_C) == 0x000004, "Wrong alignment on UGA_Outlander_KeenEyes_C");
static_assert(sizeof(UGA_Outlander_KeenEyes_C) == 0x0008AC, "Wrong size on UGA_Outlander_KeenEyes_C");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, UberGraphFrame_GA_Outlander_KeenEyes_C) == 0x000740, "Member 'UGA_Outlander_KeenEyes_C::UberGraphFrame_GA_Outlander_KeenEyes_C' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, V_SpawnColor) == 0x000744, "Member 'UGA_Outlander_KeenEyes_C::V_SpawnColor' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Uncommon_Color) == 0x000750, "Member 'UGA_Outlander_KeenEyes_C::Uncommon_Color' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Normal_Color) == 0x00075C, "Member 'UGA_Outlander_KeenEyes_C::Normal_Color' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Epic_Color) == 0x000768, "Member 'UGA_Outlander_KeenEyes_C::Epic_Color' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, P_LootIcon) == 0x000774, "Member 'UGA_Outlander_KeenEyes_C::P_LootIcon' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, SpawnColor) == 0x000778, "Member 'UGA_Outlander_KeenEyes_C::SpawnColor' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, RareColor) == 0x000780, "Member 'UGA_Outlander_KeenEyes_C::RareColor' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, EventActivation) == 0x00078C, "Member 'UGA_Outlander_KeenEyes_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, KeenEyesTimer) == 0x000794, "Member 'UGA_Outlander_KeenEyes_C::KeenEyesTimer' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, TC_InTheZone) == 0x000798, "Member 'UGA_Outlander_KeenEyes_C::TC_InTheZone' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Fort_Pawn_Array) == 0x0007B0, "Member 'UGA_Outlander_KeenEyes_C::Fort_Pawn_Array' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, WithReachOfTreasure_CanPlay_) == 0x0007BC, "Member 'UGA_Outlander_KeenEyes_C::WithReachOfTreasure_CanPlay_' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, TC_KeenerEyes) == 0x0007C0, "Member 'UGA_Outlander_KeenEyes_C::TC_KeenerEyes' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, DefaultRadius) == 0x0007D8, "Member 'UGA_Outlander_KeenEyes_C::DefaultRadius' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, UpgradeRadius) == 0x0007DC, "Member 'UGA_Outlander_KeenEyes_C::UpgradeRadius' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, BuildingContainer) == 0x0007E0, "Member 'UGA_Outlander_KeenEyes_C::BuildingContainer' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, KeenEyesTargets) == 0x0007EC, "Member 'UGA_Outlander_KeenEyes_C::KeenEyesTargets' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, EmptyHitResult) == 0x0007F8, "Member 'UGA_Outlander_KeenEyes_C::EmptyHitResult' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, VisableActors) == 0x000878, "Member 'UGA_Outlander_KeenEyes_C::VisableActors' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, HasRevealPulse) == 0x000884, "Member 'UGA_Outlander_KeenEyes_C::HasRevealPulse' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Enemy_FX_Color) == 0x000888, "Member 'UGA_Outlander_KeenEyes_C::Enemy_FX_Color' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Post_MID) == 0x000898, "Member 'UGA_Outlander_KeenEyes_C::Post_MID' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Current_Radius) == 0x00089C, "Member 'UGA_Outlander_KeenEyes_C::Current_Radius' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, ActivationTimestamp) == 0x0008A0, "Member 'UGA_Outlander_KeenEyes_C::ActivationTimestamp' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, ActivationDeactivationAnimRate) == 0x0008A4, "Member 'UGA_Outlander_KeenEyes_C::ActivationDeactivationAnimRate' has a wrong offset!");
static_assert(offsetof(UGA_Outlander_KeenEyes_C, Keen_Eyes_Sphere) == 0x0008A8, "Member 'UGA_Outlander_KeenEyes_C::Keen_Eyes_Sphere' has a wrong offset!");

}

#pragma pack(pop)
