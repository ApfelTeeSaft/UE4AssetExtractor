#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Outlander_KnockKnock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.ExecuteUbergraph_GA_Outlander_KnockKnock
// 0x01D0 (0x01D0 - 0x0000)
struct GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0004(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0018(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0030(0x0014)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0044(0x0008)()
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x005C(0x0008)()
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0064(0x0014)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x0078(0x000C)(ConstParm, ZeroConstructor, ReferenceParm)
	class UFortAbilityTask_WaitTargetSelection*   CallFunc_WaitTargetSelection_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x008C(0x0058)(ConstParm)
	class ABuildingWall*                          K2Node_DynamicCast_AsBuilding_Wall;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantize10                  K2Node_MakeStruct_Vector_NetQuantize10;            // 0x0134(0x000C)()
	struct FVector_NetQuantizeNormal              K2Node_MakeStruct_Vector_NetQuantizeNormal;        // 0x0140(0x000C)()
	struct FGameplayCueParameters                 K2Node_MakeStruct_GameplayCueParameters;           // 0x014C(0x0084)()
};
static_assert(alignof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock) == 0x000004, "Wrong alignment on GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock");
static_assert(sizeof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock) == 0x0001D0, "Wrong size on GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, EntryPoint) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_CustomEvent_TargetData2) == 0x000004, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_CustomEvent_ApplicationTag2) == 0x000018, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_CustomEvent_TargetData) == 0x000030, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_CustomEvent_ApplicationTag) == 0x000044, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_CreateDelegate_OutputDelegate2) == 0x00004C, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, Temp_struct_Variable) == 0x00005C, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, Temp_struct_Variable2) == 0x000064, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x000078, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_WaitTargetSelection_ReturnValue) == 0x000084, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_WaitTargetSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_Event_EventData) == 0x00008C, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_DynamicCast_AsBuilding_Wall) == 0x0000E4, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_DynamicCast_AsBuilding_Wall' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakTransform_Location) == 0x0000EC, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakTransform_Scale) == 0x000104, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000110, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakVector_X) == 0x00011C, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakVector_Y) == 0x000120, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakVector_Z) == 0x000124, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakVector_X2) == 0x000128, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakVector_Y2) == 0x00012C, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, CallFunc_BreakVector_Z2) == 0x000130, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_MakeStruct_Vector_NetQuantize10) == 0x000134, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_MakeStruct_Vector_NetQuantize10' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_MakeStruct_Vector_NetQuantizeNormal) == 0x000140, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_MakeStruct_Vector_NetQuantizeNormal' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock, K2Node_MakeStruct_GameplayCueParameters) == 0x00014C, "Member 'GA_Outlander_KnockKnock_C_ExecuteUbergraph_GA_Outlander_KnockKnock::K2Node_MakeStruct_GameplayCueParameters' has a wrong offset!");

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.K2_ActivateAbilityFromEvent
// 0x0058 (0x0058 - 0x0000)
struct GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData_0;                                       // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent) == 0x000004, "Wrong alignment on GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent) == 0x000058, "Wrong size on GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent, EventData_0) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_K2_ActivateAbilityFromEvent::EventData_0' has a wrong offset!");

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.Targeted_8217F61642070692A0A818BB146A36B8
// 0x001C (0x001C - 0x0000)
struct GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8) == 0x000004, "Wrong alignment on GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8");
static_assert(sizeof(GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8) == 0x00001C, "Wrong size on GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8");
static_assert(offsetof(GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8, TargetData) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8, ApplicationTag) == 0x000014, "Member 'GA_Outlander_KnockKnock_C_Targeted_8217F61642070692A0A818BB146A36B8::ApplicationTag' has a wrong offset!");

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.Cancelled_8217F61642070692A0A818BB146A36B8
// 0x001C (0x001C - 0x0000)
struct GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0014(0x0008)(Parm)
};
static_assert(alignof(GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8) == 0x000004, "Wrong alignment on GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8");
static_assert(sizeof(GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8) == 0x00001C, "Wrong size on GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8");
static_assert(offsetof(GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8, TargetData) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8, ApplicationTag) == 0x000014, "Member 'GA_Outlander_KnockKnock_C_Cancelled_8217F61642070692A0A818BB146A36B8::ApplicationTag' has a wrong offset!");

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.OtherTargetting
// 0x00C0 (0x00C0 - 0x0000)
struct GA_Outlander_KnockKnock_C_OtherTargetting final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue2;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Outlander_KnockKnock_C_OtherTargetting) == 0x000010, "Wrong alignment on GA_Outlander_KnockKnock_C_OtherTargetting");
static_assert(sizeof(GA_Outlander_KnockKnock_C_OtherTargetting) == 0x0000C0, "Wrong size on GA_Outlander_KnockKnock_C_OtherTargetting");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, Temp_bool_Variable) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00001C, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_GetRightVector_ReturnValue) == 0x000028, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x00004C, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Normal_ReturnValue) == 0x000064, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Conv_VectorToRotator_ReturnValue2) == 0x000070, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Conv_VectorToRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_Dot_VectorVector_ReturnValue) == 0x00007C, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, K2Node_Select_Default) == 0x000084, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_OtherTargetting, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'GA_Outlander_KnockKnock_C_OtherTargetting::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.K2_ShouldAbilityRespondToEvent
// 0x00C8 (0x00C8 - 0x0000)
struct GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0034)(Parm, ContainsInstancedReference)
	struct FGameplayEventData                     Payload;                                           // 0x0034(0x0058)(Parm)
	bool                                          ReturnValue;                                       // 0x008C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingWall*                          K2Node_DynamicCast_AsBuilding_Wall;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetCurrentPawn_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerPawn_Outlander_C*                K2Node_DynamicCast_AsPlayer_Pawn_Outlander;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Outlander_C*                K2Node_DynamicCast_AsPlayer_Pawn_Outlander2;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Outlander_C*                OutlanderPawn;                                     // 0x00C0(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          CanExecute;                                        // 0x00C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent) == 0x000004, "Wrong alignment on GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent");
static_assert(sizeof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent) == 0x0000C8, "Wrong size on GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, ActorInfo) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, Payload) == 0x000034, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, ReturnValue) == 0x00008C, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_AsBuilding_Wall) == 0x000090, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_AsBuilding_Wall' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x000094, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000098, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x0000A0, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_AsFort_Player_State) == 0x0000A4, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_bSuccess2) == 0x0000A8, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, CallFunc_GetCurrentPawn_ReturnValue) == 0x0000AC, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::CallFunc_GetCurrentPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_AsPlayer_Pawn_Outlander) == 0x0000B0, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_AsPlayer_Pawn_Outlander' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_bSuccess3) == 0x0000B4, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_AsPlayer_Pawn_Outlander2) == 0x0000B8, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_AsPlayer_Pawn_Outlander2' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, K2Node_DynamicCast_bSuccess4) == 0x0000BC, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, OutlanderPawn) == 0x0000C0, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::OutlanderPawn' has a wrong offset!");
static_assert(offsetof(GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent, CanExecute) == 0x0000C4, "Member 'GA_Outlander_KnockKnock_C_K2_ShouldAbilityRespondToEvent::CanExecute' has a wrong offset!");

// Function GA_Outlander_KnockKnock.GA_Outlander_KnockKnock_C.GetCustomAbilitySourceTransform
// 0x0030 (0x0030 - 0x0000)
struct GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform) == 0x000010, "Wrong alignment on GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform");
static_assert(sizeof(GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform) == 0x000030, "Wrong size on GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform");
static_assert(offsetof(GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform, ReturnValue) == 0x000000, "Member 'GA_Outlander_KnockKnock_C_GetCustomAbilitySourceTransform::ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
