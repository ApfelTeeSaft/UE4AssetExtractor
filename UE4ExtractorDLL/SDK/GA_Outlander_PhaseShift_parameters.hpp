#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Outlander_PhaseShift

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GA_Outlander_PhaseShift.GA_Outlander_PhaseShift_C.ExecuteUbergraph_GA_Outlander_PhaseShift
// 0x0070 (0x0070 - 0x0000)
struct GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0004)()
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x0058)(ConstParm)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue2; // 0x006C(0x0004)()
};
static_assert(alignof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift) == 0x000004, "Wrong alignment on GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift");
static_assert(sizeof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift) == 0x000070, "Wrong size on GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift");
static_assert(offsetof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift, EntryPoint) == 0x000000, "Member 'GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift, K2Node_Event_EventData) == 0x000008, "Member 'GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000060, "Member 'GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000068, "Member 'GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue2) == 0x00006C, "Member 'GA_Outlander_PhaseShift_C_ExecuteUbergraph_GA_Outlander_PhaseShift::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue2' has a wrong offset!");

// Function GA_Outlander_PhaseShift.GA_Outlander_PhaseShift_C.K2_ActivateAbilityFromEvent
// 0x0058 (0x0058 - 0x0000)
struct GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData_0;                                       // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent) == 0x000004, "Wrong alignment on GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent) == 0x000058, "Wrong size on GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent, EventData_0) == 0x000000, "Member 'GA_Outlander_PhaseShift_C_K2_ActivateAbilityFromEvent::EventData_0' has a wrong offset!");

}

#pragma pack(pop)
