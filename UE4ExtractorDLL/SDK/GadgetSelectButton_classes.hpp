#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GadgetSelectButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass GadgetSelectButton.GadgetSelectButton_C
// 0x003C (0x01F4 - 0x01B8)
class UGadgetSelectButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               Box;                                               // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetSwitcher*                        Content_Switcher;                                  // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 EmptySlot;                                         // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UItem_C*                                Item;                                              // 0x01C8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Locked;                                            // 0x01CC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UFortGridPickerButton*                  Picker;                                            // 0x01D0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	UMulticastDelegateProperty_                   GadgetSelected;                                    // 0x01D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFortWorldItem*                         Gadget;                                            // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UFortWorldItem*>                 AvailableGadgets;                                  // 0x01E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Constructed;                                       // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GadgetSelectButton(int32 EntryPoint);
	void BndEvt__Item_K2Node_ComponentBoundEvent_56_FortBaseButtonClicked__DelegateSignature(class UFortBaseButton* Button);
	void BndEvt__Picker_K2Node_ComponentBoundEvent_30_GridPickerTileEvent__DelegateSignature(class UObject* Data, class UFortGridPickerTile* Tile);
	void Construct();
	void Init(class UFortWorldItem* Gadget_0, TArray<class UFortWorldItem*>& AvailableGadgets_0);
	void InternalInit();
	class UWidget* Get_Locked_ToolTipWidget_0();
	class UWidget* Get_EmptySlot_ToolTipWidget_0();
	struct FEventReply On_Locked_MouseButtonDown_0(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent);
	struct FEventReply On_EmptySlot_MouseButtonDown_0(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GadgetSelectButton_C">();
	}
	static class UGadgetSelectButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGadgetSelectButton_C>();
	}
};
static_assert(alignof(UGadgetSelectButton_C) == 0x000004, "Wrong alignment on UGadgetSelectButton_C");
static_assert(sizeof(UGadgetSelectButton_C) == 0x0001F4, "Wrong size on UGadgetSelectButton_C");
static_assert(offsetof(UGadgetSelectButton_C, UberGraphFrame) == 0x0001B8, "Member 'UGadgetSelectButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Box) == 0x0001BC, "Member 'UGadgetSelectButton_C::Box' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Content_Switcher) == 0x0001C0, "Member 'UGadgetSelectButton_C::Content_Switcher' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, EmptySlot) == 0x0001C4, "Member 'UGadgetSelectButton_C::EmptySlot' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Item) == 0x0001C8, "Member 'UGadgetSelectButton_C::Item' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Locked) == 0x0001CC, "Member 'UGadgetSelectButton_C::Locked' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Picker) == 0x0001D0, "Member 'UGadgetSelectButton_C::Picker' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, GadgetSelected) == 0x0001D4, "Member 'UGadgetSelectButton_C::GadgetSelected' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Gadget) == 0x0001E0, "Member 'UGadgetSelectButton_C::Gadget' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, AvailableGadgets) == 0x0001E4, "Member 'UGadgetSelectButton_C::AvailableGadgets' has a wrong offset!");
static_assert(offsetof(UGadgetSelectButton_C, Constructed) == 0x0001F0, "Member 'UGadgetSelectButton_C::Constructed' has a wrong offset!");

}

#pragma pack(pop)
