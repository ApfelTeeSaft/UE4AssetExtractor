#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GadgetSelectTile

#include "Basic.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GadgetSelectTile.GadgetSelectTile_C.ExecuteUbergraph_GadgetSelectTile
// 0x0014 (0x0014 - 0x0000)
struct GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_Event_InData;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortBaseButton*                        K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile) == 0x000004, "Wrong alignment on GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile");
static_assert(sizeof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile) == 0x000014, "Wrong size on GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile");
static_assert(offsetof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile, EntryPoint) == 0x000000, "Member 'GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile, K2Node_Event_InData) == 0x000004, "Member 'GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile::K2Node_Event_InData' has a wrong offset!");
static_assert(offsetof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile, K2Node_DynamicCast_AsFort_World_Item) == 0x00000C, "Member 'GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GadgetSelectTile_C_ExecuteUbergraph_GadgetSelectTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GadgetSelectTile.GadgetSelectTile_C.BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature final
{
public:
	class UFortBaseButton*                        Button;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature) == 0x000004, "Wrong alignment on GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature");
static_assert(sizeof(GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature) == 0x000004, "Wrong size on GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature");
static_assert(offsetof(GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'GadgetSelectTile_C_BndEvt__Item_K2Node_ComponentBoundEvent_357_FortBaseButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function GadgetSelectTile.GadgetSelectTile_C.SetData
// 0x0004 (0x0004 - 0x0000)
struct GadgetSelectTile_C_SetData final
{
public:
	class UObject*                                InData;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GadgetSelectTile_C_SetData) == 0x000004, "Wrong alignment on GadgetSelectTile_C_SetData");
static_assert(sizeof(GadgetSelectTile_C_SetData) == 0x000004, "Wrong size on GadgetSelectTile_C_SetData");
static_assert(offsetof(GadgetSelectTile_C_SetData, InData) == 0x000000, "Member 'GadgetSelectTile_C_SetData::InData' has a wrong offset!");

}

#pragma pack(pop)
