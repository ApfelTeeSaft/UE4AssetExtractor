#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameLiveStreaming

#include "Basic.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function GameLiveStreaming.GameLiveStreamingFunctionLibrary.IsBroadcastingGame
// 0x0001 (0x0001 - 0x0000)
struct GameLiveStreamingFunctionLibrary_IsBroadcastingGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameLiveStreamingFunctionLibrary_IsBroadcastingGame) == 0x000001, "Wrong alignment on GameLiveStreamingFunctionLibrary_IsBroadcastingGame");
static_assert(sizeof(GameLiveStreamingFunctionLibrary_IsBroadcastingGame) == 0x000001, "Wrong size on GameLiveStreamingFunctionLibrary_IsBroadcastingGame");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_IsBroadcastingGame, ReturnValue) == 0x000000, "Member 'GameLiveStreamingFunctionLibrary_IsBroadcastingGame::ReturnValue' has a wrong offset!");

// Function GameLiveStreaming.GameLiveStreamingFunctionLibrary.IsWebCamEnabled
// 0x0001 (0x0001 - 0x0000)
struct GameLiveStreamingFunctionLibrary_IsWebCamEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameLiveStreamingFunctionLibrary_IsWebCamEnabled) == 0x000001, "Wrong alignment on GameLiveStreamingFunctionLibrary_IsWebCamEnabled");
static_assert(sizeof(GameLiveStreamingFunctionLibrary_IsWebCamEnabled) == 0x000001, "Wrong size on GameLiveStreamingFunctionLibrary_IsWebCamEnabled");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_IsWebCamEnabled, ReturnValue) == 0x000000, "Member 'GameLiveStreamingFunctionLibrary_IsWebCamEnabled::ReturnValue' has a wrong offset!");

// Function GameLiveStreaming.GameLiveStreamingFunctionLibrary.StartBroadcastingGame
// 0x0034 (0x0034 - 0x0000)
struct GameLiveStreamingFunctionLibrary_StartBroadcastingGame final
{
public:
	class FString                                 LoginUserName;                                     // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoginPassword;                                     // 0x000C(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrameRate;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenScaling;                                     // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartWebCam;                                      // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DesiredWebCamWidth;                                // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredWebCamHeight;                               // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMirrorWebCamImage;                                // 0x002C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDrawSimpleWebCamVideo;                            // 0x002D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCaptureAudioFromComputer;                         // 0x002E(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCaptureAudioFromMicrophone;                       // 0x002F(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UTexture2D*                             CoverUpImage;                                      // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame) == 0x000004, "Wrong alignment on GameLiveStreamingFunctionLibrary_StartBroadcastingGame");
static_assert(sizeof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame) == 0x000034, "Wrong size on GameLiveStreamingFunctionLibrary_StartBroadcastingGame");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, LoginUserName) == 0x000000, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::LoginUserName' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, LoginPassword) == 0x00000C, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::LoginPassword' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, FrameRate) == 0x000018, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::FrameRate' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, ScreenScaling) == 0x00001C, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::ScreenScaling' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, bStartWebCam) == 0x000020, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::bStartWebCam' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, DesiredWebCamWidth) == 0x000024, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::DesiredWebCamWidth' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, DesiredWebCamHeight) == 0x000028, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::DesiredWebCamHeight' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, bMirrorWebCamImage) == 0x00002C, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::bMirrorWebCamImage' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, bDrawSimpleWebCamVideo) == 0x00002D, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::bDrawSimpleWebCamVideo' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, bCaptureAudioFromComputer) == 0x00002E, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::bCaptureAudioFromComputer' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, bCaptureAudioFromMicrophone) == 0x00002F, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::bCaptureAudioFromMicrophone' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartBroadcastingGame, CoverUpImage) == 0x000030, "Member 'GameLiveStreamingFunctionLibrary_StartBroadcastingGame::CoverUpImage' has a wrong offset!");

// Function GameLiveStreaming.GameLiveStreamingFunctionLibrary.StartWebCam
// 0x000C (0x000C - 0x0000)
struct GameLiveStreamingFunctionLibrary_StartWebCam final
{
public:
	int32                                         DesiredWebCamWidth;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredWebCamHeight;                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMirrorWebCamImage;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDrawSimpleWebCamVideo;                            // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameLiveStreamingFunctionLibrary_StartWebCam) == 0x000004, "Wrong alignment on GameLiveStreamingFunctionLibrary_StartWebCam");
static_assert(sizeof(GameLiveStreamingFunctionLibrary_StartWebCam) == 0x00000C, "Wrong size on GameLiveStreamingFunctionLibrary_StartWebCam");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartWebCam, DesiredWebCamWidth) == 0x000000, "Member 'GameLiveStreamingFunctionLibrary_StartWebCam::DesiredWebCamWidth' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartWebCam, DesiredWebCamHeight) == 0x000004, "Member 'GameLiveStreamingFunctionLibrary_StartWebCam::DesiredWebCamHeight' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartWebCam, bMirrorWebCamImage) == 0x000008, "Member 'GameLiveStreamingFunctionLibrary_StartWebCam::bMirrorWebCamImage' has a wrong offset!");
static_assert(offsetof(GameLiveStreamingFunctionLibrary_StartWebCam, bDrawSimpleWebCamVideo) == 0x000009, "Member 'GameLiveStreamingFunctionLibrary_StartWebCam::bDrawSimpleWebCamVideo' has a wrong offset!");

// Function GameLiveStreaming.QueryLiveStreamsCallbackProxy.QueryLiveStreams
// 0x0010 (0x0010 - 0x0000)
struct QueryLiveStreamsCallbackProxy_QueryLiveStreams final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x000C)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQueryLiveStreamsCallbackProxy*         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QueryLiveStreamsCallbackProxy_QueryLiveStreams) == 0x000004, "Wrong alignment on QueryLiveStreamsCallbackProxy_QueryLiveStreams");
static_assert(sizeof(QueryLiveStreamsCallbackProxy_QueryLiveStreams) == 0x000010, "Wrong size on QueryLiveStreamsCallbackProxy_QueryLiveStreams");
static_assert(offsetof(QueryLiveStreamsCallbackProxy_QueryLiveStreams, GameName) == 0x000000, "Member 'QueryLiveStreamsCallbackProxy_QueryLiveStreams::GameName' has a wrong offset!");
static_assert(offsetof(QueryLiveStreamsCallbackProxy_QueryLiveStreams, ReturnValue) == 0x00000C, "Member 'QueryLiveStreamsCallbackProxy_QueryLiveStreams::ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
