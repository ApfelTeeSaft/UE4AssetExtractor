#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HB_RoadManager

#include "Basic.hpp"

#include "Path_structs.hpp"
#include "RoadPathConnections_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function HB_RoadManager.HB_RoadManager_C.ExecuteUbergraph_HB_RoadManager
// 0x0064 (0x0064 - 0x0000)
struct HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_ID2;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_ProgressValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_FindAllPaths_IndexArray;                  // 0x0024(0x000C)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item2;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_ID;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_ProgressionValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_FindAllPaths_IndexArray2;                 // 0x0048(0x000C)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item3;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager) == 0x000004, "Wrong alignment on HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager");
static_assert(sizeof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager) == 0x000064, "Wrong size on HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, EntryPoint) == 0x000000, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, Temp_int_Array_Index_Variable) == 0x000004, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, Temp_int_Loop_Counter_Variable2) == 0x000010, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Add_IntInt_ReturnValue2) == 0x000014, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, Temp_int_Array_Index_Variable2) == 0x000018, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, K2Node_CustomEvent_ID2) == 0x00001C, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::K2Node_CustomEvent_ID2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, K2Node_CustomEvent_ProgressValue) == 0x000020, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::K2Node_CustomEvent_ProgressValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_FindAllPaths_IndexArray) == 0x000024, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_FindAllPaths_IndexArray' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Array_Get_Item) == 0x000030, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Array_Get_Item2) == 0x00003C, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, K2Node_CustomEvent_ID) == 0x000040, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::K2Node_CustomEvent_ID' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, K2Node_CustomEvent_ProgressionValue) == 0x000044, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::K2Node_CustomEvent_ProgressionValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_FindAllPaths_IndexArray2) == 0x000048, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_FindAllPaths_IndexArray2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Lerp_ReturnValue) == 0x000054, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Array_Get_Item3) == 0x000058, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Array_Length_ReturnValue2) == 0x00005C, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager, CallFunc_Less_IntInt_ReturnValue2) == 0x000060, "Member 'HB_RoadManager_C_ExecuteUbergraph_HB_RoadManager::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.SetPathProgression
// 0x0008 (0x0008 - 0x0000)
struct HB_RoadManager_C_SetPathProgression final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ProgressionValue;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_SetPathProgression) == 0x000004, "Wrong alignment on HB_RoadManager_C_SetPathProgression");
static_assert(sizeof(HB_RoadManager_C_SetPathProgression) == 0x000008, "Wrong size on HB_RoadManager_C_SetPathProgression");
static_assert(offsetof(HB_RoadManager_C_SetPathProgression, ID) == 0x000000, "Member 'HB_RoadManager_C_SetPathProgression::ID' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_SetPathProgression, ProgressionValue) == 0x000004, "Member 'HB_RoadManager_C_SetPathProgression::ProgressionValue' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.StartPathUpgradeAnimation
// 0x0008 (0x0008 - 0x0000)
struct HB_RoadManager_C_StartPathUpgradeAnimation final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ProgressValue;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_StartPathUpgradeAnimation) == 0x000004, "Wrong alignment on HB_RoadManager_C_StartPathUpgradeAnimation");
static_assert(sizeof(HB_RoadManager_C_StartPathUpgradeAnimation) == 0x000008, "Wrong size on HB_RoadManager_C_StartPathUpgradeAnimation");
static_assert(offsetof(HB_RoadManager_C_StartPathUpgradeAnimation, ID) == 0x000000, "Member 'HB_RoadManager_C_StartPathUpgradeAnimation::ID' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_StartPathUpgradeAnimation, ProgressValue) == 0x000004, "Member 'HB_RoadManager_C_StartPathUpgradeAnimation::ProgressValue' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct HB_RoadManager_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_UserConstructionScript) == 0x000004, "Wrong alignment on HB_RoadManager_C_UserConstructionScript");
static_assert(sizeof(HB_RoadManager_C_UserConstructionScript) == 0x000018, "Wrong size on HB_RoadManager_C_UserConstructionScript");
static_assert(offsetof(HB_RoadManager_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HB_RoadManager_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'HB_RoadManager_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'HB_RoadManager_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x00000C, "Member 'HB_RoadManager_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'HB_RoadManager_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'HB_RoadManager_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.UpgradePath
// 0x006C (0x006C - 0x0000)
struct HB_RoadManager_C_UpgradePath final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPath                                  CallFunc_Array_Get_Item;                           // 0x0010(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERoadPathConnections                          CallFunc_Array_Get_Item2;                          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item3;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Array_Get_Item4;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_UpgradePath) == 0x000004, "Wrong alignment on HB_RoadManager_C_UpgradePath");
static_assert(sizeof(HB_RoadManager_C_UpgradePath) == 0x00006C, "Wrong size on HB_RoadManager_C_UpgradePath");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, INDEX) == 0x000000, "Member 'HB_RoadManager_C_UpgradePath::INDEX' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, Temp_int_Array_Index_Variable) == 0x000004, "Member 'HB_RoadManager_C_UpgradePath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'HB_RoadManager_C_UpgradePath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Array_Get_Item) == 0x000010, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Array_Get_Item2) == 0x00002C, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Array_Get_Item3) == 0x000030, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, K2Node_DynamicCast_AsHB_Road_Spline) == 0x000038, "Member 'HB_RoadManager_C_UpgradePath::K2Node_DynamicCast_AsHB_Road_Spline' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, K2Node_DynamicCast_bSuccess) == 0x00003C, "Member 'HB_RoadManager_C_UpgradePath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Array_Length_ReturnValue2) == 0x000040, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000044, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Array_Get_Item4) == 0x00004C, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_FClamp_ReturnValue) == 0x000054, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_FClamp_ReturnValue2) == 0x000058, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000060, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000064, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_UpgradePath, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000068, "Member 'HB_RoadManager_C_UpgradePath::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.DebugAllRoads
// 0x004C (0x004C - 0x0000)
struct HB_RoadManager_C_DebugAllRoads final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable2;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue2;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHB_RoadSpline_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x000C)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_DebugAllRoads) == 0x000004, "Wrong alignment on HB_RoadManager_C_DebugAllRoads");
static_assert(sizeof(HB_RoadManager_C_DebugAllRoads) == 0x00004C, "Wrong size on HB_RoadManager_C_DebugAllRoads");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HB_RoadManager_C_DebugAllRoads::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'HB_RoadManager_C_DebugAllRoads::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, Temp_int_Variable) == 0x000014, "Member 'HB_RoadManager_C_DebugAllRoads::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, Temp_int_Variable2) == 0x000018, "Member 'HB_RoadManager_C_DebugAllRoads::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Add_IntInt_ReturnValue2) == 0x00001C, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Conv_IntToByte_ReturnValue2) == 0x000022, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Conv_IntToByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000023, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_MakeLiteralInt_ReturnValue) == 0x000028, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Array_Get_Item) == 0x00003C, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, K2Node_DynamicCast_AsHB_Road_Spline) == 0x000044, "Member 'HB_RoadManager_C_DebugAllRoads::K2Node_DynamicCast_AsHB_Road_Spline' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'HB_RoadManager_C_DebugAllRoads::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_DebugAllRoads, CallFunc_Less_IntInt_ReturnValue2) == 0x000049, "Member 'HB_RoadManager_C_DebugAllRoads::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.Set Path
// 0x0008 (0x0008 - 0x0000)
struct HB_RoadManager_C_Set_Path final
{
public:
	float                                         ProgressValue;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         INDEX;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_Set_Path) == 0x000004, "Wrong alignment on HB_RoadManager_C_Set_Path");
static_assert(sizeof(HB_RoadManager_C_Set_Path) == 0x000008, "Wrong size on HB_RoadManager_C_Set_Path");
static_assert(offsetof(HB_RoadManager_C_Set_Path, ProgressValue) == 0x000000, "Member 'HB_RoadManager_C_Set_Path::ProgressValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_Set_Path, INDEX) == 0x000004, "Member 'HB_RoadManager_C_Set_Path::INDEX' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.ResetAllPaths
// 0x0018 (0x0018 - 0x0000)
struct HB_RoadManager_C_ResetAllPaths final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_ResetAllPaths) == 0x000004, "Wrong alignment on HB_RoadManager_C_ResetAllPaths");
static_assert(sizeof(HB_RoadManager_C_ResetAllPaths) == 0x000018, "Wrong size on HB_RoadManager_C_ResetAllPaths");
static_assert(offsetof(HB_RoadManager_C_ResetAllPaths, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HB_RoadManager_C_ResetAllPaths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ResetAllPaths, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'HB_RoadManager_C_ResetAllPaths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ResetAllPaths, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'HB_RoadManager_C_ResetAllPaths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ResetAllPaths, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'HB_RoadManager_C_ResetAllPaths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ResetAllPaths, CallFunc_Array_Get_Item) == 0x000010, "Member 'HB_RoadManager_C_ResetAllPaths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_ResetAllPaths, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'HB_RoadManager_C_ResetAllPaths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function HB_RoadManager.HB_RoadManager_C.FindAllPaths
// 0x002C (0x002C - 0x0000)
struct HB_RoadManager_C_FindAllPaths final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 IndexArray;                                        // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadManager_C_FindAllPaths) == 0x000004, "Wrong alignment on HB_RoadManager_C_FindAllPaths");
static_assert(sizeof(HB_RoadManager_C_FindAllPaths) == 0x00002C, "Wrong size on HB_RoadManager_C_FindAllPaths");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, ID) == 0x000000, "Member 'HB_RoadManager_C_FindAllPaths::ID' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, IndexArray) == 0x000004, "Member 'HB_RoadManager_C_FindAllPaths::IndexArray' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, Temp_int_Array_Index_Variable) == 0x000010, "Member 'HB_RoadManager_C_FindAllPaths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'HB_RoadManager_C_FindAllPaths::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'HB_RoadManager_C_FindAllPaths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'HB_RoadManager_C_FindAllPaths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'HB_RoadManager_C_FindAllPaths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, CallFunc_Array_Get_Item) == 0x000024, "Member 'HB_RoadManager_C_FindAllPaths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'HB_RoadManager_C_FindAllPaths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadManager_C_FindAllPaths, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'HB_RoadManager_C_FindAllPaths::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
