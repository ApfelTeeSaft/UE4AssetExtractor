#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HB_RoadSpline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Path_structs.hpp"
#include "RoadConnections_structs.hpp"
#include "Engine_classes.hpp"
#include "RoadPathConnections_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass HB_RoadSpline.HB_RoadSpline_C
// 0x00D4 (0x0314 - 0x0240)
class AHB_RoadSpline_C final : public AActor
{
public:
	class USplineMeshComponent*                   SplineMesh1;                                       // 0x0240(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0244(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UBillboardComponent*                    Billboard1;                                        // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	bool                                          IsAnchorPoint;                                     // 0x024C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh;                                              // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_RoadSpline_C*                       StartRoadConnection;                               // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AHB_RoadSpline_C*                       EndRoadConnection;                                 // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Start;                                             // 0x025C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                StartTangent;                                      // 0x0268(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                End;                                               // 0x0274(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EndTangent;                                        // 0x0280(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ERoadConnections                              StartConnectionSocket;                             // 0x028C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ERoadConnections                              EndConnectionSocket;                               // 0x028D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tension;                                           // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 StartRoadActor;                                    // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class AActor*                                 EndRoadActor;                                      // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class AActor*                                 DependingActorStart;                               // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class AActor*                                 DependentActorEnd;                                 // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class AActor*                                 DependentActorLeft;                                // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class AActor*                                 DependentActorRight;                               // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	float                                         StartScale;                                        // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         EndScale;                                          // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ActorScale;                                        // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BlendAsphalt;                                      // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Material;                                          // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBuildingFoundation;                              // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         DependentActors;                                   // 0x02C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<ERoadConnections>                      DepentendActorsSockets;                            // 0x02D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class AActor*>                         UpgradeBuildings;                                  // 0x02DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<struct FPath>                          UpgradePaths;                                      // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 UpgradePathProgression;                            // 0x02F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          NewVar;                                            // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StarttoEnd;                                        // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StreetBlendEndtoStart;                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StreetBlendLefttoRight;                            // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         NewVar0;                                           // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void SetSplineVaribles();
	void UpdateSpline_Road_Connection_Start();
	void UpdateSplineRoadConectionEnd();
	void SetDependentActor(class AActor* Actor, ERoadConnections RoadConnection);
	void UpdateDependentActors();
	void Make_Dynamic_Material(class UMeshComponent* Mesh_0);
	void Set_Dependent_ActorsforSpline();
	void ClearDependentActors();
	void UpgradePath(class AActor* UpgradeBuilding);
	void SetPath(ERoadPathConnections Connection, float Value);
	void AddPath(ERoadPathConnections Connection, float GravelValue, float StreetValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HB_RoadSpline_C">();
	}
	static class AHB_RoadSpline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHB_RoadSpline_C>();
	}
};
static_assert(alignof(AHB_RoadSpline_C) == 0x000004, "Wrong alignment on AHB_RoadSpline_C");
static_assert(sizeof(AHB_RoadSpline_C) == 0x000314, "Wrong size on AHB_RoadSpline_C");
static_assert(offsetof(AHB_RoadSpline_C, SplineMesh1) == 0x000240, "Member 'AHB_RoadSpline_C::SplineMesh1' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StaticMesh1) == 0x000244, "Member 'AHB_RoadSpline_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, Billboard1) == 0x000248, "Member 'AHB_RoadSpline_C::Billboard1' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, IsAnchorPoint) == 0x00024C, "Member 'AHB_RoadSpline_C::IsAnchorPoint' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, Mesh) == 0x000250, "Member 'AHB_RoadSpline_C::Mesh' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StartRoadConnection) == 0x000254, "Member 'AHB_RoadSpline_C::StartRoadConnection' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, EndRoadConnection) == 0x000258, "Member 'AHB_RoadSpline_C::EndRoadConnection' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, Start) == 0x00025C, "Member 'AHB_RoadSpline_C::Start' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StartTangent) == 0x000268, "Member 'AHB_RoadSpline_C::StartTangent' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, End) == 0x000274, "Member 'AHB_RoadSpline_C::End' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, EndTangent) == 0x000280, "Member 'AHB_RoadSpline_C::EndTangent' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StartConnectionSocket) == 0x00028C, "Member 'AHB_RoadSpline_C::StartConnectionSocket' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, EndConnectionSocket) == 0x00028D, "Member 'AHB_RoadSpline_C::EndConnectionSocket' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, Tension) == 0x000290, "Member 'AHB_RoadSpline_C::Tension' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StartRoadActor) == 0x000294, "Member 'AHB_RoadSpline_C::StartRoadActor' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, EndRoadActor) == 0x000298, "Member 'AHB_RoadSpline_C::EndRoadActor' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, DependingActorStart) == 0x00029C, "Member 'AHB_RoadSpline_C::DependingActorStart' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, DependentActorEnd) == 0x0002A0, "Member 'AHB_RoadSpline_C::DependentActorEnd' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, DependentActorLeft) == 0x0002A4, "Member 'AHB_RoadSpline_C::DependentActorLeft' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, DependentActorRight) == 0x0002A8, "Member 'AHB_RoadSpline_C::DependentActorRight' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StartScale) == 0x0002AC, "Member 'AHB_RoadSpline_C::StartScale' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, EndScale) == 0x0002B0, "Member 'AHB_RoadSpline_C::EndScale' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, ActorScale) == 0x0002B4, "Member 'AHB_RoadSpline_C::ActorScale' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, BlendAsphalt) == 0x0002B8, "Member 'AHB_RoadSpline_C::BlendAsphalt' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, Material) == 0x0002BC, "Member 'AHB_RoadSpline_C::Material' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, IsBuildingFoundation) == 0x0002C0, "Member 'AHB_RoadSpline_C::IsBuildingFoundation' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, DependentActors) == 0x0002C4, "Member 'AHB_RoadSpline_C::DependentActors' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, DepentendActorsSockets) == 0x0002D0, "Member 'AHB_RoadSpline_C::DepentendActorsSockets' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, UpgradeBuildings) == 0x0002DC, "Member 'AHB_RoadSpline_C::UpgradeBuildings' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, UpgradePaths) == 0x0002E8, "Member 'AHB_RoadSpline_C::UpgradePaths' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, UpgradePathProgression) == 0x0002F4, "Member 'AHB_RoadSpline_C::UpgradePathProgression' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, NewVar) == 0x000300, "Member 'AHB_RoadSpline_C::NewVar' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StarttoEnd) == 0x000304, "Member 'AHB_RoadSpline_C::StarttoEnd' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StreetBlendEndtoStart) == 0x000308, "Member 'AHB_RoadSpline_C::StreetBlendEndtoStart' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, StreetBlendLefttoRight) == 0x00030C, "Member 'AHB_RoadSpline_C::StreetBlendLefttoRight' has a wrong offset!");
static_assert(offsetof(AHB_RoadSpline_C, NewVar0) == 0x000310, "Member 'AHB_RoadSpline_C::NewVar0' has a wrong offset!");

}

#pragma pack(pop)
