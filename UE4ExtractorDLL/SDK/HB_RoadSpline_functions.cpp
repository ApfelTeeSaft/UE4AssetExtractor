#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HB_RoadSpline

#include "Basic.hpp"

#include "HB_RoadSpline_classes.hpp"
#include "HB_RoadSpline_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function HB_RoadSpline.HB_RoadSpline_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.SetSplineVaribles
// (Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::SetSplineVaribles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "SetSplineVaribles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.UpdateSpline Road Connection Start
// (Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::UpdateSpline_Road_Connection_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "UpdateSpline Road Connection Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.UpdateSplineRoadConectionEnd
// (Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::UpdateSplineRoadConectionEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "UpdateSplineRoadConectionEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.SetDependentActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ERoadConnections                        RoadConnection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHB_RoadSpline_C::SetDependentActor(class AActor* Actor, ERoadConnections RoadConnection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "SetDependentActor");

	Params::HB_RoadSpline_C_SetDependentActor Parms{};

	Parms.Actor = Actor;
	Parms.RoadConnection = RoadConnection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HB_RoadSpline.HB_RoadSpline_C.UpdateDependentActors
// (Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::UpdateDependentActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "UpdateDependentActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.Make Dynamic Material
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHB_RoadSpline_C::Make_Dynamic_Material(class UMeshComponent* Mesh_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "Make Dynamic Material");

	Params::HB_RoadSpline_C_Make_Dynamic_Material Parms{};

	Parms.Mesh_0 = Mesh_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HB_RoadSpline.HB_RoadSpline_C.Set Dependent ActorsforSpline
// (Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::Set_Dependent_ActorsforSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "Set Dependent ActorsforSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.ClearDependentActors
// (Public, BlueprintCallable, BlueprintEvent)

void AHB_RoadSpline_C::ClearDependentActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "ClearDependentActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HB_RoadSpline.HB_RoadSpline_C.UpgradePath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           UpgradeBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHB_RoadSpline_C::UpgradePath(class AActor* UpgradeBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "UpgradePath");

	Params::HB_RoadSpline_C_UpgradePath Parms{};

	Parms.UpgradeBuilding = UpgradeBuilding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HB_RoadSpline.HB_RoadSpline_C.SetPath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERoadPathConnections                    Connection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHB_RoadSpline_C::SetPath(ERoadPathConnections Connection, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "SetPath");

	Params::HB_RoadSpline_C_SetPath Parms{};

	Parms.Connection = Connection;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HB_RoadSpline.HB_RoadSpline_C.AddPath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERoadPathConnections                    Connection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   GravelValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   StreetValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHB_RoadSpline_C::AddPath(ERoadPathConnections Connection, float GravelValue, float StreetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HB_RoadSpline_C", "AddPath");

	Params::HB_RoadSpline_C_AddPath Parms{};

	Parms.Connection = Connection;
	Parms.GravelValue = GravelValue;
	Parms.StreetValue = StreetValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

#pragma pack(pop)
