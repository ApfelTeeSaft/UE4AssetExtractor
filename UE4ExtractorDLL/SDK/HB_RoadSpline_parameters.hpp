#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HB_RoadSpline

#include "Basic.hpp"

#include "RoadPathConnections_structs.hpp"
#include "Path_structs.hpp"
#include "RoadConnections_structs.hpp"
#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function HB_RoadSpline.HB_RoadSpline_C.UserConstructionScript
// 0x001C (0x001C - 0x0000)
struct HB_RoadSpline_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue2;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_UserConstructionScript) == 0x000004, "Wrong alignment on HB_RoadSpline_C_UserConstructionScript");
static_assert(sizeof(HB_RoadSpline_C_UserConstructionScript) == 0x00001C, "Wrong size on HB_RoadSpline_C_UserConstructionScript");
static_assert(offsetof(HB_RoadSpline_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'HB_RoadSpline_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00000C, "Member 'HB_RoadSpline_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000010, "Member 'HB_RoadSpline_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000014, "Member 'HB_RoadSpline_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000018, "Member 'HB_RoadSpline_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue2) == 0x000019, "Member 'HB_RoadSpline_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue2' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.SetSplineVaribles
// 0x006C (0x006C - 0x0000)
struct HB_RoadSpline_C_SetSplineVaribles final
{
public:
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue2;                      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_SetSplineVaribles) == 0x000004, "Wrong alignment on HB_RoadSpline_C_SetSplineVaribles");
static_assert(sizeof(HB_RoadSpline_C_SetSplineVaribles) == 0x00006C, "Wrong size on HB_RoadSpline_C_SetSplineVaribles");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_MakeVector2D_ReturnValue) == 0x000000, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_MakeVector2D_ReturnValue2) == 0x000008, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x00001C, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Normal_ReturnValue2) == 0x000034, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Normal_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x000040, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_VSize_ReturnValue) == 0x00004C, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetSplineVaribles, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000060, "Member 'HB_RoadSpline_C_SetSplineVaribles::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.UpdateSpline Road Connection Start
// 0x0098 (0x0098 - 0x0000)
struct HB_RoadSpline_C_UpdateSpline_Road_Connection_Start final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SelectObject_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_DynamicCast_AsScene_Component;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue3;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue4;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue5;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue6;           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue7;           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue8;           // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start) == 0x000004, "Wrong alignment on HB_RoadSpline_C_UpdateSpline_Road_Connection_Start");
static_assert(sizeof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start) == 0x000098, "Wrong size on HB_RoadSpline_C_UpdateSpline_Road_Connection_Start");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00000C, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000018, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, K2Node_DynamicCast_AsHB_Road_Spline) == 0x000024, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::K2Node_DynamicCast_AsHB_Road_Spline' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, K2Node_SwitchEnum_CmpSuccess) == 0x00002A, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_SelectObject_ReturnValue) == 0x00002C, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_SelectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, K2Node_DynamicCast_AsScene_Component) == 0x000030, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::K2Node_DynamicCast_AsScene_Component' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, K2Node_DynamicCast_bSuccess2) == 0x000034, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue) == 0x000038, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue2) == 0x000044, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue3) == 0x000050, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue4) == 0x00005C, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue5) == 0x000068, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue5' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue6) == 0x000074, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue6' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue7) == 0x000080, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue7' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSpline_Road_Connection_Start, CallFunc_GetSocketLocation_ReturnValue8) == 0x00008C, "Member 'HB_RoadSpline_C_UpdateSpline_Road_Connection_Start::CallFunc_GetSocketLocation_ReturnValue8' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.UpdateSplineRoadConectionEnd
// 0x00A0 (0x00A0 - 0x0000)
struct HB_RoadSpline_C_UpdateSplineRoadConectionEnd final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SelectObject_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_DynamicCast_AsScene_Component;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue3;           // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue4;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue5;           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue6;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue7;           // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue8;           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd) == 0x000004, "Wrong alignment on HB_RoadSpline_C_UpdateSplineRoadConectionEnd");
static_assert(sizeof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd) == 0x0000A0, "Wrong size on HB_RoadSpline_C_UpdateSplineRoadConectionEnd");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00000C, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, K2Node_DynamicCast_AsHB_Road_Spline) == 0x00001C, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::K2Node_DynamicCast_AsHB_Road_Spline' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000024, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_SelectObject_ReturnValue) == 0x000034, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_SelectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, K2Node_DynamicCast_AsScene_Component) == 0x000038, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::K2Node_DynamicCast_AsScene_Component' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, K2Node_DynamicCast_bSuccess2) == 0x00003C, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue) == 0x000040, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue2) == 0x00004C, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue3) == 0x000058, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue4) == 0x000064, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue5) == 0x000070, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue5' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue6) == 0x00007C, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue6' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue7) == 0x000088, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue7' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateSplineRoadConectionEnd, CallFunc_GetSocketLocation_ReturnValue8) == 0x000094, "Member 'HB_RoadSpline_C_UpdateSplineRoadConectionEnd::CallFunc_GetSocketLocation_ReturnValue8' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.SetDependentActor
// 0x0008 (0x0008 - 0x0000)
struct HB_RoadSpline_C_SetDependentActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ERoadConnections                              RoadConnection;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_SetDependentActor) == 0x000004, "Wrong alignment on HB_RoadSpline_C_SetDependentActor");
static_assert(sizeof(HB_RoadSpline_C_SetDependentActor) == 0x000008, "Wrong size on HB_RoadSpline_C_SetDependentActor");
static_assert(offsetof(HB_RoadSpline_C_SetDependentActor, Actor) == 0x000000, "Member 'HB_RoadSpline_C_SetDependentActor::Actor' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetDependentActor, RoadConnection) == 0x000004, "Member 'HB_RoadSpline_C_SetDependentActor::RoadConnection' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetDependentActor, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'HB_RoadSpline_C_SetDependentActor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.UpdateDependentActors
// 0x0024 (0x0024 - 0x0000)
struct HB_RoadSpline_C_UpdateDependentActors final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline2;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline3;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline4;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_UpdateDependentActors) == 0x000004, "Wrong alignment on HB_RoadSpline_C_UpdateDependentActors");
static_assert(sizeof(HB_RoadSpline_C_UpdateDependentActors) == 0x000024, "Wrong size on HB_RoadSpline_C_UpdateDependentActors");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'HB_RoadSpline_C_UpdateDependentActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, CallFunc_IsValid_ReturnValue2) == 0x000001, "Member 'HB_RoadSpline_C_UpdateDependentActors::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_AsHB_Road_Spline) == 0x000004, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_AsHB_Road_Spline' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_AsHB_Road_Spline2) == 0x00000C, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_AsHB_Road_Spline2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_bSuccess2) == 0x000010, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, CallFunc_IsValid_ReturnValue3) == 0x000011, "Member 'HB_RoadSpline_C_UpdateDependentActors::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_AsHB_Road_Spline3) == 0x000014, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_AsHB_Road_Spline3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_bSuccess3) == 0x000018, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_AsHB_Road_Spline4) == 0x00001C, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_AsHB_Road_Spline4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, K2Node_DynamicCast_bSuccess4) == 0x000020, "Member 'HB_RoadSpline_C_UpdateDependentActors::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpdateDependentActors, CallFunc_IsValid_ReturnValue4) == 0x000021, "Member 'HB_RoadSpline_C_UpdateDependentActors::CallFunc_IsValid_ReturnValue4' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.Make Dynamic Material
// 0x000C (0x000C - 0x0000)
struct HB_RoadSpline_C_Make_Dynamic_Material final
{
public:
	class UMeshComponent*                         Mesh_0;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_Make_Dynamic_Material) == 0x000004, "Wrong alignment on HB_RoadSpline_C_Make_Dynamic_Material");
static_assert(sizeof(HB_RoadSpline_C_Make_Dynamic_Material) == 0x00000C, "Wrong size on HB_RoadSpline_C_Make_Dynamic_Material");
static_assert(offsetof(HB_RoadSpline_C_Make_Dynamic_Material, Mesh_0) == 0x000000, "Member 'HB_RoadSpline_C_Make_Dynamic_Material::Mesh_0' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_Make_Dynamic_Material, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000004, "Member 'HB_RoadSpline_C_Make_Dynamic_Material::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_Make_Dynamic_Material, CallFunc_Array_Get_Item) == 0x000008, "Member 'HB_RoadSpline_C_Make_Dynamic_Material::CallFunc_Array_Get_Item' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.UpgradePath
// 0x0064 (0x0064 - 0x0000)
struct HB_RoadSpline_C_UpgradePath final
{
public:
	class AActor*                                 UpgradeBuilding;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPath                                  CallFunc_Array_Get_Item;                           // 0x0014(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERoadPathConnections                          CallFunc_Array_Get_Item2;                          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item3;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_RoadSpline_C*                       K2Node_DynamicCast_AsHB_Road_Spline;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Array_Get_Item4;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_UpgradePath) == 0x000004, "Wrong alignment on HB_RoadSpline_C_UpgradePath");
static_assert(sizeof(HB_RoadSpline_C_UpgradePath) == 0x000064, "Wrong size on HB_RoadSpline_C_UpgradePath");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, UpgradeBuilding) == 0x000000, "Member 'HB_RoadSpline_C_UpgradePath::UpgradeBuilding' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, Temp_int_Array_Index_Variable) == 0x000004, "Member 'HB_RoadSpline_C_UpgradePath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'HB_RoadSpline_C_UpgradePath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Get_Item) == 0x000014, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Get_Item2) == 0x000030, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'HB_RoadSpline_C_UpgradePath::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Get_Item3) == 0x000034, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, K2Node_DynamicCast_AsHB_Road_Spline) == 0x00003C, "Member 'HB_RoadSpline_C_UpgradePath::K2Node_DynamicCast_AsHB_Road_Spline' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'HB_RoadSpline_C_UpgradePath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Length_ReturnValue2) == 0x000044, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000048, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Array_Get_Item4) == 0x000050, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_UpgradePath, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000060, "Member 'HB_RoadSpline_C_UpgradePath::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.SetPath
// 0x0014 (0x0014 - 0x0000)
struct HB_RoadSpline_C_SetPath final
{
public:
	ERoadPathConnections                          Connection;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_SetPath) == 0x000004, "Wrong alignment on HB_RoadSpline_C_SetPath");
static_assert(sizeof(HB_RoadSpline_C_SetPath) == 0x000014, "Wrong size on HB_RoadSpline_C_SetPath");
static_assert(offsetof(HB_RoadSpline_C_SetPath, Connection) == 0x000000, "Member 'HB_RoadSpline_C_SetPath::Connection' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetPath, Value) == 0x000004, "Member 'HB_RoadSpline_C_SetPath::Value' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetPath, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'HB_RoadSpline_C_SetPath::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetPath, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'HB_RoadSpline_C_SetPath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_SetPath, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'HB_RoadSpline_C_SetPath::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function HB_RoadSpline.HB_RoadSpline_C.AddPath
// 0x00D8 (0x00D8 - 0x0000)
struct HB_RoadSpline_C_AddPath final
{
public:
	ERoadPathConnections                          Connection;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GravelValue;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         StreetValue;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue2;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue2;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue3;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue3;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue4;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue4;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue5;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue5;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue6;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue6;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue7;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue7;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue8;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue8;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue9;  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue9;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue10; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue10;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue11; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue11;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue12; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue12;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue13; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue13;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue14; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue14;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue15; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue15;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue16; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue16;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue17; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue17;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue18; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue18;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue19; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue19;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue20; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue20;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue21; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue21;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue22; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue22;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue23; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue23;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue24; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue24;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HB_RoadSpline_C_AddPath) == 0x000004, "Wrong alignment on HB_RoadSpline_C_AddPath");
static_assert(sizeof(HB_RoadSpline_C_AddPath) == 0x0000D8, "Wrong size on HB_RoadSpline_C_AddPath");
static_assert(offsetof(HB_RoadSpline_C_AddPath, Connection) == 0x000000, "Member 'HB_RoadSpline_C_AddPath::Connection' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, GravelValue) == 0x000004, "Member 'HB_RoadSpline_C_AddPath::GravelValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, StreetValue) == 0x000008, "Member 'HB_RoadSpline_C_AddPath::StreetValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000010, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue2) == 0x00001C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue2) == 0x000020, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue3) == 0x000024, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue3) == 0x000028, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue4) == 0x00002C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue4) == 0x000030, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue4' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue5) == 0x000034, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue5' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue5) == 0x000038, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue5' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue6) == 0x00003C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue6' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue6) == 0x000040, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue6' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue7) == 0x000044, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue7' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue7) == 0x000048, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue7' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue8) == 0x00004C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue8' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue8) == 0x000050, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue8' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue9) == 0x000054, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue9' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue9) == 0x000058, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue9' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue10) == 0x00005C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue10' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue10) == 0x000060, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue10' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue11) == 0x000064, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue11' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue11) == 0x000068, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue11' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue12) == 0x00006C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue12' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue12) == 0x000070, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue12' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue13) == 0x000074, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue13' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue13) == 0x000078, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue13' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue14) == 0x00007C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue14' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue14) == 0x000080, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue14' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue15) == 0x000084, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue15' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue15) == 0x000088, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue15' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue16) == 0x00008C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue16' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue16) == 0x000090, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue16' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue17) == 0x000094, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue17' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue17) == 0x000098, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue17' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue18) == 0x00009C, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue18' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue18) == 0x0000A0, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue18' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue19) == 0x0000A4, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue19' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue19) == 0x0000A8, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue19' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue20) == 0x0000AC, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue20' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue20) == 0x0000B0, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue20' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue21) == 0x0000B4, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue21' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue21) == 0x0000B8, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue21' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue22) == 0x0000BC, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue22' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue22) == 0x0000C0, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue22' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue23) == 0x0000C4, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue23' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue23) == 0x0000C8, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue23' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_K2_GetScalarParameterValue_ReturnValue24) == 0x0000CC, "Member 'HB_RoadSpline_C_AddPath::CallFunc_K2_GetScalarParameterValue_ReturnValue24' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, CallFunc_FMax_ReturnValue24) == 0x0000D0, "Member 'HB_RoadSpline_C_AddPath::CallFunc_FMax_ReturnValue24' has a wrong offset!");
static_assert(offsetof(HB_RoadSpline_C_AddPath, K2Node_SwitchEnum_CmpSuccess) == 0x0000D4, "Member 'HB_RoadSpline_C_AddPath::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

#pragma pack(pop)
