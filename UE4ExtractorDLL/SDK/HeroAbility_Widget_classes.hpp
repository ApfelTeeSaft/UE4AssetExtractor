#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroAbility_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass HeroAbility_Widget.HeroAbility_Widget_C
// 0x0028 (0x01E0 - 0x01B8)
class UHeroAbility_Widget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UButtonIconText_C*                      _Button__Ability;                                  // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UItemStackCounter_C*                    _StackCounter__Cost;                               // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	bool                                          Is_Active;                                         // 0x01C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityKit*                        Ability_Kit_Data;                                  // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	int32                                         Cost;                                              // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	int32                                         INDEX;                                             // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	UMulticastDelegateProperty_                   OnAbilitySelected;                                 // 0x01D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_HeroAbility_Widget(int32 EntryPoint);
	void Construct();
	class UWidget* Get_Ability_Kit_Tooltip();
	void Update(class UFortAbilityKit* Ability_Kit, int32 Cost_0, bool Is_Active_0);
	void On_Ability_Selected(class UFortBaseButton* Ability_Button, bool SELECTED);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroAbility_Widget_C">();
	}
	static class UHeroAbility_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroAbility_Widget_C>();
	}
};
static_assert(alignof(UHeroAbility_Widget_C) == 0x000004, "Wrong alignment on UHeroAbility_Widget_C");
static_assert(sizeof(UHeroAbility_Widget_C) == 0x0001E0, "Wrong size on UHeroAbility_Widget_C");
static_assert(offsetof(UHeroAbility_Widget_C, UberGraphFrame) == 0x0001B8, "Member 'UHeroAbility_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, _Button__Ability) == 0x0001BC, "Member 'UHeroAbility_Widget_C::_Button__Ability' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, _StackCounter__Cost) == 0x0001C0, "Member 'UHeroAbility_Widget_C::_StackCounter__Cost' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, Is_Active) == 0x0001C4, "Member 'UHeroAbility_Widget_C::Is_Active' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, Ability_Kit_Data) == 0x0001C8, "Member 'UHeroAbility_Widget_C::Ability_Kit_Data' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, Cost) == 0x0001CC, "Member 'UHeroAbility_Widget_C::Cost' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, INDEX) == 0x0001D0, "Member 'UHeroAbility_Widget_C::INDEX' has a wrong offset!");
static_assert(offsetof(UHeroAbility_Widget_C, OnAbilitySelected) == 0x0001D4, "Member 'UHeroAbility_Widget_C::OnAbilitySelected' has a wrong offset!");

}

#pragma pack(pop)
