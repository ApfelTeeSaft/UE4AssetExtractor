#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroCoreAbility_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass HeroCoreAbility_Widget.HeroCoreAbility_Widget_C
// 0x0014 (0x01CC - 0x01B8)
class UHeroCoreAbility_Widget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 _Image__Frame;                                     // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Icon;                                      // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	bool                                          Is_Unlocked;                                       // 0x01C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityKit*                        Ability_Kit_Data;                                  // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_HeroCoreAbility_Widget(int32 EntryPoint);
	void Construct();
	class UWidget* Get_Ability_Kit_Tooltip();
	void Update(class UFortAbilityKit* Ability_Kit, bool Is_Unlocked_0);
	void Invalid_Data();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroCoreAbility_Widget_C">();
	}
	static class UHeroCoreAbility_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroCoreAbility_Widget_C>();
	}
};
static_assert(alignof(UHeroCoreAbility_Widget_C) == 0x000004, "Wrong alignment on UHeroCoreAbility_Widget_C");
static_assert(sizeof(UHeroCoreAbility_Widget_C) == 0x0001CC, "Wrong size on UHeroCoreAbility_Widget_C");
static_assert(offsetof(UHeroCoreAbility_Widget_C, UberGraphFrame) == 0x0001B8, "Member 'UHeroCoreAbility_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroCoreAbility_Widget_C, _Image__Frame) == 0x0001BC, "Member 'UHeroCoreAbility_Widget_C::_Image__Frame' has a wrong offset!");
static_assert(offsetof(UHeroCoreAbility_Widget_C, _Image__Icon) == 0x0001C0, "Member 'UHeroCoreAbility_Widget_C::_Image__Icon' has a wrong offset!");
static_assert(offsetof(UHeroCoreAbility_Widget_C, Is_Unlocked) == 0x0001C4, "Member 'UHeroCoreAbility_Widget_C::Is_Unlocked' has a wrong offset!");
static_assert(offsetof(UHeroCoreAbility_Widget_C, Ability_Kit_Data) == 0x0001C8, "Member 'UHeroCoreAbility_Widget_C::Ability_Kit_Data' has a wrong offset!");

}

#pragma pack(pop)
