#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroInfoWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass HeroInfoWidget.HeroInfoWidget_C
// 0x00A0 (0x02E4 - 0x0244)
class UHeroInfoWidget_C final : public UFortUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0244(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 _Image__Background;                                // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Class_Icon;                                // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Hero_Portrait;                             // 0x0250(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Top_Bevel;                                 // 0x0254(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UProgressBar*                           _ProgressBar__Hero_XP;                             // 0x0258(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__Hero_Level;                                 // 0x025C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__Hero_Name;                                  // 0x0260(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__XP_Until_Next;                              // 0x0264(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         HorizontalBoxCoreStats;                            // 0x0268(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         HorizontalBoxCoreStats2;                           // 0x026C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ImageBackground2;                                  // 0x0270(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ImageClassIcon2;                                   // 0x0274(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ImageHeroPortrait2;                                // 0x0278(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ImageHR;                                           // 0x027C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ImageHR2;                                          // 0x0280(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ImageTopBevel2;                                    // 0x0284(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UOverlay*                               OverlayLargeFormat;                                // 0x0288(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UOverlay*                               OverlaySmallFormat;                                // 0x028C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UProgressBar*                           ProgressBarHeroXP2;                                // 0x0290(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetSwitcher*                        SwitcherFormats;                                   // 0x0294(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             TextHeroLevel2;                                    // 0x0298(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             TextHeroName2;                                     // 0x029C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	struct FHeroUIData                            HeroData;                                          // 0x02A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	UMulticastDelegateProperty_                   OnHeroSelected;                                    // 0x02B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Compact_Version;                                   // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   XPUntilNext;                                       // 0x02C8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Hero_ID;                                           // 0x02D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	bool                                          IsCurrentHero;                                     // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_HeroInfoWidget(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Update();
	void Refresh_Hero_Stats();
	void Refresh_Hero_XP();
	void Refresh_Hero_Info();
	void Bind_Delegates();
	void Refresh_Format();
	class UWidget* Get_XP_Progress_Tooltip();
	void On_Player_Data_Updated();
	void Set_As_Current_Hero(bool IsSelected);
	void Refresh_Hero_ID();
	void OnHeroStatsChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroInfoWidget_C">();
	}
	static class UHeroInfoWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroInfoWidget_C>();
	}
};
static_assert(alignof(UHeroInfoWidget_C) == 0x000004, "Wrong alignment on UHeroInfoWidget_C");
static_assert(sizeof(UHeroInfoWidget_C) == 0x0002E4, "Wrong size on UHeroInfoWidget_C");
static_assert(offsetof(UHeroInfoWidget_C, UberGraphFrame) == 0x000244, "Member 'UHeroInfoWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Image__Background) == 0x000248, "Member 'UHeroInfoWidget_C::_Image__Background' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Image__Class_Icon) == 0x00024C, "Member 'UHeroInfoWidget_C::_Image__Class_Icon' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Image__Hero_Portrait) == 0x000250, "Member 'UHeroInfoWidget_C::_Image__Hero_Portrait' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Image__Top_Bevel) == 0x000254, "Member 'UHeroInfoWidget_C::_Image__Top_Bevel' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _ProgressBar__Hero_XP) == 0x000258, "Member 'UHeroInfoWidget_C::_ProgressBar__Hero_XP' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Text__Hero_Level) == 0x00025C, "Member 'UHeroInfoWidget_C::_Text__Hero_Level' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Text__Hero_Name) == 0x000260, "Member 'UHeroInfoWidget_C::_Text__Hero_Name' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, _Text__XP_Until_Next) == 0x000264, "Member 'UHeroInfoWidget_C::_Text__XP_Until_Next' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, HorizontalBoxCoreStats) == 0x000268, "Member 'UHeroInfoWidget_C::HorizontalBoxCoreStats' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, HorizontalBoxCoreStats2) == 0x00026C, "Member 'UHeroInfoWidget_C::HorizontalBoxCoreStats2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ImageBackground2) == 0x000270, "Member 'UHeroInfoWidget_C::ImageBackground2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ImageClassIcon2) == 0x000274, "Member 'UHeroInfoWidget_C::ImageClassIcon2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ImageHeroPortrait2) == 0x000278, "Member 'UHeroInfoWidget_C::ImageHeroPortrait2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ImageHR) == 0x00027C, "Member 'UHeroInfoWidget_C::ImageHR' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ImageHR2) == 0x000280, "Member 'UHeroInfoWidget_C::ImageHR2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ImageTopBevel2) == 0x000284, "Member 'UHeroInfoWidget_C::ImageTopBevel2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, OverlayLargeFormat) == 0x000288, "Member 'UHeroInfoWidget_C::OverlayLargeFormat' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, OverlaySmallFormat) == 0x00028C, "Member 'UHeroInfoWidget_C::OverlaySmallFormat' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, ProgressBarHeroXP2) == 0x000290, "Member 'UHeroInfoWidget_C::ProgressBarHeroXP2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, SwitcherFormats) == 0x000294, "Member 'UHeroInfoWidget_C::SwitcherFormats' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, TextHeroLevel2) == 0x000298, "Member 'UHeroInfoWidget_C::TextHeroLevel2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, TextHeroName2) == 0x00029C, "Member 'UHeroInfoWidget_C::TextHeroName2' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, HeroData) == 0x0002A0, "Member 'UHeroInfoWidget_C::HeroData' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, OnHeroSelected) == 0x0002B8, "Member 'UHeroInfoWidget_C::OnHeroSelected' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, Compact_Version) == 0x0002C4, "Member 'UHeroInfoWidget_C::Compact_Version' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, XPUntilNext) == 0x0002C8, "Member 'UHeroInfoWidget_C::XPUntilNext' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, Hero_ID) == 0x0002D4, "Member 'UHeroInfoWidget_C::Hero_ID' has a wrong offset!");
static_assert(offsetof(UHeroInfoWidget_C, IsCurrentHero) == 0x0002E0, "Member 'UHeroInfoWidget_C::IsCurrentHero' has a wrong offset!");

}

#pragma pack(pop)
