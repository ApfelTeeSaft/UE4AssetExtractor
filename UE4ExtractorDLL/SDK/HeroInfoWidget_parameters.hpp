#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroInfoWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "HeroCoreStat_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function HeroInfoWidget.HeroInfoWidget_C.ExecuteUbergraph_HeroInfoWidget
// 0x0008 (0x0008 - 0x0000)
struct HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget) == 0x000004, "Wrong alignment on HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget");
static_assert(sizeof(HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget) == 0x000008, "Wrong size on HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget");
static_assert(offsetof(HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget, EntryPoint) == 0x000000, "Member 'HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'HeroInfoWidget_C_ExecuteUbergraph_HeroInfoWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HeroInfoWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_PreConstruct) == 0x000001, "Wrong alignment on HeroInfoWidget_C_PreConstruct");
static_assert(sizeof(HeroInfoWidget_C_PreConstruct) == 0x000001, "Wrong size on HeroInfoWidget_C_PreConstruct");
static_assert(offsetof(HeroInfoWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HeroInfoWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Update
// 0x0020 (0x0020 - 0x0000)
struct HeroInfoWidget_C_Update final
{
public:
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHeroUIData                            CallFunc_GetHeroDataFromID_ReturnValue;            // 0x0004(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Update) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Update");
static_assert(sizeof(HeroInfoWidget_C_Update) == 0x000020, "Wrong size on HeroInfoWidget_C_Update");
static_assert(offsetof(HeroInfoWidget_C_Update, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'HeroInfoWidget_C_Update::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Update, CallFunc_GetHeroDataFromID_ReturnValue) == 0x000004, "Member 'HeroInfoWidget_C_Update::CallFunc_GetHeroDataFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Update, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'HeroInfoWidget_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Refresh Hero Stats
// 0x034C (0x034C - 0x0000)
struct HeroInfoWidget_C_Refresh_Hero_Stats final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHeroCoreStat>                  CallFunc_Get_Core_Stats_By_Hero_ID_Data;           // 0x0004(0x000C)(ZeroConstructor, ReferenceParm)
	TArray<float>                                 CallFunc_Get_Core_Stats_By_Hero_ID_Values;         // 0x0010(0x000C)(ZeroConstructor, ReferenceParm)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)()
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHeroCoreStat                          CallFunc_Array_Get_Item2;                          // 0x0030(0x02D4)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0314(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin2;                         // 0x0324(0x0010)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UInlineHeroCoreStat_C*                  CallFunc_Create_ReturnValue;                       // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UInlineHeroCoreStat_C*                  CallFunc_Create_ReturnValue2;                      // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue2;     // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortBrushSize                                Stat_Icon_Brush_Size;                              // 0x0348(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Refresh_Hero_Stats) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Refresh_Hero_Stats");
static_assert(sizeof(HeroInfoWidget_C_Refresh_Hero_Stats) == 0x00034C, "Wrong size on HeroInfoWidget_C_Refresh_Hero_Stats");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Get_Core_Stats_By_Hero_ID_Data) == 0x000004, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Get_Core_Stats_By_Hero_ID_Data' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Get_Core_Stats_By_Hero_ID_Values) == 0x000010, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Get_Core_Stats_By_Hero_ID_Values' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Array_Get_Item) == 0x00002C, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Array_Get_Item2) == 0x000030, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Array_Length_ReturnValue) == 0x000304, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, Temp_int_Loop_Counter_Variable) == 0x000308, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Less_IntInt_ReturnValue) == 0x00030C, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Add_IntInt_ReturnValue) == 0x000310, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, K2Node_MakeStruct_LinearColor) == 0x000314, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, K2Node_MakeStruct_Margin2) == 0x000324, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::K2Node_MakeStruct_Margin2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_GetOwningPlayer_ReturnValue) == 0x000334, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Create_ReturnValue) == 0x000338, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x00033C, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_Create_ReturnValue2) == 0x000340, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_Create_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, CallFunc_AddChildToHorizontalBox_ReturnValue2) == 0x000344, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::CallFunc_AddChildToHorizontalBox_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Stats, Stat_Icon_Brush_Size) == 0x000348, "Member 'HeroInfoWidget_C_Refresh_Hero_Stats::Stat_Icon_Brush_Size' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Refresh Hero XP
// 0x0080 (0x0080 - 0x0000)
struct HeroInfoWidget_C_Refresh_Hero_XP final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x000C)()
	bool                                          Temp_bool_Variable2;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0024(0x000C)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0034(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x000C)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x000C)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x000C)()
	float                                         K2Node_Select2_Default;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Refresh_Hero_XP) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Refresh_Hero_XP");
static_assert(sizeof(HeroInfoWidget_C_Refresh_Hero_XP) == 0x000080, "Wrong size on HeroInfoWidget_C_Refresh_Hero_XP");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, Temp_bool_Variable) == 0x000000, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, Temp_float_Variable) == 0x000004, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, Temp_text_Variable) == 0x000008, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, Temp_bool_Variable2) == 0x000014, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Conv_IntToText_ReturnValue) == 0x000024, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000030, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, K2Node_MakeStruct_FormatArgumentData) == 0x000034, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Subtract_IntInt_ReturnValue3) == 0x00004C, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, K2Node_MakeArray_Array) == 0x000050, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x00005C, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Format_ReturnValue) == 0x000060, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, K2Node_Select_Default) == 0x000070, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_XP, K2Node_Select2_Default) == 0x00007C, "Member 'HeroInfoWidget_C_Refresh_Hero_XP::K2Node_Select2_Default' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Refresh Hero Info
// 0x018C (0x018C - 0x0000)
struct HeroInfoWidget_C_Refresh_Hero_Info final
{
public:
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetIconBrush_IconBrush;                   // 0x0004(0x0074)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x000C)()
	class UFortHeroType*                          CallFunc_GetHeroTypeBP_ReturnValue;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetIconBrush_IconBrush2;                  // 0x0088(0x0074)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00FC(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x000C)()
	struct FSlateBrush                            CallFunc_GetIconBrush_IconBrush3;                  // 0x0114(0x0074)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Refresh_Hero_Info) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Refresh_Hero_Info");
static_assert(sizeof(HeroInfoWidget_C_Refresh_Hero_Info) == 0x00018C, "Wrong size on HeroInfoWidget_C_Refresh_Hero_Info");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_GetLevel_ReturnValue) == 0x000000, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_GetIconBrush_IconBrush) == 0x000004, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_GetIconBrush_IconBrush' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_GetHeroTypeBP_ReturnValue) == 0x000084, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_GetHeroTypeBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_GetIconBrush_IconBrush2) == 0x000088, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_GetIconBrush_IconBrush2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_Concat_StrStr_ReturnValue) == 0x0000FC, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_GetIconBrush_IconBrush3) == 0x000114, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_GetIconBrush_IconBrush3' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_Info, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'HeroInfoWidget_C_Refresh_Hero_Info::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Bind Delegates
// 0x0024 (0x0024 - 0x0000)
struct HeroInfoWidget_C_Bind_Delegates final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Bind_Delegates) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Bind_Delegates");
static_assert(sizeof(HeroInfoWidget_C_Bind_Delegates) == 0x000024, "Wrong size on HeroInfoWidget_C_Bind_Delegates");
static_assert(offsetof(HeroInfoWidget_C_Bind_Delegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'HeroInfoWidget_C_Bind_Delegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Bind_Delegates, K2Node_CreateDelegate_OutputDelegate2) == 0x000010, "Member 'HeroInfoWidget_C_Bind_Delegates::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Bind_Delegates, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'HeroInfoWidget_C_Bind_Delegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Refresh Format
// 0x0008 (0x0008 - 0x0000)
struct HeroInfoWidget_C_Refresh_Format final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Refresh_Format) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Refresh_Format");
static_assert(sizeof(HeroInfoWidget_C_Refresh_Format) == 0x000008, "Wrong size on HeroInfoWidget_C_Refresh_Format");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Format, Temp_bool_Variable) == 0x000000, "Member 'HeroInfoWidget_C_Refresh_Format::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Format, K2Node_Select_Default) == 0x000004, "Member 'HeroInfoWidget_C_Refresh_Format::K2Node_Select_Default' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Get XP Progress Tooltip
// 0x000C (0x000C - 0x0000)
struct HeroInfoWidget_C_Get_XP_Progress_Tooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Get_XP_Progress_Tooltip) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Get_XP_Progress_Tooltip");
static_assert(sizeof(HeroInfoWidget_C_Get_XP_Progress_Tooltip) == 0x00000C, "Wrong size on HeroInfoWidget_C_Get_XP_Progress_Tooltip");
static_assert(offsetof(HeroInfoWidget_C_Get_XP_Progress_Tooltip, ReturnValue) == 0x000000, "Member 'HeroInfoWidget_C_Get_XP_Progress_Tooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Get_XP_Progress_Tooltip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000004, "Member 'HeroInfoWidget_C_Get_XP_Progress_Tooltip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Get_XP_Progress_Tooltip, CallFunc_Create_Basic_Tooltip_Output) == 0x000008, "Member 'HeroInfoWidget_C_Get_XP_Progress_Tooltip::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Set As Current Hero
// 0x0010 (0x0010 - 0x0000)
struct HeroInfoWidget_C_Set_As_Current_Hero final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable2;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Set_As_Current_Hero) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Set_As_Current_Hero");
static_assert(sizeof(HeroInfoWidget_C_Set_As_Current_Hero) == 0x000010, "Wrong size on HeroInfoWidget_C_Set_As_Current_Hero");
static_assert(offsetof(HeroInfoWidget_C_Set_As_Current_Hero, IsSelected) == 0x000000, "Member 'HeroInfoWidget_C_Set_As_Current_Hero::IsSelected' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Set_As_Current_Hero, Temp_bool_Variable) == 0x000001, "Member 'HeroInfoWidget_C_Set_As_Current_Hero::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Set_As_Current_Hero, Temp_float_Variable) == 0x000004, "Member 'HeroInfoWidget_C_Set_As_Current_Hero::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Set_As_Current_Hero, Temp_float_Variable2) == 0x000008, "Member 'HeroInfoWidget_C_Set_As_Current_Hero::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Set_As_Current_Hero, K2Node_Select_Default) == 0x00000C, "Member 'HeroInfoWidget_C_Set_As_Current_Hero::K2Node_Select_Default' has a wrong offset!");

// Function HeroInfoWidget.HeroInfoWidget_C.Refresh Hero ID
// 0x0014 (0x0014 - 0x0000)
struct HeroInfoWidget_C_Refresh_Hero_ID final
{
public:
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetCurrentHeroID_HeroID;                  // 0x0004(0x000C)(ZeroConstructor)
	bool                                          CallFunc_GetCurrentHeroID_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroInfoWidget_C_Refresh_Hero_ID) == 0x000004, "Wrong alignment on HeroInfoWidget_C_Refresh_Hero_ID");
static_assert(sizeof(HeroInfoWidget_C_Refresh_Hero_ID) == 0x000014, "Wrong size on HeroInfoWidget_C_Refresh_Hero_ID");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_ID, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'HeroInfoWidget_C_Refresh_Hero_ID::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_ID, CallFunc_GetCurrentHeroID_HeroID) == 0x000004, "Member 'HeroInfoWidget_C_Refresh_Hero_ID::CallFunc_GetCurrentHeroID_HeroID' has a wrong offset!");
static_assert(offsetof(HeroInfoWidget_C_Refresh_Hero_ID, CallFunc_GetCurrentHeroID_ReturnValue) == 0x000010, "Member 'HeroInfoWidget_C_Refresh_Hero_ID::CallFunc_GetCurrentHeroID_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
