#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroListWidget

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function HeroListWidget.HeroListWidget_C.ExecuteUbergraph_HeroListWidget
// 0x0038 (0x0038 - 0x0000)
struct HeroListWidget_C_ExecuteUbergraph_HeroListWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(bool bSuccess)>                K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bSuccess)>                K2Node_CreateDelegate_OutputDelegate3;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget) == 0x000004, "Wrong alignment on HeroListWidget_C_ExecuteUbergraph_HeroListWidget");
static_assert(sizeof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget) == 0x000038, "Wrong size on HeroListWidget_C_ExecuteUbergraph_HeroListWidget");
static_assert(offsetof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget, EntryPoint) == 0x000000, "Member 'HeroListWidget_C_ExecuteUbergraph_HeroListWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'HeroListWidget_C_ExecuteUbergraph_HeroListWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget, CallFunc_GetContext_ReturnValue) == 0x000014, "Member 'HeroListWidget_C_ExecuteUbergraph_HeroListWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'HeroListWidget_C_ExecuteUbergraph_HeroListWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_ExecuteUbergraph_HeroListWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000028, "Member 'HeroListWidget_C_ExecuteUbergraph_HeroListWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");

// Function HeroListWidget.HeroListWidget_C.On Hero Selected
// 0x0034 (0x0034 - 0x0000)
struct HeroListWidget_C_On_Hero_Selected final
{
public:
	class UFortBaseButton*                        Hero_List_Item;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SELECTED;                                          // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHeroListItemWidget_C*                  K2Node_DynamicCast_AsHero_List_Item_Widget;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHeroUIData                            CallFunc_GetHeroData_HeroData;                     // 0x0018(0x0018)()
	bool                                          CallFunc_GetHeroData_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentHero_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroListWidget_C_On_Hero_Selected) == 0x000004, "Wrong alignment on HeroListWidget_C_On_Hero_Selected");
static_assert(sizeof(HeroListWidget_C_On_Hero_Selected) == 0x000034, "Wrong size on HeroListWidget_C_On_Hero_Selected");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, Hero_List_Item) == 0x000000, "Member 'HeroListWidget_C_On_Hero_Selected::Hero_List_Item' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, SELECTED) == 0x000004, "Member 'HeroListWidget_C_On_Hero_Selected::SELECTED' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'HeroListWidget_C_On_Hero_Selected::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, K2Node_DynamicCast_AsHero_List_Item_Widget) == 0x00000C, "Member 'HeroListWidget_C_On_Hero_Selected::K2Node_DynamicCast_AsHero_List_Item_Widget' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'HeroListWidget_C_On_Hero_Selected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, CallFunc_GetContext_ReturnValue2) == 0x000014, "Member 'HeroListWidget_C_On_Hero_Selected::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, CallFunc_GetHeroData_HeroData) == 0x000018, "Member 'HeroListWidget_C_On_Hero_Selected::CallFunc_GetHeroData_HeroData' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, CallFunc_GetHeroData_ReturnValue) == 0x000030, "Member 'HeroListWidget_C_On_Hero_Selected::CallFunc_GetHeroData_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_On_Hero_Selected, CallFunc_SetCurrentHero_ReturnValue) == 0x000031, "Member 'HeroListWidget_C_On_Hero_Selected::CallFunc_SetCurrentHero_ReturnValue' has a wrong offset!");

// Function HeroListWidget.HeroListWidget_C.Update Hero List
// 0x0068 (0x0068 - 0x0000)
struct HeroListWidget_C_Update_Hero_List final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHeroListItemWidget_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FString>                         CallFunc_GetAllHeroIDs_ReturnValue;                // 0x0020(0x000C)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item2;                          // 0x0030(0x000C)(ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UFortBaseButton* Button, bool SELECTED)> K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	class UHeroListItemWidget_C*                  CallFunc_Create_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroListWidget_C_Update_Hero_List) == 0x000004, "Wrong alignment on HeroListWidget_C_Update_Hero_List");
static_assert(sizeof(HeroListWidget_C_Update_Hero_List) == 0x000068, "Wrong size on HeroListWidget_C_Update_Hero_List");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HeroListWidget_C_Update_Hero_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'HeroListWidget_C_Update_Hero_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, Temp_int_Array_Index_Variable2) == 0x00000C, "Member 'HeroListWidget_C_Update_Hero_List::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Array_Get_Item) == 0x000010, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, Temp_int_Loop_Counter_Variable2) == 0x000018, "Member 'HeroListWidget_C_Update_Hero_List::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_GetContext_ReturnValue) == 0x00001C, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_GetAllHeroIDs_ReturnValue) == 0x000020, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_GetAllHeroIDs_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Array_Get_Item2) == 0x000030, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Array_Length_ReturnValue2) == 0x00003C, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Add_IntInt_ReturnValue2) == 0x000040, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Less_IntInt_ReturnValue2) == 0x000044, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'HeroListWidget_C_Update_Hero_List::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Create_ReturnValue) == 0x00005C, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Update_Hero_List, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000064, "Member 'HeroListWidget_C_Update_Hero_List::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function HeroListWidget.HeroListWidget_C.Refresh Hero List
// 0x0038 (0x0038 - 0x0000)
struct HeroListWidget_C_Refresh_Hero_List final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortHeroManagementContext*             CallFunc_GetContext_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHeroListItemWidget_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetCurrentHeroID_HeroID;                  // 0x0014(0x000C)(ZeroConstructor)
	bool                                          CallFunc_GetCurrentHeroID_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Hero_ID;                                           // 0x002C(0x000C)(Edit, ZeroConstructor)
};
static_assert(alignof(HeroListWidget_C_Refresh_Hero_List) == 0x000004, "Wrong alignment on HeroListWidget_C_Refresh_Hero_List");
static_assert(sizeof(HeroListWidget_C_Refresh_Hero_List) == 0x000038, "Wrong size on HeroListWidget_C_Refresh_Hero_List");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HeroListWidget_C_Refresh_Hero_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'HeroListWidget_C_Refresh_Hero_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_GetContext_ReturnValue) == 0x00000C, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_Array_Get_Item) == 0x000010, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_GetCurrentHeroID_HeroID) == 0x000014, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_GetCurrentHeroID_HeroID' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_GetCurrentHeroID_ReturnValue) == 0x000020, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_GetCurrentHeroID_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000028, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'HeroListWidget_C_Refresh_Hero_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Refresh_Hero_List, Hero_ID) == 0x00002C, "Member 'HeroListWidget_C_Refresh_Hero_List::Hero_ID' has a wrong offset!");

// Function HeroListWidget.HeroListWidget_C.Set Tab Group Name
// 0x0024 (0x0024 - 0x0000)
struct HeroListWidget_C_Set_Tab_Group_Name final
{
public:
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0004(0x000C)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x000C)(ZeroConstructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroListWidget_C_Set_Tab_Group_Name) == 0x000004, "Wrong alignment on HeroListWidget_C_Set_Tab_Group_Name");
static_assert(sizeof(HeroListWidget_C_Set_Tab_Group_Name) == 0x000024, "Wrong size on HeroListWidget_C_Set_Tab_Group_Name");
static_assert(offsetof(HeroListWidget_C_Set_Tab_Group_Name, CallFunc_RandomInteger_ReturnValue) == 0x000000, "Member 'HeroListWidget_C_Set_Tab_Group_Name::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Set_Tab_Group_Name, CallFunc_Conv_IntToString_ReturnValue) == 0x000004, "Member 'HeroListWidget_C_Set_Tab_Group_Name::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Set_Tab_Group_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'HeroListWidget_C_Set_Tab_Group_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroListWidget_C_Set_Tab_Group_Name, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'HeroListWidget_C_Set_Tab_Group_Name::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function HeroListWidget.HeroListWidget_C.On Hero Created
// 0x0001 (0x0001 - 0x0000)
struct HeroListWidget_C_On_Hero_Created final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroListWidget_C_On_Hero_Created) == 0x000001, "Wrong alignment on HeroListWidget_C_On_Hero_Created");
static_assert(sizeof(HeroListWidget_C_On_Hero_Created) == 0x000001, "Wrong size on HeroListWidget_C_On_Hero_Created");
static_assert(offsetof(HeroListWidget_C_On_Hero_Created, Success) == 0x000000, "Member 'HeroListWidget_C_On_Hero_Created::Success' has a wrong offset!");

// Function HeroListWidget.HeroListWidget_C.On Hero Deleted
// 0x0001 (0x0001 - 0x0000)
struct HeroListWidget_C_On_Hero_Deleted final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroListWidget_C_On_Hero_Deleted) == 0x000001, "Wrong alignment on HeroListWidget_C_On_Hero_Deleted");
static_assert(sizeof(HeroListWidget_C_On_Hero_Deleted) == 0x000001, "Wrong size on HeroListWidget_C_On_Hero_Deleted");
static_assert(offsetof(HeroListWidget_C_On_Hero_Deleted, Success) == 0x000000, "Member 'HeroListWidget_C_On_Hero_Deleted::Success' has a wrong offset!");

}

#pragma pack(pop)
