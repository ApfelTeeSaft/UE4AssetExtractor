#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroTrait_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass HeroTrait_Widget.HeroTrait_Widget_C
// 0x0040 (0x01F8 - 0x01B8)
class UHeroTrait_Widget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UHeroAbility_Widget_C*                  _Ability__1;                                       // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHeroAbility_Widget_C*                  _Ability__2;                                       // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHeroAbility_Widget_C*                  _Ability__3;                                       // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHeroAbility_Widget_C*                  _Ability__4;                                       // 0x01C8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHeroAbility_Widget_C*                  _Ability__5;                                       // 0x01CC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Trait_Base;                                // 0x01D0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Trait_Icon;                                // 0x01D4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UFortTrait*                             Trait_Data;                                        // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	int32                                         Trait_Index;                                       // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	TArray<class UHeroAbility_Widget_C*>          Ability_Widgets;                                   // 0x01E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	UMulticastDelegateProperty_                   OnRequestSetTraitDepth;                            // 0x01EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_HeroTrait_Widget(int32 EntryPoint);
	void Construct();
	void Update(class UFortTrait* Trait, int32 INDEX);
	class UWidget* Get_Primary_Trait_Tooltip();
	void On_Ability_Selected(int32 INDEX, bool SELECTED);
	void Refresh();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroTrait_Widget_C">();
	}
	static class UHeroTrait_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroTrait_Widget_C>();
	}
};
static_assert(alignof(UHeroTrait_Widget_C) == 0x000004, "Wrong alignment on UHeroTrait_Widget_C");
static_assert(sizeof(UHeroTrait_Widget_C) == 0x0001F8, "Wrong size on UHeroTrait_Widget_C");
static_assert(offsetof(UHeroTrait_Widget_C, UberGraphFrame) == 0x0001B8, "Member 'UHeroTrait_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Ability__1) == 0x0001BC, "Member 'UHeroTrait_Widget_C::_Ability__1' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Ability__2) == 0x0001C0, "Member 'UHeroTrait_Widget_C::_Ability__2' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Ability__3) == 0x0001C4, "Member 'UHeroTrait_Widget_C::_Ability__3' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Ability__4) == 0x0001C8, "Member 'UHeroTrait_Widget_C::_Ability__4' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Ability__5) == 0x0001CC, "Member 'UHeroTrait_Widget_C::_Ability__5' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Image__Trait_Base) == 0x0001D0, "Member 'UHeroTrait_Widget_C::_Image__Trait_Base' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, _Image__Trait_Icon) == 0x0001D4, "Member 'UHeroTrait_Widget_C::_Image__Trait_Icon' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, Trait_Data) == 0x0001D8, "Member 'UHeroTrait_Widget_C::Trait_Data' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, Trait_Index) == 0x0001DC, "Member 'UHeroTrait_Widget_C::Trait_Index' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, Ability_Widgets) == 0x0001E0, "Member 'UHeroTrait_Widget_C::Ability_Widgets' has a wrong offset!");
static_assert(offsetof(UHeroTrait_Widget_C, OnRequestSetTraitDepth) == 0x0001EC, "Member 'UHeroTrait_Widget_C::OnRequestSetTraitDepth' has a wrong offset!");

}

#pragma pack(pop)
