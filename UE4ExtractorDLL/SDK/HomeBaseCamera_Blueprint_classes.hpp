#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HomeBaseCamera_Blueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass HomeBaseCamera_Blueprint.HomeBaseCamera_Blueprint_C
// 0x0068 (0x0670 - 0x0608)
class AHomeBaseCamera_Blueprint_C final : public AFortHomeBaseCamera
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         ZoomInTimeline_FloatCurve_5A99B70D8F48CC5A3D3C728E9EC54B4E; // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            ZoomInTimeline__Direction_5A99B70D8F48CC5A3D3C728E9EC54B4E; // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ZoomInTimeline;                                    // 0x0614(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ZoomOutTimeline_FloatCurve_F8D27584BD4A57F03BE072B7A9D31232; // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            ZoomOutTimeline__Direction_F8D27584BD4A57F03BE072B7A9D31232; // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ZoomOutTimeline;                                   // 0x0620(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ZoomLevel;                                         // 0x0624(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MouseDown;                                         // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LerpPos;                                           // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PreviousLocation;                                  // 0x0630(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PreviousRotation;                                  // 0x063C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PreviousFOV;                                       // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LerpFromLocation;                                  // 0x064C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LerpFromRotation;                                  // 0x0658(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LerpFromFOV;                                       // 0x0664(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class APostProcessVolume*                     Volume;                                            // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          LoggedIn;                                          // 0x066C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFocused;                                         // 0x066D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HomeBaseCamera_Blueprint(int32 EntryPoint);
	void OnDragEnd();
	void OnDragBegin();
	void BP_Clear_Focus();
	void SetBuildingFocus(class UCameraComponent* BuildingCameraComponent);
	void ClearBuildingFocus();
	void ReceiveBeginPlay();
	void OnDeactivated();
	void OnActivated();
	void ReceiveTick(float DeltaSeconds);
	void InpActEvt_MouseScrollDown_UniqueObjectNameForCooking_30(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_UniqueObjectNameForCooking_31(const struct FKey& Key);
	void ZoomOutTimeline__UpdateFunc();
	void ZoomOutTimeline__FinishedFunc();
	void ZoomInTimeline__UpdateFunc();
	void ZoomInTimeline__FinishedFunc();
	void UserConstructionScript();
	void StoreLerpFrom();
	void StorePrevious();
	void IsBusy(bool* IsBusy_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HomeBaseCamera_Blueprint_C">();
	}
	static class AHomeBaseCamera_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHomeBaseCamera_Blueprint_C>();
	}
};
static_assert(alignof(AHomeBaseCamera_Blueprint_C) == 0x000004, "Wrong alignment on AHomeBaseCamera_Blueprint_C");
static_assert(sizeof(AHomeBaseCamera_Blueprint_C) == 0x000670, "Wrong size on AHomeBaseCamera_Blueprint_C");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, UberGraphFrame) == 0x000608, "Member 'AHomeBaseCamera_Blueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomInTimeline_FloatCurve_5A99B70D8F48CC5A3D3C728E9EC54B4E) == 0x00060C, "Member 'AHomeBaseCamera_Blueprint_C::ZoomInTimeline_FloatCurve_5A99B70D8F48CC5A3D3C728E9EC54B4E' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomInTimeline__Direction_5A99B70D8F48CC5A3D3C728E9EC54B4E) == 0x000610, "Member 'AHomeBaseCamera_Blueprint_C::ZoomInTimeline__Direction_5A99B70D8F48CC5A3D3C728E9EC54B4E' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomInTimeline) == 0x000614, "Member 'AHomeBaseCamera_Blueprint_C::ZoomInTimeline' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomOutTimeline_FloatCurve_F8D27584BD4A57F03BE072B7A9D31232) == 0x000618, "Member 'AHomeBaseCamera_Blueprint_C::ZoomOutTimeline_FloatCurve_F8D27584BD4A57F03BE072B7A9D31232' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomOutTimeline__Direction_F8D27584BD4A57F03BE072B7A9D31232) == 0x00061C, "Member 'AHomeBaseCamera_Blueprint_C::ZoomOutTimeline__Direction_F8D27584BD4A57F03BE072B7A9D31232' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomOutTimeline) == 0x000620, "Member 'AHomeBaseCamera_Blueprint_C::ZoomOutTimeline' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, ZoomLevel) == 0x000624, "Member 'AHomeBaseCamera_Blueprint_C::ZoomLevel' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, MouseDown) == 0x000628, "Member 'AHomeBaseCamera_Blueprint_C::MouseDown' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, LerpPos) == 0x00062C, "Member 'AHomeBaseCamera_Blueprint_C::LerpPos' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, PreviousLocation) == 0x000630, "Member 'AHomeBaseCamera_Blueprint_C::PreviousLocation' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, PreviousRotation) == 0x00063C, "Member 'AHomeBaseCamera_Blueprint_C::PreviousRotation' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, PreviousFOV) == 0x000648, "Member 'AHomeBaseCamera_Blueprint_C::PreviousFOV' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, LerpFromLocation) == 0x00064C, "Member 'AHomeBaseCamera_Blueprint_C::LerpFromLocation' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, LerpFromRotation) == 0x000658, "Member 'AHomeBaseCamera_Blueprint_C::LerpFromRotation' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, LerpFromFOV) == 0x000664, "Member 'AHomeBaseCamera_Blueprint_C::LerpFromFOV' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, Volume) == 0x000668, "Member 'AHomeBaseCamera_Blueprint_C::Volume' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, LoggedIn) == 0x00066C, "Member 'AHomeBaseCamera_Blueprint_C::LoggedIn' has a wrong offset!");
static_assert(offsetof(AHomeBaseCamera_Blueprint_C, IsFocused) == 0x00066D, "Member 'AHomeBaseCamera_Blueprint_C::IsFocused' has a wrong offset!");

}

#pragma pack(pop)
