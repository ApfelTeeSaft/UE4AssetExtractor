#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InlineHeroCoreStat

#include "Basic.hpp"

#include "HeroCoreStat_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function InlineHeroCoreStat.InlineHeroCoreStat_C.ExecuteUbergraph_InlineHeroCoreStat
// 0x0004 (0x0004 - 0x0000)
struct InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat) == 0x000004, "Wrong alignment on InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat");
static_assert(sizeof(InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat) == 0x000004, "Wrong size on InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat");
static_assert(offsetof(InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat, EntryPoint) == 0x000000, "Member 'InlineHeroCoreStat_C_ExecuteUbergraph_InlineHeroCoreStat::EntryPoint' has a wrong offset!");

// Function InlineHeroCoreStat.InlineHeroCoreStat_C.Update
// 0x0384 (0x0384 - 0x0000)
struct InlineHeroCoreStat_C_Update final
{
public:
	struct FHeroCoreStat                          Data_0;                                            // 0x0000(0x02D4)(Parm)
	float                                         Value_0;                                           // 0x02D4(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortBrushSize                                Brush_Size_0;                                      // 0x02D8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue; // 0x02DC(0x0074)(ConstParm)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0350(0x000C)()
	struct FSlateFontInfo                         CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue; // 0x035C(0x0028)(ConstParm)
};
static_assert(alignof(InlineHeroCoreStat_C_Update) == 0x000004, "Wrong alignment on InlineHeroCoreStat_C_Update");
static_assert(sizeof(InlineHeroCoreStat_C_Update) == 0x000384, "Wrong size on InlineHeroCoreStat_C_Update");
static_assert(offsetof(InlineHeroCoreStat_C_Update, Data_0) == 0x000000, "Member 'InlineHeroCoreStat_C_Update::Data_0' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Update, Value_0) == 0x0002D4, "Member 'InlineHeroCoreStat_C_Update::Value_0' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Update, Brush_Size_0) == 0x0002D8, "Member 'InlineHeroCoreStat_C_Update::Brush_Size_0' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Update, CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue) == 0x0002DC, "Member 'InlineHeroCoreStat_C_Update::CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Update, CallFunc_Conv_FloatToText_ReturnValue) == 0x000350, "Member 'InlineHeroCoreStat_C_Update::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Update, CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue) == 0x00035C, "Member 'InlineHeroCoreStat_C_Update::CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue' has a wrong offset!");

// Function InlineHeroCoreStat.InlineHeroCoreStat_C.Get Tooltip Widget
// 0x000C (0x000C - 0x0000)
struct InlineHeroCoreStat_C_Get_Tooltip_Widget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_Create_Core_Stat_Tooltip_Output;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InlineHeroCoreStat_C_Get_Tooltip_Widget) == 0x000004, "Wrong alignment on InlineHeroCoreStat_C_Get_Tooltip_Widget");
static_assert(sizeof(InlineHeroCoreStat_C_Get_Tooltip_Widget) == 0x00000C, "Wrong size on InlineHeroCoreStat_C_Get_Tooltip_Widget");
static_assert(offsetof(InlineHeroCoreStat_C_Get_Tooltip_Widget, ReturnValue) == 0x000000, "Member 'InlineHeroCoreStat_C_Get_Tooltip_Widget::ReturnValue' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Get_Tooltip_Widget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000004, "Member 'InlineHeroCoreStat_C_Get_Tooltip_Widget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(InlineHeroCoreStat_C_Get_Tooltip_Widget, CallFunc_Create_Core_Stat_Tooltip_Output) == 0x000008, "Member 'InlineHeroCoreStat_C_Get_Tooltip_Widget::CallFunc_Create_Core_Stat_Tooltip_Output' has a wrong offset!");

}

#pragma pack(pop)
