#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemBadge

#include "Basic.hpp"

#include "ItemTierIconSet_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "ItemDisplayStyle_structs.hpp"
#include "ItemDisplayMode_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass ItemBadge.ItemBadge_C
// 0x0B68 (0x0D20 - 0x01B8)
class UItemBadge_C final : public UUserWidget
{
public:
	class UVerticalBox*                           _Vertical_Box_;                                    // 0x01B8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Accent;                                            // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Base;                                              // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UItemLevelBadge_C*                      ItemLevelBadge;                                    // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UOverlay*                               Main_Overlay;                                      // 0x01C8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Tier_Icon;                                         // 0x01CC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	struct FItemTierIconSet                       TierIconSet;                                       // 0x01D0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortMultiSizeBrush                    TierBaseMultiBrush;                                // 0x01DC(0x02B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortMultiSizeBrush                    TierAccentMultiBrush;                              // 0x0494(0x02B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortMultiSizeMargin                   TierMultiMargin;                                   // 0x074C(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortMultiSizeBrush                    WorkerMultiBrush;                                  // 0x07AC(0x02B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortMultiSizeBrush                    ManagerMultiBrush;                                 // 0x0A64(0x02B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	EFortBrushSize                                Brush_Size;                                        // 0x0D1C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Update(EFortBrushSize Brush_Size_0, EItemDisplayStyle Display_Style, EItemDisplayMode Display_Mode, const struct FFortRarityItemData& RarityData, class UFortItem* Item_Data);
	void Refresh(class UFortItem* Item_Data, EItemDisplayStyle Display_Style, EItemDisplayMode Display_Mode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemBadge_C">();
	}
	static class UItemBadge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemBadge_C>();
	}
};
static_assert(alignof(UItemBadge_C) == 0x000004, "Wrong alignment on UItemBadge_C");
static_assert(sizeof(UItemBadge_C) == 0x000D20, "Wrong size on UItemBadge_C");
static_assert(offsetof(UItemBadge_C, _Vertical_Box_) == 0x0001B8, "Member 'UItemBadge_C::_Vertical_Box_' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, Accent) == 0x0001BC, "Member 'UItemBadge_C::Accent' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, Base) == 0x0001C0, "Member 'UItemBadge_C::Base' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, ItemLevelBadge) == 0x0001C4, "Member 'UItemBadge_C::ItemLevelBadge' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, Main_Overlay) == 0x0001C8, "Member 'UItemBadge_C::Main_Overlay' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, Tier_Icon) == 0x0001CC, "Member 'UItemBadge_C::Tier_Icon' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, TierIconSet) == 0x0001D0, "Member 'UItemBadge_C::TierIconSet' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, TierBaseMultiBrush) == 0x0001DC, "Member 'UItemBadge_C::TierBaseMultiBrush' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, TierAccentMultiBrush) == 0x000494, "Member 'UItemBadge_C::TierAccentMultiBrush' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, TierMultiMargin) == 0x00074C, "Member 'UItemBadge_C::TierMultiMargin' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, WorkerMultiBrush) == 0x0007AC, "Member 'UItemBadge_C::WorkerMultiBrush' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, ManagerMultiBrush) == 0x000A64, "Member 'UItemBadge_C::ManagerMultiBrush' has a wrong offset!");
static_assert(offsetof(UItemBadge_C, Brush_Size) == 0x000D1C, "Member 'UItemBadge_C::Brush_Size' has a wrong offset!");

}

#pragma pack(pop)
