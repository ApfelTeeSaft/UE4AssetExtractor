#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCooldownMeter

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass ItemCooldownMeter.ItemCooldownMeter_C
// 0x0160 (0x0318 - 0x01B8)
class UItemCooldownMeter_C final : public UUserWidget
{
public:
	class UImage*                                 _Image__Backfill;                                  // 0x01B8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Overfill;                                  // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class USizeBox*                               _SizeBox_;                                         // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__Clock;                                      // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	struct FFortMultiSizeFont                     MultiSizeFont;                                     // 0x01C8(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortMultiSizeMargin                   MultiSizeMargin;                                   // 0x02B8(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Update(EFortBrushSize Brush_Size, const struct FTimespan& Time_Left, float Percentage);
	void Set_Cooldown(const struct FTimespan& Time_Left, float Percentage);
	int32 GetSecondsCorrectedMinutes(int32 Minutes, int32 Seconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemCooldownMeter_C">();
	}
	static class UItemCooldownMeter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemCooldownMeter_C>();
	}
};
static_assert(alignof(UItemCooldownMeter_C) == 0x000004, "Wrong alignment on UItemCooldownMeter_C");
static_assert(sizeof(UItemCooldownMeter_C) == 0x000318, "Wrong size on UItemCooldownMeter_C");
static_assert(offsetof(UItemCooldownMeter_C, _Image__Backfill) == 0x0001B8, "Member 'UItemCooldownMeter_C::_Image__Backfill' has a wrong offset!");
static_assert(offsetof(UItemCooldownMeter_C, _Image__Overfill) == 0x0001BC, "Member 'UItemCooldownMeter_C::_Image__Overfill' has a wrong offset!");
static_assert(offsetof(UItemCooldownMeter_C, _SizeBox_) == 0x0001C0, "Member 'UItemCooldownMeter_C::_SizeBox_' has a wrong offset!");
static_assert(offsetof(UItemCooldownMeter_C, _Text__Clock) == 0x0001C4, "Member 'UItemCooldownMeter_C::_Text__Clock' has a wrong offset!");
static_assert(offsetof(UItemCooldownMeter_C, MultiSizeFont) == 0x0001C8, "Member 'UItemCooldownMeter_C::MultiSizeFont' has a wrong offset!");
static_assert(offsetof(UItemCooldownMeter_C, MultiSizeMargin) == 0x0002B8, "Member 'UItemCooldownMeter_C::MultiSizeMargin' has a wrong offset!");

}

#pragma pack(pop)
