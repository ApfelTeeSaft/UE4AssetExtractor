#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCooldownMeter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function ItemCooldownMeter.ItemCooldownMeter_C.Update
// 0x005C (0x005C - 0x0000)
struct ItemCooldownMeter_C_Update final
{
public:
	EFortBrushSize                                Brush_Size;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              Time_Left;                                         // 0x0004(0x0008)(Parm, ZeroConstructor)
	float                                         Percentage;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateFontInfo                         CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue; // 0x0010(0x0028)(ConstParm)
	struct FVector2D                              CallFunc_Get_Item_Icon_Size_Icon_Size;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue; // 0x0048(0x0010)(ConstParm)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemCooldownMeter_C_Update) == 0x000004, "Wrong alignment on ItemCooldownMeter_C_Update");
static_assert(sizeof(ItemCooldownMeter_C_Update) == 0x00005C, "Wrong size on ItemCooldownMeter_C_Update");
static_assert(offsetof(ItemCooldownMeter_C_Update, Brush_Size) == 0x000000, "Member 'ItemCooldownMeter_C_Update::Brush_Size' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, Time_Left) == 0x000004, "Member 'ItemCooldownMeter_C_Update::Time_Left' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, Percentage) == 0x00000C, "Member 'ItemCooldownMeter_C_Update::Percentage' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue) == 0x000010, "Member 'ItemCooldownMeter_C_Update::CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, CallFunc_Get_Item_Icon_Size_Icon_Size) == 0x000038, "Member 'ItemCooldownMeter_C_Update::CallFunc_Get_Item_Icon_Size_Icon_Size' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, CallFunc_BreakVector2D_X) == 0x000040, "Member 'ItemCooldownMeter_C_Update::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'ItemCooldownMeter_C_Update::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue) == 0x000048, "Member 'ItemCooldownMeter_C_Update::CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Update, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000058, "Member 'ItemCooldownMeter_C_Update::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function ItemCooldownMeter.ItemCooldownMeter_C.Set Cooldown
// 0x00D0 (0x00D0 - 0x0000)
struct ItemCooldownMeter_C_Set_Cooldown final
{
public:
	struct FTimespan                              Time_Left;                                         // 0x0000(0x0008)(Parm, ZeroConstructor)
	float                                         Percentage;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor)
	int32                                         CallFunc_GetSecondsCorrectedMinutes_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x000C)(ZeroConstructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0044(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x000C)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x005C(0x000C)(ZeroConstructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x006C(0x000C)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue3;            // 0x0078(0x000C)(ZeroConstructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0088(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue3;           // 0x0094(0x000C)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue4;            // 0x00A0(0x000C)(ZeroConstructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue4;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00B0(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue4;           // 0x00BC(0x000C)()
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemCooldownMeter_C_Set_Cooldown) == 0x000004, "Wrong alignment on ItemCooldownMeter_C_Set_Cooldown");
static_assert(sizeof(ItemCooldownMeter_C_Set_Cooldown) == 0x0000D0, "Wrong size on ItemCooldownMeter_C_Set_Cooldown");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, Time_Left) == 0x000000, "Member 'ItemCooldownMeter_C_Set_Cooldown::Time_Left' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, Percentage) == 0x000008, "Member 'ItemCooldownMeter_C_Set_Cooldown::Percentage' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, Temp_byte_Variable) == 0x00000C, "Member 'ItemCooldownMeter_C_Set_Cooldown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000D, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_BreakTimespan_Days) == 0x000010, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_BreakTimespan_Hours) == 0x000014, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_BreakTimespan_Minutes) == 0x000018, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_BreakTimespan_Seconds) == 0x00001C, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_BreakTimespan_Milliseconds) == 0x000020, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, Temp_byte_Variable2) == 0x000024, "Member 'ItemCooldownMeter_C_Set_Cooldown::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Greater_IntInt_ReturnValue) == 0x000025, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_GetSecondsCorrectedMinutes_ReturnValue) == 0x000034, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_GetSecondsCorrectedMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_IntToString_ReturnValue2) == 0x000044, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Concat_StrStr_ReturnValue2) == 0x00005C, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Greater_IntInt_ReturnValue2) == 0x000068, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_StringToText_ReturnValue2) == 0x00006C, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_IntToString_ReturnValue3) == 0x000078, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_IntToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Greater_IntInt_ReturnValue3) == 0x000084, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Concat_StrStr_ReturnValue3) == 0x000088, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_StringToText_ReturnValue3) == 0x000094, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_StringToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_IntToString_ReturnValue4) == 0x0000A0, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_IntToString_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Greater_IntInt_ReturnValue4) == 0x0000AC, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Greater_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000B0, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_Conv_StringToText_ReturnValue4) == 0x0000BC, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_Conv_StringToText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, Temp_bool_Variable) == 0x0000C8, "Member 'ItemCooldownMeter_C_Set_Cooldown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, K2Node_Select_Default) == 0x0000C9, "Member 'ItemCooldownMeter_C_Set_Cooldown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_Set_Cooldown, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000CC, "Member 'ItemCooldownMeter_C_Set_Cooldown::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function ItemCooldownMeter.ItemCooldownMeter_C.GetSecondsCorrectedMinutes
// 0x001C (0x001C - 0x0000)
struct ItemCooldownMeter_C_GetSecondsCorrectedMinutes final
{
public:
	int32                                         Minutes;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Seconds;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes) == 0x000004, "Wrong alignment on ItemCooldownMeter_C_GetSecondsCorrectedMinutes");
static_assert(sizeof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes) == 0x00001C, "Wrong size on ItemCooldownMeter_C_GetSecondsCorrectedMinutes");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, Minutes) == 0x000000, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::Minutes' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, Seconds) == 0x000004, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::Seconds' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, ReturnValue) == 0x000008, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, CallFunc_Greater_IntInt_ReturnValue2) == 0x00000D, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCooldownMeter_C_GetSecondsCorrectedMinutes, CallFunc_SelectInt_ReturnValue) == 0x000018, "Member 'ItemCooldownMeter_C_GetSecondsCorrectedMinutes::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
