#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemDurabilityMeter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass ItemDurabilityMeter.ItemDurabilityMeter_C
// 0x0028 (0x01E0 - 0x01B8)
class UItemDurabilityMeter_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 _Image__Backfill;                                  // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Overfill;                                  // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class USizeBox*                               Size_Box;                                          // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	float                                         DefaultPadding;                                    // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MinimumFillHeight;                                 // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Backfill_Color;                                    // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ItemDurabilityMeter(int32 EntryPoint);
	void Construct();
	void Update(const struct FVector2D& Draw_Size, float Durability);
	void Set_Durability(float Durability);
	void Set_Backfill_Color(const struct FLinearColor& Backfill_Color_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemDurabilityMeter_C">();
	}
	static class UItemDurabilityMeter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemDurabilityMeter_C>();
	}
};
static_assert(alignof(UItemDurabilityMeter_C) == 0x000004, "Wrong alignment on UItemDurabilityMeter_C");
static_assert(sizeof(UItemDurabilityMeter_C) == 0x0001E0, "Wrong size on UItemDurabilityMeter_C");
static_assert(offsetof(UItemDurabilityMeter_C, UberGraphFrame) == 0x0001B8, "Member 'UItemDurabilityMeter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemDurabilityMeter_C, _Image__Backfill) == 0x0001BC, "Member 'UItemDurabilityMeter_C::_Image__Backfill' has a wrong offset!");
static_assert(offsetof(UItemDurabilityMeter_C, _Image__Overfill) == 0x0001C0, "Member 'UItemDurabilityMeter_C::_Image__Overfill' has a wrong offset!");
static_assert(offsetof(UItemDurabilityMeter_C, Size_Box) == 0x0001C4, "Member 'UItemDurabilityMeter_C::Size_Box' has a wrong offset!");
static_assert(offsetof(UItemDurabilityMeter_C, DefaultPadding) == 0x0001C8, "Member 'UItemDurabilityMeter_C::DefaultPadding' has a wrong offset!");
static_assert(offsetof(UItemDurabilityMeter_C, MinimumFillHeight) == 0x0001CC, "Member 'UItemDurabilityMeter_C::MinimumFillHeight' has a wrong offset!");
static_assert(offsetof(UItemDurabilityMeter_C, Backfill_Color) == 0x0001D0, "Member 'UItemDurabilityMeter_C::Backfill_Color' has a wrong offset!");

}

#pragma pack(pop)
