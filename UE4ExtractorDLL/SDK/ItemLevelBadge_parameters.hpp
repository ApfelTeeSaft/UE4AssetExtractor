#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemLevelBadge

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ItemDisplayMode_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function ItemLevelBadge.ItemLevelBadge_C.Update
// 0x01CC (0x01CC - 0x0000)
struct ItemLevelBadge_C_Update final
{
public:
	int32                                         Max;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Level;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortBrushSize                                Brush_Size;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    Rarity_Data;                                       // 0x000C(0x0070)(Parm)
	EItemDisplayMode                              Display_Mode;                                      // 0x007C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x001C)()
	float                                         CallFunc_BreakVector2D_X;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue; // 0x00A4(0x0010)(ConstParm)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateFontInfo                         CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue; // 0x00B8(0x0028)(ConstParm)
	struct FSlateBrush                            CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue; // 0x00E0(0x0074)(ConstParm)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CurrentBaseBrush;                                  // 0x0158(0x0074)(Edit)
};
static_assert(alignof(ItemLevelBadge_C_Update) == 0x000004, "Wrong alignment on ItemLevelBadge_C_Update");
static_assert(sizeof(ItemLevelBadge_C_Update) == 0x0001CC, "Wrong size on ItemLevelBadge_C_Update");
static_assert(offsetof(ItemLevelBadge_C_Update, Max) == 0x000000, "Member 'ItemLevelBadge_C_Update::Max' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, Level) == 0x000004, "Member 'ItemLevelBadge_C_Update::Level' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, Brush_Size) == 0x000008, "Member 'ItemLevelBadge_C_Update::Brush_Size' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, Rarity_Data) == 0x00000C, "Member 'ItemLevelBadge_C_Update::Rarity_Data' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, Display_Mode) == 0x00007C, "Member 'ItemLevelBadge_C_Update::Display_Mode' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'ItemLevelBadge_C_Update::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_BreakVector2D_X) == 0x00009C, "Member 'ItemLevelBadge_C_Update::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'ItemLevelBadge_C_Update::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue) == 0x0000A4, "Member 'ItemLevelBadge_C_Update::CallFunc_GetMarginBySizeFromMultiSizeMargin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'ItemLevelBadge_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue) == 0x0000B8, "Member 'ItemLevelBadge_C_Update::CallFunc_GetFontBySizeFromMultiSizeFont_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue) == 0x0000E0, "Member 'ItemLevelBadge_C_Update::CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000154, "Member 'ItemLevelBadge_C_Update::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Update, CurrentBaseBrush) == 0x000158, "Member 'ItemLevelBadge_C_Update::CurrentBaseBrush' has a wrong offset!");

// Function ItemLevelBadge.ItemLevelBadge_C.Refresh
// 0x0024 (0x0024 - 0x0000)
struct ItemLevelBadge_C_Refresh final
{
public:
	EItemDisplayMode                              Display_Mode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x000C)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemLevelBadge_C_Refresh) == 0x000004, "Wrong alignment on ItemLevelBadge_C_Refresh");
static_assert(sizeof(ItemLevelBadge_C_Refresh) == 0x000024, "Wrong size on ItemLevelBadge_C_Refresh");
static_assert(offsetof(ItemLevelBadge_C_Refresh, Display_Mode) == 0x000000, "Member 'ItemLevelBadge_C_Refresh::Display_Mode' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, Max) == 0x000004, "Member 'ItemLevelBadge_C_Refresh::Max' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, Level) == 0x000008, "Member 'ItemLevelBadge_C_Refresh::Level' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, Temp_byte_Variable) == 0x00000C, "Member 'ItemLevelBadge_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000D, "Member 'ItemLevelBadge_C_Refresh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'ItemLevelBadge_C_Refresh::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'ItemLevelBadge_C_Refresh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, Temp_byte_Variable2) == 0x00001D, "Member 'ItemLevelBadge_C_Refresh::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, CallFunc_BooleanOR_ReturnValue) == 0x00001E, "Member 'ItemLevelBadge_C_Refresh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, Temp_bool_Variable) == 0x00001F, "Member 'ItemLevelBadge_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemLevelBadge_C_Refresh, K2Node_Select_Default) == 0x000020, "Member 'ItemLevelBadge_C_Refresh::K2Node_Select_Default' has a wrong offset!");

}

#pragma pack(pop)
