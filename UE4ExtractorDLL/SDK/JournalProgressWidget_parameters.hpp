#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JournalProgressWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function JournalProgressWidget.JournalProgressWidget_C.Update
// 0x00A8 (0x00A8 - 0x0000)
struct JournalProgressWidget_C_Update final
{
public:
	int32                                         Required;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Achieved;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             Temp_object_Variable2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0014(0x000C)()
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0024(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0044(0x000C)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0054(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x000C)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x000C)()
	class UTexture2D*                             K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable2;                                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select2_Default;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Current;                                           // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Total;                                             // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JournalProgressWidget_C_Update) == 0x000004, "Wrong alignment on JournalProgressWidget_C_Update");
static_assert(sizeof(JournalProgressWidget_C_Update) == 0x0000A8, "Wrong size on JournalProgressWidget_C_Update");
static_assert(offsetof(JournalProgressWidget_C_Update, Required) == 0x000000, "Member 'JournalProgressWidget_C_Update::Required' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Achieved) == 0x000004, "Member 'JournalProgressWidget_C_Update::Achieved' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Temp_object_Variable) == 0x000008, "Member 'JournalProgressWidget_C_Update::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Temp_object_Variable2) == 0x00000C, "Member 'JournalProgressWidget_C_Update::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Temp_bool_Variable) == 0x000010, "Member 'JournalProgressWidget_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x000014, "Member 'JournalProgressWidget_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Max_ReturnValue) == 0x000020, "Member 'JournalProgressWidget_C_Update::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, K2Node_MakeStruct_FormatArgumentData) == 0x000024, "Member 'JournalProgressWidget_C_Update::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00003C, "Member 'JournalProgressWidget_C_Update::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'JournalProgressWidget_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Conv_IntToText_ReturnValue2) == 0x000044, "Member 'JournalProgressWidget_C_Update::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000050, "Member 'JournalProgressWidget_C_Update::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, K2Node_MakeStruct_FormatArgumentData2) == 0x000054, "Member 'JournalProgressWidget_C_Update::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'JournalProgressWidget_C_Update::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, K2Node_MakeArray_Array) == 0x000070, "Member 'JournalProgressWidget_C_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007C, "Member 'JournalProgressWidget_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, CallFunc_Format_ReturnValue) == 0x000080, "Member 'JournalProgressWidget_C_Update::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, K2Node_Select_Default) == 0x00008C, "Member 'JournalProgressWidget_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Temp_int_Variable) == 0x000090, "Member 'JournalProgressWidget_C_Update::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Temp_int_Variable2) == 0x000094, "Member 'JournalProgressWidget_C_Update::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Temp_bool_Variable2) == 0x000098, "Member 'JournalProgressWidget_C_Update::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, K2Node_Select2_Default) == 0x00009C, "Member 'JournalProgressWidget_C_Update::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Current) == 0x0000A0, "Member 'JournalProgressWidget_C_Update::Current' has a wrong offset!");
static_assert(offsetof(JournalProgressWidget_C_Update, Total) == 0x0000A4, "Member 'JournalProgressWidget_C_Update::Total' has a wrong offset!");

}

#pragma pack(pop)
