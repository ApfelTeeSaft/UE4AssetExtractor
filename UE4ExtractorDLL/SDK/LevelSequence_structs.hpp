#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelSequence

#include "Basic.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// ScriptStruct LevelSequence.LevelSequenceObject
// 0x0030 (0x0030 - 0x0000)
struct FLevelSequenceObject final
{
public:
	TLazyObjectPtr<class UObject>                 ObjectOrOwner;                                     // 0x0000(0x001C)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 ComponentName;                                     // 0x001C(0x000C)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UObject>                 CachedComponent;                                   // 0x0028(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FLevelSequenceObject) == 0x000004, "Wrong alignment on FLevelSequenceObject");
static_assert(sizeof(FLevelSequenceObject) == 0x000030, "Wrong size on FLevelSequenceObject");
static_assert(offsetof(FLevelSequenceObject, ObjectOrOwner) == 0x000000, "Member 'FLevelSequenceObject::ObjectOrOwner' has a wrong offset!");
static_assert(offsetof(FLevelSequenceObject, ComponentName) == 0x00001C, "Member 'FLevelSequenceObject::ComponentName' has a wrong offset!");
static_assert(offsetof(FLevelSequenceObject, CachedComponent) == 0x000028, "Member 'FLevelSequenceObject::CachedComponent' has a wrong offset!");

// ScriptStruct LevelSequence.LevelSequenceObjectReferenceMap
// 0x003C (0x003C - 0x0000)
struct alignas(0x04) FLevelSequenceObjectReferenceMap final
{
public:
	uint8                                         Pad_0[0x3C];                                       // 0x0000(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLevelSequenceObjectReferenceMap) == 0x000004, "Wrong alignment on FLevelSequenceObjectReferenceMap");
static_assert(sizeof(FLevelSequenceObjectReferenceMap) == 0x00003C, "Wrong size on FLevelSequenceObjectReferenceMap");

// ScriptStruct LevelSequence.LevelSequenceObjectReference
// 0x001C (0x001C - 0x0000)
struct alignas(0x04) FLevelSequenceObjectReference final
{
public:
	uint8                                         Pad_0[0x1C];                                       // 0x0000(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLevelSequenceObjectReference) == 0x000004, "Wrong alignment on FLevelSequenceObjectReference");
static_assert(sizeof(FLevelSequenceObjectReference) == 0x00001C, "Wrong size on FLevelSequenceObjectReference");

// ScriptStruct LevelSequence.LevelSequencePlaybackSettings
// 0x0008 (0x0008 - 0x0000)
struct FLevelSequencePlaybackSettings final
{
public:
	int32                                         LoopCount;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLevelSequencePlaybackSettings) == 0x000004, "Wrong alignment on FLevelSequencePlaybackSettings");
static_assert(sizeof(FLevelSequencePlaybackSettings) == 0x000008, "Wrong size on FLevelSequencePlaybackSettings");
static_assert(offsetof(FLevelSequencePlaybackSettings, LoopCount) == 0x000000, "Member 'FLevelSequencePlaybackSettings::LoopCount' has a wrong offset!");
static_assert(offsetof(FLevelSequencePlaybackSettings, PlayRate) == 0x000004, "Member 'FLevelSequencePlaybackSettings::PlayRate' has a wrong offset!");

}

#pragma pack(pop)
