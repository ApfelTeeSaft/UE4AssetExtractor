#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoginWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass LoginWindow.LoginWindow_C
// 0x0060 (0x02CC - 0x026C)
class ULoginWindow_C final : public UFortLoginWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x026C(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TestAnimation;                                     // 0x0270(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBasicStrokeBox_C*                      BasicStrokeBox;                                    // 0x0274(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             BuildWatermark;                                    // 0x0278(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UEditableText*                          Email;                                             // 0x027C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UCanvasPanel*                           ErrorPanel;                                        // 0x0280(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 hr;                                                // 0x0284(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UButtonIconText_C*                      Login_Button;                                      // 0x0288(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetSwitcher*                        Login_State_View_Switcher;                         // 0x028C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             LoginResultText;                                   // 0x0290(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             LoginStatusText;                                   // 0x0294(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Logo;                                              // 0x0298(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UEditableText*                          Password;                                          // 0x029C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UCheckBox*                              RememberCheckbox;                                  // 0x02A0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             RememberLabel;                                     // 0x02A4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UVersionInfo_C*                         VersionInfo;                                       // 0x02A8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	bool                                          CanLogin;                                          // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Login_Error;                                 // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Login_Click;                                 // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Logging_In;                                  // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Login_Success;                               // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class FText>                           StatusUpdates;                                     // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_LoginWindow(int32 EntryPoint);
	void BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature(class UFortBaseButton* Button);
	void OnQueryFortBackendVersionComplete(const struct FFortBackendVersion& FortBackendVersion);
	void BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature(const class FText& TEXT);
	void BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature(const class FText& TEXT);
	void BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature(const class FText& TEXT, ETextCommit CommitMethod);
	void BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature(const class FText& TEXT, ETextCommit CommitMethod);
	void OnLoginStatusChanged(EUILoginStatus NewStatus, const class FText& InMessage);
	void Construct();
	void OnConfirmed_D5FE647942DB4B7E21D74DBFFFE496C7();
	void OnDeclined_D5FE647942DB4B7E21D74DBFFFE496C7();
	void OnTimedOut_D5FE647942DB4B7E21D74DBFFFE496C7();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void RequestLogin();
	void Check_Login_Permission();
	void Set_Login_Permission(bool Login_Enabled);
	void Show_Login_Result_Error(const class FText& In_Text);
	void SetEditingFocus();
	void Update_Watermark();
	void RunInitialBenchmark();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LoginWindow_C">();
	}
	static class ULoginWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginWindow_C>();
	}
};
static_assert(alignof(ULoginWindow_C) == 0x000004, "Wrong alignment on ULoginWindow_C");
static_assert(sizeof(ULoginWindow_C) == 0x0002CC, "Wrong size on ULoginWindow_C");
static_assert(offsetof(ULoginWindow_C, UberGraphFrame) == 0x00026C, "Member 'ULoginWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, TestAnimation) == 0x000270, "Member 'ULoginWindow_C::TestAnimation' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, BasicStrokeBox) == 0x000274, "Member 'ULoginWindow_C::BasicStrokeBox' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, BuildWatermark) == 0x000278, "Member 'ULoginWindow_C::BuildWatermark' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Email) == 0x00027C, "Member 'ULoginWindow_C::Email' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, ErrorPanel) == 0x000280, "Member 'ULoginWindow_C::ErrorPanel' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, hr) == 0x000284, "Member 'ULoginWindow_C::hr' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Login_Button) == 0x000288, "Member 'ULoginWindow_C::Login_Button' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Login_State_View_Switcher) == 0x00028C, "Member 'ULoginWindow_C::Login_State_View_Switcher' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, LoginResultText) == 0x000290, "Member 'ULoginWindow_C::LoginResultText' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, LoginStatusText) == 0x000294, "Member 'ULoginWindow_C::LoginStatusText' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Logo) == 0x000298, "Member 'ULoginWindow_C::Logo' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Password) == 0x00029C, "Member 'ULoginWindow_C::Password' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, RememberCheckbox) == 0x0002A0, "Member 'ULoginWindow_C::RememberCheckbox' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, RememberLabel) == 0x0002A4, "Member 'ULoginWindow_C::RememberLabel' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, VersionInfo) == 0x0002A8, "Member 'ULoginWindow_C::VersionInfo' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, CanLogin) == 0x0002AC, "Member 'ULoginWindow_C::CanLogin' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Sound_Login_Error) == 0x0002B0, "Member 'ULoginWindow_C::Sound_Login_Error' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Sound_Login_Click) == 0x0002B4, "Member 'ULoginWindow_C::Sound_Login_Click' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Sound_Logging_In) == 0x0002B8, "Member 'ULoginWindow_C::Sound_Logging_In' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, Sound_Login_Success) == 0x0002BC, "Member 'ULoginWindow_C::Sound_Login_Success' has a wrong offset!");
static_assert(offsetof(ULoginWindow_C, StatusUpdates) == 0x0002C0, "Member 'ULoginWindow_C::StatusUpdates' has a wrong offset!");

}

#pragma pack(pop)
