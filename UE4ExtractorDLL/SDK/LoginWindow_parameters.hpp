#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoginWindow

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "FortniteUI_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function LoginWindow.LoginWindow_C.ExecuteUbergraph_LoginWindow
// 0x0140 (0x0140 - 0x0000)
struct LoginWindow_C_ExecuteUbergraph_LoginWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FFortBackendVersion& FortBackendVersion)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	class UFortAsyncAction_ShowConfirmation*      CallFunc_ShowConfirmationDialog_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetDefaultEmail_ReturnValue;              // 0x0030(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x003C(0x000C)()
	bool                                          CallFunc_IsRememberMeChecked_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUILoginStatus                                K2Node_Event_NewStatus;                            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InMessage;                            // 0x004C(0x000C)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text4;                  // 0x005C(0x000C)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod2;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text3;                  // 0x006C(0x000C)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text2;                  // 0x007C(0x000C)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0098(0x000C)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue2;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortBackendVersion                    K2Node_CustomEvent_FortBackendVersion;             // 0x00B0(0x0070)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	class UFortBaseButton*                        K2Node_ComponentBoundEvent_Button;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue3;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldRunInitialBenchmark_ReturnValue;    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_ExecuteUbergraph_LoginWindow) == 0x000004, "Wrong alignment on LoginWindow_C_ExecuteUbergraph_LoginWindow");
static_assert(sizeof(LoginWindow_C_ExecuteUbergraph_LoginWindow) == 0x000140, "Wrong size on LoginWindow_C_ExecuteUbergraph_LoginWindow");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, EntryPoint) == 0x000000, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_ShowConfirmationDialog_ReturnValue) == 0x000014, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_ShowConfirmationDialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_GetDefaultEmail_ReturnValue) == 0x000030, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_GetDefaultEmail_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_Conv_StringToText_ReturnValue) == 0x00003C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_IsRememberMeChecked_ReturnValue) == 0x000048, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_IsRememberMeChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_Event_NewStatus) == 0x000049, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_Event_NewStatus' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_Event_InMessage) == 0x00004C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_Event_InMessage' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_Text4) == 0x00005C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_Text4' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_CommitMethod2) == 0x000068, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_CommitMethod2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_Text3) == 0x00006C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_Text3' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_CommitMethod) == 0x000078, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00007A, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_Text2) == 0x00007C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_Text2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_CreateDelegate_OutputDelegate3) == 0x000088, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_Text) == 0x000098, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_BooleanAND_ReturnValue) == 0x0000A4, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_BooleanAND_ReturnValue2) == 0x0000A5, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_SpawnSound2D_ReturnValue) == 0x0000A8, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_SpawnSound2D_ReturnValue2) == 0x0000AC, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_SpawnSound2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_CustomEvent_FortBackendVersion) == 0x0000B0, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_CustomEvent_FortBackendVersion' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_CreateDelegate_OutputDelegate4) == 0x000120, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, K2Node_ComponentBoundEvent_Button) == 0x000130, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_GetContext_ReturnValue2) == 0x000134, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_GetContext_ReturnValue3) == 0x000138, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_ExecuteUbergraph_LoginWindow, CallFunc_ShouldRunInitialBenchmark_ReturnValue) == 0x00013C, "Member 'LoginWindow_C_ExecuteUbergraph_LoginWindow::CallFunc_ShouldRunInitialBenchmark_ReturnValue' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.BndEvt__Login Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature final
{
public:
	class UFortBaseButton*                        Button;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature) == 0x000004, "Wrong alignment on LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature");
static_assert(sizeof(LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature) == 0x000004, "Wrong size on LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature");
static_assert(offsetof(LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'LoginWindow_C_BndEvt__Login_Button_K2Node_ComponentBoundEvent_437_FortBaseButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.OnQueryFortBackendVersionComplete
// 0x0070 (0x0070 - 0x0000)
struct LoginWindow_C_OnQueryFortBackendVersionComplete final
{
public:
	struct FFortBackendVersion                    FortBackendVersion;                                // 0x0000(0x0070)(Parm)
};
static_assert(alignof(LoginWindow_C_OnQueryFortBackendVersionComplete) == 0x000004, "Wrong alignment on LoginWindow_C_OnQueryFortBackendVersionComplete");
static_assert(sizeof(LoginWindow_C_OnQueryFortBackendVersionComplete) == 0x000070, "Wrong size on LoginWindow_C_OnQueryFortBackendVersionComplete");
static_assert(offsetof(LoginWindow_C_OnQueryFortBackendVersionComplete, FortBackendVersion) == 0x000000, "Member 'LoginWindow_C_OnQueryFortBackendVersionComplete::FortBackendVersion' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   TEXT;                                              // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature) == 0x00000C, "Wrong size on LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature, TEXT) == 0x000000, "Member 'LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_60_OnEditableTextChangedEvent__DelegateSignature::TEXT' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   TEXT;                                              // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature) == 0x00000C, "Wrong size on LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature, TEXT) == 0x000000, "Member 'LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_54_OnEditableTextChangedEvent__DelegateSignature::TEXT' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   TEXT;                                              // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature) == 0x000010, "Wrong size on LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature, TEXT) == 0x000000, "Member 'LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature::TEXT' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x00000C, "Member 'LoginWindow_C_BndEvt__Email_K2Node_ComponentBoundEvent_36_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   TEXT;                                              // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature) == 0x000010, "Wrong size on LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature, TEXT) == 0x000000, "Member 'LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature::TEXT' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x00000C, "Member 'LoginWindow_C_BndEvt__Password_K2Node_ComponentBoundEvent_13_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.OnLoginStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct LoginWindow_C_OnLoginStatusChanged final
{
public:
	EUILoginStatus                                NewStatus;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InMessage;                                         // 0x0004(0x000C)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LoginWindow_C_OnLoginStatusChanged) == 0x000004, "Wrong alignment on LoginWindow_C_OnLoginStatusChanged");
static_assert(sizeof(LoginWindow_C_OnLoginStatusChanged) == 0x000010, "Wrong size on LoginWindow_C_OnLoginStatusChanged");
static_assert(offsetof(LoginWindow_C_OnLoginStatusChanged, NewStatus) == 0x000000, "Member 'LoginWindow_C_OnLoginStatusChanged::NewStatus' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnLoginStatusChanged, InMessage) == 0x000004, "Member 'LoginWindow_C_OnLoginStatusChanged::InMessage' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.OnKeyDown
// 0x013C (0x013C - 0x0000)
struct LoginWindow_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0034(0x0034)(Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0068(0x0060)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x00C8(0x0010)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00D8(0x0060)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue2;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue2;            // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_OnKeyDown) == 0x000004, "Wrong alignment on LoginWindow_C_OnKeyDown");
static_assert(sizeof(LoginWindow_C_OnKeyDown) == 0x00013C, "Wrong size on LoginWindow_C_OnKeyDown");
static_assert(offsetof(LoginWindow_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'LoginWindow_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, InKeyEvent) == 0x000034, "Member 'LoginWindow_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, ReturnValue) == 0x000068, "Member 'LoginWindow_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0000C8, "Member 'LoginWindow_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x0000D8, "Member 'LoginWindow_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000138, "Member 'LoginWindow_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue2) == 0x000139, "Member 'LoginWindow_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, CallFunc_HasKeyboardFocus_ReturnValue) == 0x00013A, "Member 'LoginWindow_C_OnKeyDown::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_OnKeyDown, CallFunc_HasKeyboardFocus_ReturnValue2) == 0x00013B, "Member 'LoginWindow_C_OnKeyDown::CallFunc_HasKeyboardFocus_ReturnValue2' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.RequestLogin
// 0x0034 (0x0034 - 0x0000)
struct LoginWindow_C_RequestLogin final
{
public:
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0004(0x000C)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_GetText_ReturnValue2;                     // 0x001C(0x000C)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue2;           // 0x0028(0x000C)(ZeroConstructor)
};
static_assert(alignof(LoginWindow_C_RequestLogin) == 0x000004, "Wrong alignment on LoginWindow_C_RequestLogin");
static_assert(sizeof(LoginWindow_C_RequestLogin) == 0x000034, "Wrong size on LoginWindow_C_RequestLogin");
static_assert(offsetof(LoginWindow_C_RequestLogin, CallFunc_GetIsEnabled_ReturnValue) == 0x000000, "Member 'LoginWindow_C_RequestLogin::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_RequestLogin, CallFunc_IsChecked_ReturnValue) == 0x000001, "Member 'LoginWindow_C_RequestLogin::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_RequestLogin, CallFunc_GetText_ReturnValue) == 0x000004, "Member 'LoginWindow_C_RequestLogin::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_RequestLogin, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'LoginWindow_C_RequestLogin::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_RequestLogin, CallFunc_GetText_ReturnValue2) == 0x00001C, "Member 'LoginWindow_C_RequestLogin::CallFunc_GetText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_RequestLogin, CallFunc_Conv_TextToString_ReturnValue2) == 0x000028, "Member 'LoginWindow_C_RequestLogin::CallFunc_Conv_TextToString_ReturnValue2' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.Check Login Permission
// 0x0034 (0x0034 - 0x0000)
struct LoginWindow_C_Check_Login_Permission final
{
public:
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0000(0x000C)()
	class FText                                   CallFunc_GetText_ReturnValue2;                     // 0x000C(0x000C)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue2;           // 0x0024(0x000C)(ZeroConstructor)
	bool                                          CallFunc_ShouldShowLoginButton_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_Check_Login_Permission) == 0x000004, "Wrong alignment on LoginWindow_C_Check_Login_Permission");
static_assert(sizeof(LoginWindow_C_Check_Login_Permission) == 0x000034, "Wrong size on LoginWindow_C_Check_Login_Permission");
static_assert(offsetof(LoginWindow_C_Check_Login_Permission, CallFunc_GetText_ReturnValue) == 0x000000, "Member 'LoginWindow_C_Check_Login_Permission::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Check_Login_Permission, CallFunc_GetText_ReturnValue2) == 0x00000C, "Member 'LoginWindow_C_Check_Login_Permission::CallFunc_GetText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Check_Login_Permission, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'LoginWindow_C_Check_Login_Permission::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Check_Login_Permission, CallFunc_Conv_TextToString_ReturnValue2) == 0x000024, "Member 'LoginWindow_C_Check_Login_Permission::CallFunc_Conv_TextToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Check_Login_Permission, CallFunc_ShouldShowLoginButton_ReturnValue) == 0x000030, "Member 'LoginWindow_C_Check_Login_Permission::CallFunc_ShouldShowLoginButton_ReturnValue' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.Set Login Permission
// 0x0001 (0x0001 - 0x0000)
struct LoginWindow_C_Set_Login_Permission final
{
public:
	bool                                          Login_Enabled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_Set_Login_Permission) == 0x000001, "Wrong alignment on LoginWindow_C_Set_Login_Permission");
static_assert(sizeof(LoginWindow_C_Set_Login_Permission) == 0x000001, "Wrong size on LoginWindow_C_Set_Login_Permission");
static_assert(offsetof(LoginWindow_C_Set_Login_Permission, Login_Enabled) == 0x000000, "Member 'LoginWindow_C_Set_Login_Permission::Login_Enabled' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.Show Login Result Error
// 0x0014 (0x0014 - 0x0000)
struct LoginWindow_C_Show_Login_Result_Error final
{
public:
	class FText                                   In_Text;                                           // 0x0000(0x000C)(Parm)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_Show_Login_Result_Error) == 0x000004, "Wrong alignment on LoginWindow_C_Show_Login_Result_Error");
static_assert(sizeof(LoginWindow_C_Show_Login_Result_Error) == 0x000014, "Wrong size on LoginWindow_C_Show_Login_Result_Error");
static_assert(offsetof(LoginWindow_C_Show_Login_Result_Error, In_Text) == 0x000000, "Member 'LoginWindow_C_Show_Login_Result_Error::In_Text' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Show_Login_Result_Error, Temp_bool_Variable) == 0x00000C, "Member 'LoginWindow_C_Show_Login_Result_Error::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Show_Login_Result_Error, CallFunc_TextIsEmpty_ReturnValue) == 0x00000D, "Member 'LoginWindow_C_Show_Login_Result_Error::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Show_Login_Result_Error, Temp_byte_Variable) == 0x00000E, "Member 'LoginWindow_C_Show_Login_Result_Error::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Show_Login_Result_Error, Temp_byte_Variable2) == 0x00000F, "Member 'LoginWindow_C_Show_Login_Result_Error::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_Show_Login_Result_Error, K2Node_Select_Default) == 0x000010, "Member 'LoginWindow_C_Show_Login_Result_Error::K2Node_Select_Default' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.SetEditingFocus
// 0x0014 (0x0014 - 0x0000)
struct LoginWindow_C_SetEditingFocus final
{
public:
	class FString                                 CallFunc_GetDefaultEmail_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginWindow_C_SetEditingFocus) == 0x000004, "Wrong alignment on LoginWindow_C_SetEditingFocus");
static_assert(sizeof(LoginWindow_C_SetEditingFocus) == 0x000014, "Wrong size on LoginWindow_C_SetEditingFocus");
static_assert(offsetof(LoginWindow_C_SetEditingFocus, CallFunc_GetDefaultEmail_ReturnValue) == 0x000000, "Member 'LoginWindow_C_SetEditingFocus::CallFunc_GetDefaultEmail_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_SetEditingFocus, CallFunc_Len_ReturnValue) == 0x00000C, "Member 'LoginWindow_C_SetEditingFocus::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginWindow_C_SetEditingFocus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'LoginWindow_C_SetEditingFocus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function LoginWindow.LoginWindow_C.Update Watermark
// 0x000C (0x000C - 0x0000)
struct LoginWindow_C_Update_Watermark final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x000C)()
};
static_assert(alignof(LoginWindow_C_Update_Watermark) == 0x000004, "Wrong alignment on LoginWindow_C_Update_Watermark");
static_assert(sizeof(LoginWindow_C_Update_Watermark) == 0x00000C, "Wrong size on LoginWindow_C_Update_Watermark");
static_assert(offsetof(LoginWindow_C_Update_Watermark, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'LoginWindow_C_Update_Watermark::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
