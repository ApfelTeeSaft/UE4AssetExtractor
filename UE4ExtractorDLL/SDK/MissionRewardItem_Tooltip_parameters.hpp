#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionRewardItem_Tooltip

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Reward Name
// 0x0038 (0x0038 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Reward_Name final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x000C)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0020(0x000C)()
	class FText                                   Reward_Name;                                       // 0x002C(0x000C)(Edit)
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Reward_Name) == 0x000004, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Reward_Name");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Reward_Name) == 0x000038, "Wrong size on MissionRewardItem_Tooltip_C_Get_Reward_Name");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, Temp_bool_Variable) == 0x00000C, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, CallFunc_TextIsEmpty_ReturnValue) == 0x00001D, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, K2Node_Select_Default) == 0x000020, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, Reward_Name) == 0x00002C, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::Reward_Name' has a wrong offset!");

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Reward Icon
// 0x0160 (0x0160 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Reward_Icon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0074)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetIconBrush_IconBrush;                   // 0x0078(0x0074)()
	struct FSlateBrush                            Reward_Icon;                                       // 0x00EC(0x0074)(Edit)
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Reward_Icon) == 0x000004, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Reward_Icon");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Reward_Icon) == 0x000160, "Wrong size on MissionRewardItem_Tooltip_C_Get_Reward_Icon");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, CallFunc_GetIconBrush_IconBrush) == 0x000078, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::CallFunc_GetIconBrush_IconBrush' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, Reward_Icon) == 0x0000EC, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::Reward_Icon' has a wrong offset!");

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Rarity Color
// 0x0094 (0x0094 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Rarity_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0014(0x0070)()
	struct FLinearColor                           RarityColor;                                       // 0x0084(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Rarity_Color) == 0x000004, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Rarity_Color");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Rarity_Color) == 0x000094, "Wrong size on MissionRewardItem_Tooltip_C_Get_Rarity_Color");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, CallFunc_GetRarity_ReturnValue) == 0x000011, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, CallFunc_BPGetRarityData_ReturnValue) == 0x000014, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, RarityColor) == 0x000084, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::RarityColor' has a wrong offset!");

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Rarity Color (SlateColor)
// 0x0048 (0x0048 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_ final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x001C)(Parm, OutParm, ReturnParm)
	struct FLinearColor                           CallFunc_Get_Rarity_Color_ReturnValue;             // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x002C(0x001C)()
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_) == 0x000004, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_) == 0x000048, "Wrong size on MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_, CallFunc_Get_Rarity_Color_ReturnValue) == 0x00001C, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_::CallFunc_Get_Rarity_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_, K2Node_MakeStruct_SlateColor) == 0x00002C, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

#pragma pack(pop)
