#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionTooltip

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function MissionTooltip.MissionTooltip_C.ExecuteUbergraph_MissionTooltip
// 0x0004 (0x0004 - 0x0000)
struct MissionTooltip_C_ExecuteUbergraph_MissionTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionTooltip_C_ExecuteUbergraph_MissionTooltip) == 0x000004, "Wrong alignment on MissionTooltip_C_ExecuteUbergraph_MissionTooltip");
static_assert(sizeof(MissionTooltip_C_ExecuteUbergraph_MissionTooltip) == 0x000004, "Wrong size on MissionTooltip_C_ExecuteUbergraph_MissionTooltip");
static_assert(offsetof(MissionTooltip_C_ExecuteUbergraph_MissionTooltip, EntryPoint) == 0x000000, "Member 'MissionTooltip_C_ExecuteUbergraph_MissionTooltip::EntryPoint' has a wrong offset!");

// Function MissionTooltip.MissionTooltip_C.UpdateMissionInfo
// 0x010C (0x010C - 0x0000)
struct MissionTooltip_C_UpdateMissionInfo final
{
public:
	class ABP_Hex_PARENT_C*                       Mission_Details;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTheaterMapTileType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x000C)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0014(0x000C)()
	class FText                                   Temp_text_Variable2;                               // 0x0020(0x000C)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x002C(0x000C)()
	EFortTheaterMapTileType                       Temp_byte_Variable2;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortMissionDetails                    CallFunc_GetTileMissionDetails_MissionDetails;     // 0x0040(0x0090)()
	bool                                          CallFunc_GetTileMissionDetails_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable3;                               // 0x00D4(0x000C)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E4(0x000C)()
	EFortTheaterMapTileType                       Temp_byte_Variable3;                               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select2_Default;                            // 0x00F4(0x000C)()
	class FText                                   K2Node_Select3_Default;                            // 0x0100(0x000C)()
};
static_assert(alignof(MissionTooltip_C_UpdateMissionInfo) == 0x000004, "Wrong alignment on MissionTooltip_C_UpdateMissionInfo");
static_assert(sizeof(MissionTooltip_C_UpdateMissionInfo) == 0x00010C, "Wrong size on MissionTooltip_C_UpdateMissionInfo");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Mission_Details) == 0x000000, "Member 'MissionTooltip_C_UpdateMissionInfo::Mission_Details' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Temp_byte_Variable) == 0x000004, "Member 'MissionTooltip_C_UpdateMissionInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Temp_text_Variable) == 0x000008, "Member 'MissionTooltip_C_UpdateMissionInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_MakeLiteralText_ReturnValue) == 0x000014, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Temp_text_Variable2) == 0x000020, "Member 'MissionTooltip_C_UpdateMissionInfo::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_MakeLiteralText_ReturnValue2) == 0x00002C, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Temp_byte_Variable2) == 0x000038, "Member 'MissionTooltip_C_UpdateMissionInfo::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_GetContext_ReturnValue) == 0x00003C, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_GetTileMissionDetails_MissionDetails) == 0x000040, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_GetTileMissionDetails_MissionDetails' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_GetTileMissionDetails_ReturnValue) == 0x0000D0, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_GetTileMissionDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Temp_text_Variable3) == 0x0000D4, "Member 'MissionTooltip_C_UpdateMissionInfo::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, CallFunc_IsValid_ReturnValue2) == 0x0000E1, "Member 'MissionTooltip_C_UpdateMissionInfo::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, K2Node_Select_Default) == 0x0000E4, "Member 'MissionTooltip_C_UpdateMissionInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, Temp_byte_Variable3) == 0x0000F0, "Member 'MissionTooltip_C_UpdateMissionInfo::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, K2Node_Select2_Default) == 0x0000F4, "Member 'MissionTooltip_C_UpdateMissionInfo::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_UpdateMissionInfo, K2Node_Select3_Default) == 0x000100, "Member 'MissionTooltip_C_UpdateMissionInfo::K2Node_Select3_Default' has a wrong offset!");

// Function MissionTooltip.MissionTooltip_C.HandleMissionRewards
// 0x00A4 (0x00A4 - 0x0000)
struct MissionTooltip_C_HandleMissionRewards final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortMissionRewardInfo                 CallFunc_Array_Get_Item;                           // 0x000C(0x0084)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMissionRewardItem_Tooltip_C*           CallFunc_Create_ReturnValue;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionTooltip_C_HandleMissionRewards) == 0x000004, "Wrong alignment on MissionTooltip_C_HandleMissionRewards");
static_assert(sizeof(MissionTooltip_C_HandleMissionRewards) == 0x0000A4, "Wrong size on MissionTooltip_C_HandleMissionRewards");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MissionTooltip_C_HandleMissionRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MissionTooltip_C_HandleMissionRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_Array_Get_Item) == 0x00000C, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x000098, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_Create_ReturnValue) == 0x00009C, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionTooltip_C_HandleMissionRewards, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000A0, "Member 'MissionTooltip_C_HandleMissionRewards::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
