#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicManager

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function MusicManager.MusicManager_C.ExecuteUbergraph_MusicManager
// 0x0058 (0x0058 - 0x0000)
struct MusicManager_C_ExecuteUbergraph_MusicManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDayPhase                                 Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDayPhase                                 K2Node_Event_CurrentDayPhase;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDayPhase                                 K2Node_Event_PreviousDayPhase;                     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAtCreation;                          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0004)()
	float                                         CallFunc_GetEventHeatPercent_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue2;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDayPhase                                 Temp_byte_Variable2;                               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEventHeatPercent_ReturnValue3;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue3;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue4;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue5;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue6;         // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue7;         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue8;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable3;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                             K2Node_Select2_Default;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                             Temp_object_Variable4;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeOfDaySpeed_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select3_Default;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_ExecuteUbergraph_MusicManager) == 0x000004, "Wrong alignment on MusicManager_C_ExecuteUbergraph_MusicManager");
static_assert(sizeof(MusicManager_C_ExecuteUbergraph_MusicManager) == 0x000058, "Wrong size on MusicManager_C_ExecuteUbergraph_MusicManager");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, EntryPoint) == 0x000000, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable) == 0x000004, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_object_Variable) == 0x000008, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_byte_Variable) == 0x00000C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_CurrentDayPhase) == 0x00000D, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_PreviousDayPhase) == 0x00000E, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_bAtCreation) == 0x00000F, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_bAtCreation' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue) == 0x000014, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000019, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_object_Variable2) == 0x00001C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue2) == 0x000020, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue2) == 0x000024, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000025, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_byte_Variable2) == 0x000026, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue3) == 0x000028, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue3) == 0x00002C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select_Default) == 0x000030, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x000034, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000035, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000036, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x000037, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue4) == 0x000038, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue5) == 0x000039, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue6) == 0x00003A, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue7) == 0x00003B, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue7' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue8) == 0x00003C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue8' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_object_Variable3) == 0x000040, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select2_Default) == 0x000044, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_object_Variable4) == 0x000048, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetTimeOfDaySpeed_ReturnValue) == 0x00004C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetTimeOfDaySpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select3_Default) == 0x000054, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select3_Default' has a wrong offset!");

// Function MusicManager.MusicManager_C.OnDayPhaseChanged
// 0x0003 (0x0003 - 0x0000)
struct MusicManager_C_OnDayPhaseChanged final
{
public:
	EFortDayPhase                                 CurrentDayPhase_0;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_OnDayPhaseChanged) == 0x000001, "Wrong alignment on MusicManager_C_OnDayPhaseChanged");
static_assert(sizeof(MusicManager_C_OnDayPhaseChanged) == 0x000003, "Wrong size on MusicManager_C_OnDayPhaseChanged");
static_assert(offsetof(MusicManager_C_OnDayPhaseChanged, CurrentDayPhase_0) == 0x000000, "Member 'MusicManager_C_OnDayPhaseChanged::CurrentDayPhase_0' has a wrong offset!");
static_assert(offsetof(MusicManager_C_OnDayPhaseChanged, PreviousDayPhase) == 0x000001, "Member 'MusicManager_C_OnDayPhaseChanged::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_OnDayPhaseChanged, bAtCreation) == 0x000002, "Member 'MusicManager_C_OnDayPhaseChanged::bAtCreation' has a wrong offset!");

// Function MusicManager.MusicManager_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct MusicManager_C_UserConstructionScript final
{
public:
	class AFortPlayerControllerFrontEnd*          K2Node_DynamicCast_AsFort_Player_Controller_Front_End; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerFrontEnd*          K2Node_DynamicCast_AsFort_Player_Controller_Front_End2; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_UserConstructionScript) == 0x000004, "Wrong alignment on MusicManager_C_UserConstructionScript");
static_assert(sizeof(MusicManager_C_UserConstructionScript) == 0x000010, "Wrong size on MusicManager_C_UserConstructionScript");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_AsFort_Player_Controller_Front_End) == 0x000000, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_AsFort_Player_Controller_Front_End' has a wrong offset!");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000004, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_AsFort_Player_Controller_Front_End2) == 0x000008, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_AsFort_Player_Controller_Front_End2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_bSuccess2) == 0x00000C, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

}

#pragma pack(pop)
