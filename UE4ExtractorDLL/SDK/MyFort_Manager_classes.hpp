#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MyFort_Manager

#include "Basic.hpp"

#include "MyTown_BuildingGroups_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass MyFort_Manager.MyFort_Manager_C
// 0x00B0 (0x03A0 - 0x02F0)
class AMyFort_Manager_C final : public AMyTownActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Root;                                              // 0x02F4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FTransform>                     SlotCoordinates;                                   // 0x02F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FMyTown_BuildingGroups>         BuildingListStruct;                                // 0x0304(0x000C)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         numBuildings;                                      // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class AMyTownBuildingActor*>           BuildingGroups;                                    // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          HideBuilding;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Start_Hidden;                                      // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           BaseMeshArray;                                     // 0x0324(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FName                                   MaterialBannerParam;                               // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         BuildingPlacement;                                 // 0x0338(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class AHB_RoadManager_C*                      RoadManager;                                       // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstanceDynamic*>       BuildingMID;                                       // 0x0348(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInterface*                     UnbuiltOldMaterial;                                // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                SphereCollisionScale;                              // 0x0358(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 OpenedMenuString;                                  // 0x0364(0x000C)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          PanelOpened;                                       // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OpenedSavedBuildingTemplate;                       // 0x0374(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          PanelIsOpen;                                       // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMyTownBuildingActor*                   OpenSavedBuilding;                                 // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AMyTown_Building_Master_C*              MyTown_Building_Master;                            // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AS_HB_OnboardingCloudCover_C*           CloudCover;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTutorialVisualsInitialized;                       // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             UITextures;                                        // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MyFort_Manager(int32 EntryPoint);
	void BannerColors();
	void PositioningActors();
	void FindNumberofBuildings();
	void SpawnBuildings();
	void OnMyTownBannerColorChanged_Event(const struct FLinearColor& NewColor);
	void OnMyTownInitialized_Event();
	void ReceiveBeginPlay();
	void HandleClientEvent_OnboardingInitializeVisuals(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void ChangeWorker();
	void OnMyTownBuildingWorkersChanged_Event_0_Copy(const class FString& BuildingTemplateId);
	void UserConstructionScript();
	void Initialize_Array();
	void SaveBuildingPosition();
	void UpdateRoads();
	void SmallWorldCollision(const struct FVector& InitialBuildingLocation, const struct FVector& CameraLocation, class USphereComponent* Collision, float DistanceOffset);
	bool FindBuildingID(const class FString& A, class AMyTownBuildingActor** Item);
	void MouseOverBuildingState(int32 Building_ID, class AMyTownBuildingActor** Building, class USphereComponent** CollisionComponent, class UStaticMeshComponent** Building_Mesh);
	void ShouldCreateBuilding(class UMyTownBuildingDefinitionData* Building_Definition, bool* Allow_Create);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MyFort_Manager_C">();
	}
	static class AMyFort_Manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMyFort_Manager_C>();
	}
};
static_assert(alignof(AMyFort_Manager_C) == 0x000010, "Wrong alignment on AMyFort_Manager_C");
static_assert(sizeof(AMyFort_Manager_C) == 0x0003A0, "Wrong size on AMyFort_Manager_C");
static_assert(offsetof(AMyFort_Manager_C, UberGraphFrame) == 0x0002F0, "Member 'AMyFort_Manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, Root) == 0x0002F4, "Member 'AMyFort_Manager_C::Root' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, SlotCoordinates) == 0x0002F8, "Member 'AMyFort_Manager_C::SlotCoordinates' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, BuildingListStruct) == 0x000304, "Member 'AMyFort_Manager_C::BuildingListStruct' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, numBuildings) == 0x000310, "Member 'AMyFort_Manager_C::numBuildings' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, BuildingGroups) == 0x000314, "Member 'AMyFort_Manager_C::BuildingGroups' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, HideBuilding) == 0x000320, "Member 'AMyFort_Manager_C::HideBuilding' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, Start_Hidden) == 0x000321, "Member 'AMyFort_Manager_C::Start_Hidden' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, BaseMeshArray) == 0x000324, "Member 'AMyFort_Manager_C::BaseMeshArray' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, MaterialBannerParam) == 0x000330, "Member 'AMyFort_Manager_C::MaterialBannerParam' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, BuildingPlacement) == 0x000338, "Member 'AMyFort_Manager_C::BuildingPlacement' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, RoadManager) == 0x000344, "Member 'AMyFort_Manager_C::RoadManager' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, BuildingMID) == 0x000348, "Member 'AMyFort_Manager_C::BuildingMID' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, UnbuiltOldMaterial) == 0x000354, "Member 'AMyFort_Manager_C::UnbuiltOldMaterial' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, SphereCollisionScale) == 0x000358, "Member 'AMyFort_Manager_C::SphereCollisionScale' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, OpenedMenuString) == 0x000364, "Member 'AMyFort_Manager_C::OpenedMenuString' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, PanelOpened) == 0x000370, "Member 'AMyFort_Manager_C::PanelOpened' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, OpenedSavedBuildingTemplate) == 0x000374, "Member 'AMyFort_Manager_C::OpenedSavedBuildingTemplate' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, PanelIsOpen) == 0x000380, "Member 'AMyFort_Manager_C::PanelIsOpen' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, OpenSavedBuilding) == 0x000384, "Member 'AMyFort_Manager_C::OpenSavedBuilding' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, MyTown_Building_Master) == 0x000388, "Member 'AMyFort_Manager_C::MyTown_Building_Master' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, CloudCover) == 0x00038C, "Member 'AMyFort_Manager_C::CloudCover' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, bTutorialVisualsInitialized) == 0x000390, "Member 'AMyFort_Manager_C::bTutorialVisualsInitialized' has a wrong offset!");
static_assert(offsetof(AMyFort_Manager_C, UITextures) == 0x000394, "Member 'AMyFort_Manager_C::UITextures' has a wrong offset!");

}

#pragma pack(pop)
