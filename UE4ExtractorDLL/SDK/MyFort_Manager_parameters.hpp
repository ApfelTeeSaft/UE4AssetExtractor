#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MyFort_Manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MyTown_BuildingGroups_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function MyFort_Manager.MyFort_Manager_C.ExecuteUbergraph_MyFort_Manager
// 0x0260 (0x0260 - 0x0000)
struct MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FLinearColor& NewColor)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_CustomEvent_BuildingTemplateId;             // 0x0058(0x000C)(ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_HandleClientEvent_EventSource;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_HandleClientEvent_EventFocus;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortClientEvent                       K2Node_HandleClientEvent_ClientEvent;              // 0x0070(0x0018)(ConstParm)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AS_HB_OnboardingCloudCover_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable6;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMyTown_BuildingGroups                 CallFunc_Array_Get_Item;                           // 0x00D4(0x001C)()
	TDelegate<void(const class FString& BuildingTemplateId)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	class AMyTownBuildingActor*                   CallFunc_Array_Get_Item2;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AHB_Placement_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0118(0x000C)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item3;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_Placement_C*                        K2Node_DynamicCast_AsHB_Placement;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AHB_RoadManager_C*>              CallFunc_GetAllActorsOfClass_OutActors2;           // 0x013C(0x000C)(ZeroConstructor, ReferenceParm)
	class AHB_RoadManager_C*                      CallFunc_Array_Get_Item4;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_CustomEvent_NewColor;                       // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetBannerColor_ReturnValue;               // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMyTown_BuildingGroups                 K2Node_MakeStruct_MyTown_BuildingGroups;           // 0x0170(0x001C)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyTownData*                            CallFunc_GetMyTownData_ReturnValue;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMyTownBuildingData                    CallFunc_Array_Get_Item5;                          // 0x0194(0x0008)()
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0xE];                                      // 0x01A2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item6;                          // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldCreateBuilding_Allow_Create;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBuildingTemplateId_ReturnValue;        // 0x01E4(0x000C)(ZeroConstructor)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMyTownSubBuildingData                 CallFunc_Array_Get_Item7;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue7;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBuildingTemplateId_ReturnValue2;       // 0x0204(0x000C)(ZeroConstructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3; // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMyTownBuildingActor*                   CallFunc_FinishSpawningActor_ReturnValue2;         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMyTownBuildingActor*                   CallFunc_FinishSpawningActor_ReturnValue3;         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMyTown_Building_Master_C*              K2Node_DynamicCast_AsMy_Town_Building_Master;      // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMyTown_Building_Master_C*              K2Node_DynamicCast_AsMy_Town_Building_Master2;     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMyTownData*                            CallFunc_GetMyTownData_ReturnValue2;               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMyTownBuildingData                    CallFunc_Array_Get_Item8;                          // 0x023C(0x0008)()
	int32                                         CallFunc_Array_Length_ReturnValue8;                // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManorAvailable_ReturnValue;             // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeepAvailable_ReturnValue;              // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable6;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMyTownBuildingActor*                   CallFunc_GetBuildingActor_ReturnValue;             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager) == 0x000010, "Wrong alignment on MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager");
static_assert(sizeof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager) == 0x000260, "Wrong size on MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, EntryPoint) == 0x000000, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Array_Index_Variable2) == 0x000020, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Loop_Counter_Variable2) == 0x000024, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue2) == 0x000028, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Loop_Counter_Variable3) == 0x00002C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_CreateDelegate_OutputDelegate2) == 0x000030, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue3) == 0x000040, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Array_Index_Variable3) == 0x000044, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Array_Index_Variable4) == 0x000048, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Loop_Counter_Variable4) == 0x00004C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue4) == 0x000050, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Array_Index_Variable5) == 0x000054, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_CustomEvent_BuildingTemplateId) == 0x000058, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_CustomEvent_BuildingTemplateId' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_HandleClientEvent_EventSource) == 0x000068, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_HandleClientEvent_EventSource' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_HandleClientEvent_EventFocus) == 0x00006C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_HandleClientEvent_EventFocus' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_HandleClientEvent_ClientEvent) == 0x000070, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_HandleClientEvent_ClientEvent' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C4, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Loop_Counter_Variable5) == 0x0000C8, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue5) == 0x0000CC, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Array_Index_Variable6) == 0x0000D0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Array_Index_Variable6' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item2) == 0x000100, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue2) == 0x000104, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetMaterial_ReturnValue) == 0x00010C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000110, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue6) == 0x000114, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000118, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item3) == 0x000124, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_AsHB_Placement) == 0x000128, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_AsHB_Placement' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_bSuccess) == 0x00012C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue3) == 0x000130, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Less_IntInt_ReturnValue2) == 0x000134, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue4) == 0x000138, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetAllActorsOfClass_OutActors2) == 0x00013C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetAllActorsOfClass_OutActors2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item4) == 0x000148, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_CustomEvent_NewColor) == 0x00014C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_CustomEvent_NewColor' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetBannerColor_ReturnValue) == 0x00015C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetBannerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue5) == 0x00016C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_MakeStruct_MyTown_BuildingGroups) == 0x000170, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_MakeStruct_MyTown_BuildingGroups' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Greater_IntInt_ReturnValue) == 0x00018C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetMyTownData_ReturnValue) == 0x000190, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetMyTownData_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item5) == 0x000194, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue6) == 0x00019C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Less_IntInt_ReturnValue3) == 0x0001A0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001A1, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item6) == 0x0001B0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_ShouldCreateBuilding_Allow_Create) == 0x0001E0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_ShouldCreateBuilding_Allow_Create' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetBuildingTemplateId_ReturnValue) == 0x0001E4, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetBuildingTemplateId_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_AsTexture_2D) == 0x0001F0, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_bSuccess2) == 0x0001F4, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item7) == 0x0001F8, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue7) == 0x0001FC, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue7' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Less_IntInt_ReturnValue4) == 0x000200, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetBuildingTemplateId_ReturnValue2) == 0x000204, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetBuildingTemplateId_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x000210, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3) == 0x000214, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_FinishSpawningActor_ReturnValue2) == 0x000218, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_FinishSpawningActor_ReturnValue3) == 0x00021C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_FinishSpawningActor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_AsMy_Town_Building_Master) == 0x000220, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_AsMy_Town_Building_Master' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_bSuccess3) == 0x000224, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_AsMy_Town_Building_Master2) == 0x000228, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_AsMy_Town_Building_Master2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, K2Node_DynamicCast_bSuccess4) == 0x00022C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Add_ReturnValue) == 0x000230, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Add_ReturnValue2) == 0x000234, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetMyTownData_ReturnValue2) == 0x000238, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetMyTownData_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Get_Item8) == 0x00023C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Array_Length_ReturnValue8) == 0x000244, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Array_Length_ReturnValue8' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Less_IntInt_ReturnValue5) == 0x000248, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x000249, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_IsManorAvailable_ReturnValue) == 0x00024A, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_IsManorAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_IsKeepAvailable_ReturnValue) == 0x00024B, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_IsKeepAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, Temp_int_Loop_Counter_Variable6) == 0x00024C, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::Temp_int_Loop_Counter_Variable6' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_BooleanAND_ReturnValue) == 0x000250, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Less_IntInt_ReturnValue6) == 0x000251, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_Add_IntInt_ReturnValue7) == 0x000254, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager, CallFunc_GetBuildingActor_ReturnValue) == 0x000258, "Member 'MyFort_Manager_C_ExecuteUbergraph_MyFort_Manager::CallFunc_GetBuildingActor_ReturnValue' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.OnMyTownBannerColorChanged_Event
// 0x0010 (0x0010 - 0x0000)
struct MyFort_Manager_C_OnMyTownBannerColorChanged_Event final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_OnMyTownBannerColorChanged_Event) == 0x000004, "Wrong alignment on MyFort_Manager_C_OnMyTownBannerColorChanged_Event");
static_assert(sizeof(MyFort_Manager_C_OnMyTownBannerColorChanged_Event) == 0x000010, "Wrong size on MyFort_Manager_C_OnMyTownBannerColorChanged_Event");
static_assert(offsetof(MyFort_Manager_C_OnMyTownBannerColorChanged_Event, NewColor) == 0x000000, "Member 'MyFort_Manager_C_OnMyTownBannerColorChanged_Event::NewColor' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.HandleClientEvent_OnboardingInitializeVisuals
// 0x0020 (0x0020 - 0x0000)
struct MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals final
{
public:
	class UObject*                                EventSource;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                EventFocus;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortClientEvent                       ClientEvent;                                       // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals) == 0x000004, "Wrong alignment on MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals");
static_assert(sizeof(MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals) == 0x000020, "Wrong size on MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals");
static_assert(offsetof(MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals, EventSource) == 0x000000, "Member 'MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals::EventSource' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals, EventFocus) == 0x000004, "Member 'MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals::EventFocus' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals, ClientEvent) == 0x000008, "Member 'MyFort_Manager_C_HandleClientEvent_OnboardingInitializeVisuals::ClientEvent' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.OnMyTownBuildingWorkersChanged_Event_0_Copy
// 0x000C (0x000C - 0x0000)
struct MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy final
{
public:
	class FString                                 BuildingTemplateId;                                // 0x0000(0x000C)(Parm, ZeroConstructor)
};
static_assert(alignof(MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy) == 0x000004, "Wrong alignment on MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy");
static_assert(sizeof(MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy) == 0x00000C, "Wrong size on MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy");
static_assert(offsetof(MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy, BuildingTemplateId) == 0x000000, "Member 'MyFort_Manager_C_OnMyTownBuildingWorkersChanged_Event_0_Copy::BuildingTemplateId' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.SaveBuildingPosition
// 0x0050 (0x0050 - 0x0000)
struct MyFort_Manager_C_SaveBuildingPosition final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHB_Placement_C*                        K2Node_DynamicCast_AsHB_Placement;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_SaveBuildingPosition) == 0x000010, "Wrong alignment on MyFort_Manager_C_SaveBuildingPosition");
static_assert(sizeof(MyFort_Manager_C_SaveBuildingPosition) == 0x000050, "Wrong size on MyFort_Manager_C_SaveBuildingPosition");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MyFort_Manager_C_SaveBuildingPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MyFort_Manager_C_SaveBuildingPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MyFort_Manager_C_SaveBuildingPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, CallFunc_Array_Get_Item) == 0x00000C, "Member 'MyFort_Manager_C_SaveBuildingPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'MyFort_Manager_C_SaveBuildingPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, K2Node_DynamicCast_AsHB_Placement) == 0x000014, "Member 'MyFort_Manager_C_SaveBuildingPosition::K2Node_DynamicCast_AsHB_Placement' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MyFort_Manager_C_SaveBuildingPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'MyFort_Manager_C_SaveBuildingPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SaveBuildingPosition, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'MyFort_Manager_C_SaveBuildingPosition::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.UpdateRoads
// 0x002C (0x002C - 0x0000)
struct MyFort_Manager_C_UpdateRoads final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMyTownRoadData3D>              CallFunc_GetRoadsInfo_ReturnValue;                 // 0x000C(0x000C)(ZeroConstructor, ReferenceParm)
	struct FMyTownRoadData3D                      CallFunc_Array_Get_Item;                           // 0x0018(0x000C)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_UpdateRoads) == 0x000004, "Wrong alignment on MyFort_Manager_C_UpdateRoads");
static_assert(sizeof(MyFort_Manager_C_UpdateRoads) == 0x00002C, "Wrong size on MyFort_Manager_C_UpdateRoads");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MyFort_Manager_C_UpdateRoads::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MyFort_Manager_C_UpdateRoads::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MyFort_Manager_C_UpdateRoads::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, CallFunc_GetRoadsInfo_ReturnValue) == 0x00000C, "Member 'MyFort_Manager_C_UpdateRoads::CallFunc_GetRoadsInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, CallFunc_Array_Get_Item) == 0x000018, "Member 'MyFort_Manager_C_UpdateRoads::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'MyFort_Manager_C_UpdateRoads::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'MyFort_Manager_C_UpdateRoads::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_UpdateRoads, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'MyFort_Manager_C_UpdateRoads::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.SmallWorldCollision
// 0x0114 (0x0114 - 0x0000)
struct MyFort_Manager_C_SmallWorldCollision final
{
public:
	struct FVector                                InitialBuildingLocation;                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CameraLocation;                                    // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USphereComponent*                       Collision;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         DistanceOffset;                                    // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue2;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0094(0x0080)(ContainsInstancedReference)
};
static_assert(alignof(MyFort_Manager_C_SmallWorldCollision) == 0x000004, "Wrong alignment on MyFort_Manager_C_SmallWorldCollision");
static_assert(sizeof(MyFort_Manager_C_SmallWorldCollision) == 0x000114, "Wrong size on MyFort_Manager_C_SmallWorldCollision");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, InitialBuildingLocation) == 0x000000, "Member 'MyFort_Manager_C_SmallWorldCollision::InitialBuildingLocation' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CameraLocation) == 0x00000C, "Member 'MyFort_Manager_C_SmallWorldCollision::CameraLocation' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, Collision) == 0x000018, "Member 'MyFort_Manager_C_SmallWorldCollision::Collision' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, DistanceOffset) == 0x00001C, "Member 'MyFort_Manager_C_SmallWorldCollision::DistanceOffset' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000020, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Multiply_VectorVector_ReturnValue2) == 0x00002C, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Multiply_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000044, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x000050, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_VSize_ReturnValue) == 0x00005C, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Cross_VectorVector_ReturnValue) == 0x000060, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_RotateAngleAxis_ReturnValue) == 0x00007C, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_SmallWorldCollision, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000094, "Member 'MyFort_Manager_C_SmallWorldCollision::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.FindBuildingID
// 0x004C (0x004C - 0x0000)
struct MyFort_Manager_C_FindBuildingID final
{
public:
	class FString                                 A;                                                 // 0x0000(0x000C)(Parm, ZeroConstructor)
	class AMyTownBuildingActor*                   Item;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMyTown_BuildingGroups                 CallFunc_Array_Get_Item;                           // 0x0024(0x001C)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMyTownBuildingActor*                   CallFunc_Array_Get_Item2;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_FindBuildingID) == 0x000004, "Wrong alignment on MyFort_Manager_C_FindBuildingID");
static_assert(sizeof(MyFort_Manager_C_FindBuildingID) == 0x00004C, "Wrong size on MyFort_Manager_C_FindBuildingID");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, A) == 0x000000, "Member 'MyFort_Manager_C_FindBuildingID::A' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, Item) == 0x00000C, "Member 'MyFort_Manager_C_FindBuildingID::Item' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, ReturnValue) == 0x000010, "Member 'MyFort_Manager_C_FindBuildingID::ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, Temp_int_Array_Index_Variable) == 0x000014, "Member 'MyFort_Manager_C_FindBuildingID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'MyFort_Manager_C_FindBuildingID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'MyFort_Manager_C_FindBuildingID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MyFort_Manager_C_FindBuildingID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, CallFunc_Array_Get_Item) == 0x000024, "Member 'MyFort_Manager_C_FindBuildingID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MyFort_Manager_C_FindBuildingID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, CallFunc_Array_Get_Item2) == 0x000044, "Member 'MyFort_Manager_C_FindBuildingID::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_FindBuildingID, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000048, "Member 'MyFort_Manager_C_FindBuildingID::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.MouseOverBuildingState
// 0x0030 (0x0030 - 0x0000)
struct MyFort_Manager_C_MouseOverBuildingState final
{
public:
	int32                                         Building_ID;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMyTownBuildingActor*                   Building;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USphereComponent*                       CollisionComponent;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Building_Mesh;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMyTown_BuildingGroups                 CallFunc_Array_Get_Item;                           // 0x0010(0x001C)()
	class AMyTownBuildingActor*                   CallFunc_Array_Get_Item2;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_MouseOverBuildingState) == 0x000004, "Wrong alignment on MyFort_Manager_C_MouseOverBuildingState");
static_assert(sizeof(MyFort_Manager_C_MouseOverBuildingState) == 0x000030, "Wrong size on MyFort_Manager_C_MouseOverBuildingState");
static_assert(offsetof(MyFort_Manager_C_MouseOverBuildingState, Building_ID) == 0x000000, "Member 'MyFort_Manager_C_MouseOverBuildingState::Building_ID' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_MouseOverBuildingState, Building) == 0x000004, "Member 'MyFort_Manager_C_MouseOverBuildingState::Building' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_MouseOverBuildingState, CollisionComponent) == 0x000008, "Member 'MyFort_Manager_C_MouseOverBuildingState::CollisionComponent' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_MouseOverBuildingState, Building_Mesh) == 0x00000C, "Member 'MyFort_Manager_C_MouseOverBuildingState::Building_Mesh' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_MouseOverBuildingState, CallFunc_Array_Get_Item) == 0x000010, "Member 'MyFort_Manager_C_MouseOverBuildingState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_MouseOverBuildingState, CallFunc_Array_Get_Item2) == 0x00002C, "Member 'MyFort_Manager_C_MouseOverBuildingState::CallFunc_Array_Get_Item2' has a wrong offset!");

// Function MyFort_Manager.MyFort_Manager_C.ShouldCreateBuilding
// 0x000C (0x000C - 0x0000)
struct MyFort_Manager_C_ShouldCreateBuilding final
{
public:
	class UMyTownBuildingDefinitionData*          Building_Definition;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Allow_Create;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManorAvailable_ReturnValue;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeepAvailable_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllowCreation;                                     // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MyFort_Manager_C_ShouldCreateBuilding) == 0x000004, "Wrong alignment on MyFort_Manager_C_ShouldCreateBuilding");
static_assert(sizeof(MyFort_Manager_C_ShouldCreateBuilding) == 0x00000C, "Wrong size on MyFort_Manager_C_ShouldCreateBuilding");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, Building_Definition) == 0x000000, "Member 'MyFort_Manager_C_ShouldCreateBuilding::Building_Definition' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, Allow_Create) == 0x000004, "Member 'MyFort_Manager_C_ShouldCreateBuilding::Allow_Create' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000005, "Member 'MyFort_Manager_C_ShouldCreateBuilding::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000006, "Member 'MyFort_Manager_C_ShouldCreateBuilding::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, CallFunc_IsManorAvailable_ReturnValue) == 0x000007, "Member 'MyFort_Manager_C_ShouldCreateBuilding::CallFunc_IsManorAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, CallFunc_IsKeepAvailable_ReturnValue) == 0x000008, "Member 'MyFort_Manager_C_ShouldCreateBuilding::CallFunc_IsKeepAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MyFort_Manager_C_ShouldCreateBuilding, AllowCreation) == 0x000009, "Member 'MyFort_Manager_C_ShouldCreateBuilding::AllowCreation' has a wrong offset!");

}

#pragma pack(pop)
