#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MyTown_Building_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass MyTown_Building_Master.MyTown_Building_Master_C
// 0x0238 (0x0510 - 0x02D8)
class AMyTown_Building_Master_C : public AMyTownBuildingActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Flag;                                              // 0x02DC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   GroundMesh;                                        // 0x02E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox;                                          // 0x02E4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_WallX;                                    // 0x02E8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_Pop;                                      // 0x02EC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_WallZ;                                    // 0x02F0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_Morph;                                    // 0x02F4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_WallBY;                                   // 0x02F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_WallBX;                                   // 0x02FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   BuildBox_WallY;                                    // 0x0300(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   HoloBuilding;                                      // 0x0304(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   HoverBox;                                          // 0x0308(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   UpgradeMesh;                                       // 0x030C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   UpgradeGlow;                                       // 0x0310(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   Platform;                                          // 0x0314(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   Lock;                                              // 0x0318(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         AddWorkerAnimation_TL_WorkerFlash_BC2A05C3422A64750F9305A3348D77AB; // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            AddWorkerAnimation_TL__Direction_BC2A05C3422A64750F9305A3348D77AB; // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AddWorkerAnimation_TL;                             // 0x0324(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildingUpgrade_TL_Flash_022B1B3F407E08B018D67C85D55D6353; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildingUpgrade_TL_Squash_and_Stretch_022B1B3F407E08B018D67C85D55D6353; // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            BuildingUpgrade_TL__Direction_022B1B3F407E08B018D67C85D55D6353; // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BuildingUpgrade_TL;                                // 0x0334(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BubblePop_BubblePop_024074C647081B54E9FAC5B8E9DEF552; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            BubblePop__Direction_024074C647081B54E9FAC5B8E9DEF552; // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BubblePop;                                         // 0x0340(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildingFlashOut_BuildSquash_CADEA3F846AC0FDB2452EAB45F6A550B; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildingFlashOut_NewBuildFlash_CADEA3F846AC0FDB2452EAB45F6A550B; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            BuildingFlashOut__Direction_CADEA3F846AC0FDB2452EAB45F6A550B; // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BuildingFlashOut;                                  // 0x0350(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MorphPop_Jiggle_C9DB9DF84601DDB0B713EC9510BDD141;  // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MorphPop_Distortion_C9DB9DF84601DDB0B713EC9510BDD141; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MorphPop_Fade_C9DB9DF84601DDB0B713EC9510BDD141;    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MorphPop_MorphPop_C9DB9DF84601DDB0B713EC9510BDD141; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            MorphPop__Direction_C9DB9DF84601DDB0B713EC9510BDD141; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MorphPop;                                          // 0x0368(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildAnim_Walls_TL_Wall_B_Y_A8958F34498B607B5D0BAA9C6B3A1E6F; // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildAnim_Walls_TL_Wall_B_X_A8958F34498B607B5D0BAA9C6B3A1E6F; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildAnim_Walls_TL_Wall_Z_A8958F34498B607B5D0BAA9C6B3A1E6F; // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildAnim_Walls_TL_Wall_Y_A8958F34498B607B5D0BAA9C6B3A1E6F; // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BuildAnim_Walls_TL_Wall_X_A8958F34498B607B5D0BAA9C6B3A1E6F; // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            BuildAnim_Walls_TL__Direction_A8958F34498B607B5D0BAA9C6B3A1E6F; // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BuildAnim_Walls_TL;                                // 0x0384(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         SquashAndStretchIn_TL_fFadeIn_F65A50F9485109D050DA48A27CA90AF5; // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         SquashAndStretchIn_TL_fSquashIn_F65A50F9485109D050DA48A27CA90AF5; // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            SquashAndStretchIn_TL__Direction_F65A50F9485109D050DA48A27CA90AF5; // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SquashAndStretchIn_TL;                             // 0x0394(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         GlobalFadeIn_TL_fGlobalFadeIn_A116FB5A4414B6F876C0289C97BD4B19; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            GlobalFadeIn_TL__Direction_A116FB5A4414B6F876C0289C97BD4B19; // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GlobalFadeIn_TL;                                   // 0x03A0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         GlobalFadeOut_TL_fGlobalFadeOut_C7CBEBC64EA8A4A48498E792B9E9A1FF; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            GlobalFadeOut_TL__Direction_C7CBEBC64EA8A4A48498E792B9E9A1FF; // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GlobalFadeOut_TL;                                  // 0x03AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMyFort_Manager_C*                      MyFortManager;                                     // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     BuildingMeshMaterial;                              // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AHB_RoadManager_C*                      RoadManager;                                       // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSubBuilding;                                     // 0x03BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            LockedState;                                       // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         LockZRot;                                          // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMesh*                            UnBuiltMesh;                                       // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         BuildingId;                                        // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               PlatformMID;                                       // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugStates;                                       // 0x03D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               BuildingMID;                                       // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               HoverBoxMID;                                       // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               LockMID;                                           // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Black;                                             // 0x03E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               UnbuiltMaterialMID;                                // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           LockedSelectionHover1;                             // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           LockedSelectionHover2;                             // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           IdleHover1;                                        // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           IdleHover2;                                        // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           UpgradeHover1;                                     // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           UpgradeHover2;                                     // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                HoloBuildingOffset;                                // 0x0458(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MenuOpened;                                        // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoverAnimComplete;                                 // 0x0465(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               WallXMID;                                          // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               WallYMID;                                          // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               WallBXMID;                                         // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               WallBYMID;                                         // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               WallMorphMID;                                      // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               BuildBoxMID;                                       // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               WallZMID;                                          // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               WallMorphBackMID;                                  // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               PopMID;                                            // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BuildingisBuilt;                                   // 0x048C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48D[0x3];                                      // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LockedIdleColor1;                                  // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           LockedIdleColor2;                                  // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         InitialLevel;                                      // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAnimating;                                        // 0x04B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TutorialBuilding;                                  // 0x04B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B6[0x2];                                      // 0x04B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TutorialCommandoScreenPos;                         // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           IdleUnbuiltHover1;                                 // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           IdleUnbuiltHover2;                                 // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              TutorialConstructorScreenPos;                      // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TutorialCommandoDist;                              // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TutorialConstructorDist;                           // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          inTutorial;                                        // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SavedZoom;                                         // 0x04F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SavedDist;                                         // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UpgradePath;                                       // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               BuildBuilding_LightEmitter;                        // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasBanner;                                         // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NewVar;                                            // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MyTown_Building_Master(int32 EntryPoint);
	void HandleClientEvent_OnboardingBuildingsStage3(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleClientEvent_OnboardingBuildingsStage2(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleClientEvent_OnboardingBuildingsStage1(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void OnBuildingInfoUpdated();
	void SetFlagIcon();
	void OnMyTownBuildingUpgradeFinished_Event_0(const class FString& BuildingTemplateId_0, bool bSuccess);
	void OnMyTownBuildingWorkersChanged_Event_0(const class FString& BuildingTemplateId_0);
	void OnMyTownBuildingPanelClosed_Event_0();
	void OnMyTownBuildingPanelOpened_Event_0(const class FString& BuildingTemplateId_0);
	void UpdateRoads();
	void CheckCollision();
	void OnEndCursorOver_Event_1();
	void OnBeginCursorOver_Event_1();
	void OnMyTownBuildingStateChanged_Event_0(EMyTownBuildingState NewState, EMyTownBuildingState OldState);
	void MyTown_BuildingStates(const class FString& Building_Template_ID);
	void SetUnbuiltPlatformIcon();
	void ReceiveBeginPlay();
	void UpgradeBuilding();
	void BuildBuilding();
	void CanUpgradeClosed();
	void CanUpgradeOpen();
	void LockedClosed();
	void LockedOpen();
	void CanBuildClosed();
	void CanBuildOpen();
	void IdleClosed();
	void IdleOpen();
	void CanUpgradeOut();
	void CanUpgradeOver();
	void HoloBuildingAnim(float Time);
	void HoloBuildingRotation();
	void HoloBuildingMeshAssign();
	void LockedOut();
	void LockedOver();
	void CanBuildOut();
	void CanBuildOver();
	void Idle_CursorOut();
	void Idle_Cursor_Over();
	void CanBuild();
	void Locked();
	void CanUpgrade();
	void idle();
	void AddWorkerAnimation();
	void BuildingUpgradeAnimation();
	void BuildSubbuildingAnimation();
	void BuildingAnimation();
	void HoloHoverAnim(class UMaterialInstanceDynamic* MID_Array, float SquashIntensity);
	void GlobalFadeIn(class UMaterialInstanceDynamic* Mid, class FName Parameter, bool Parameter_Collection);
	void GlobalFadeOut(class UMaterialInstanceDynamic* Mid, class FName Parameter, bool Parameter_Collection);
	void AddWorkerAnimation_TL__UpdateFunc();
	void AddWorkerAnimation_TL__FinishedFunc();
	void BuildingUpgrade_TL__UpdateFunc();
	void BuildingUpgrade_TL__FinishedFunc();
	void BubblePop__UpdateFunc();
	void BubblePop__FinishedFunc();
	void BuildingFlashOut__UpdateFunc();
	void BuildingFlashOut__FinishedFunc();
	void MorphPop__SpawnLightEmitter__EventFunc();
	void MorphPop__UpdateFunc();
	void MorphPop__FinishedFunc();
	void BuildAnim_Walls_TL__UpdateFunc();
	void BuildAnim_Walls_TL__FinishedFunc();
	void SquashAndStretchIn_TL__UpdateFunc();
	void SquashAndStretchIn_TL__FinishedFunc();
	void GlobalFadeIn_TL__UpdateFunc();
	void GlobalFadeIn_TL__FinishedFunc();
	void GlobalFadeOut_TL__UpdateFunc();
	void GlobalFadeOut_TL__FinishedFunc();
	void UserConstructionScript();
	void HasBeenBuilt(bool* Building_is_Built, int32* Building_Level);
	void State_Debug_Locked();
	void StateDebug_Idle();
	void StateDebug_Upgrade();
	void StateDebug_Build();
	void MIDCreation();
	void UpgradeIconFriendCheck();
	void Setup_Tooltip();
	void Set_Tooltip_Visibility(bool Visibile);
	void UpdateBangVisibility();
	void StencilBufferSetup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MyTown_Building_Master_C">();
	}
	static class AMyTown_Building_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMyTown_Building_Master_C>();
	}
};
static_assert(alignof(AMyTown_Building_Master_C) == 0x000004, "Wrong alignment on AMyTown_Building_Master_C");
static_assert(sizeof(AMyTown_Building_Master_C) == 0x000510, "Wrong size on AMyTown_Building_Master_C");
static_assert(offsetof(AMyTown_Building_Master_C, UberGraphFrame) == 0x0002D8, "Member 'AMyTown_Building_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, Flag) == 0x0002DC, "Member 'AMyTown_Building_Master_C::Flag' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GroundMesh) == 0x0002E0, "Member 'AMyTown_Building_Master_C::GroundMesh' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox) == 0x0002E4, "Member 'AMyTown_Building_Master_C::BuildBox' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_WallX) == 0x0002E8, "Member 'AMyTown_Building_Master_C::BuildBox_WallX' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_Pop) == 0x0002EC, "Member 'AMyTown_Building_Master_C::BuildBox_Pop' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_WallZ) == 0x0002F0, "Member 'AMyTown_Building_Master_C::BuildBox_WallZ' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_Morph) == 0x0002F4, "Member 'AMyTown_Building_Master_C::BuildBox_Morph' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_WallBY) == 0x0002F8, "Member 'AMyTown_Building_Master_C::BuildBox_WallBY' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_WallBX) == 0x0002FC, "Member 'AMyTown_Building_Master_C::BuildBox_WallBX' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBox_WallY) == 0x000300, "Member 'AMyTown_Building_Master_C::BuildBox_WallY' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, HoloBuilding) == 0x000304, "Member 'AMyTown_Building_Master_C::HoloBuilding' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, HoverBox) == 0x000308, "Member 'AMyTown_Building_Master_C::HoverBox' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UpgradeMesh) == 0x00030C, "Member 'AMyTown_Building_Master_C::UpgradeMesh' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UpgradeGlow) == 0x000310, "Member 'AMyTown_Building_Master_C::UpgradeGlow' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, Platform) == 0x000314, "Member 'AMyTown_Building_Master_C::Platform' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, Lock) == 0x000318, "Member 'AMyTown_Building_Master_C::Lock' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, AddWorkerAnimation_TL_WorkerFlash_BC2A05C3422A64750F9305A3348D77AB) == 0x00031C, "Member 'AMyTown_Building_Master_C::AddWorkerAnimation_TL_WorkerFlash_BC2A05C3422A64750F9305A3348D77AB' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, AddWorkerAnimation_TL__Direction_BC2A05C3422A64750F9305A3348D77AB) == 0x000320, "Member 'AMyTown_Building_Master_C::AddWorkerAnimation_TL__Direction_BC2A05C3422A64750F9305A3348D77AB' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, AddWorkerAnimation_TL) == 0x000324, "Member 'AMyTown_Building_Master_C::AddWorkerAnimation_TL' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingUpgrade_TL_Flash_022B1B3F407E08B018D67C85D55D6353) == 0x000328, "Member 'AMyTown_Building_Master_C::BuildingUpgrade_TL_Flash_022B1B3F407E08B018D67C85D55D6353' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingUpgrade_TL_Squash_and_Stretch_022B1B3F407E08B018D67C85D55D6353) == 0x00032C, "Member 'AMyTown_Building_Master_C::BuildingUpgrade_TL_Squash_and_Stretch_022B1B3F407E08B018D67C85D55D6353' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingUpgrade_TL__Direction_022B1B3F407E08B018D67C85D55D6353) == 0x000330, "Member 'AMyTown_Building_Master_C::BuildingUpgrade_TL__Direction_022B1B3F407E08B018D67C85D55D6353' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingUpgrade_TL) == 0x000334, "Member 'AMyTown_Building_Master_C::BuildingUpgrade_TL' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BubblePop_BubblePop_024074C647081B54E9FAC5B8E9DEF552) == 0x000338, "Member 'AMyTown_Building_Master_C::BubblePop_BubblePop_024074C647081B54E9FAC5B8E9DEF552' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BubblePop__Direction_024074C647081B54E9FAC5B8E9DEF552) == 0x00033C, "Member 'AMyTown_Building_Master_C::BubblePop__Direction_024074C647081B54E9FAC5B8E9DEF552' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BubblePop) == 0x000340, "Member 'AMyTown_Building_Master_C::BubblePop' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingFlashOut_BuildSquash_CADEA3F846AC0FDB2452EAB45F6A550B) == 0x000344, "Member 'AMyTown_Building_Master_C::BuildingFlashOut_BuildSquash_CADEA3F846AC0FDB2452EAB45F6A550B' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingFlashOut_NewBuildFlash_CADEA3F846AC0FDB2452EAB45F6A550B) == 0x000348, "Member 'AMyTown_Building_Master_C::BuildingFlashOut_NewBuildFlash_CADEA3F846AC0FDB2452EAB45F6A550B' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingFlashOut__Direction_CADEA3F846AC0FDB2452EAB45F6A550B) == 0x00034C, "Member 'AMyTown_Building_Master_C::BuildingFlashOut__Direction_CADEA3F846AC0FDB2452EAB45F6A550B' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingFlashOut) == 0x000350, "Member 'AMyTown_Building_Master_C::BuildingFlashOut' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MorphPop_Jiggle_C9DB9DF84601DDB0B713EC9510BDD141) == 0x000354, "Member 'AMyTown_Building_Master_C::MorphPop_Jiggle_C9DB9DF84601DDB0B713EC9510BDD141' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MorphPop_Distortion_C9DB9DF84601DDB0B713EC9510BDD141) == 0x000358, "Member 'AMyTown_Building_Master_C::MorphPop_Distortion_C9DB9DF84601DDB0B713EC9510BDD141' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MorphPop_Fade_C9DB9DF84601DDB0B713EC9510BDD141) == 0x00035C, "Member 'AMyTown_Building_Master_C::MorphPop_Fade_C9DB9DF84601DDB0B713EC9510BDD141' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MorphPop_MorphPop_C9DB9DF84601DDB0B713EC9510BDD141) == 0x000360, "Member 'AMyTown_Building_Master_C::MorphPop_MorphPop_C9DB9DF84601DDB0B713EC9510BDD141' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MorphPop__Direction_C9DB9DF84601DDB0B713EC9510BDD141) == 0x000364, "Member 'AMyTown_Building_Master_C::MorphPop__Direction_C9DB9DF84601DDB0B713EC9510BDD141' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MorphPop) == 0x000368, "Member 'AMyTown_Building_Master_C::MorphPop' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL_Wall_B_Y_A8958F34498B607B5D0BAA9C6B3A1E6F) == 0x00036C, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL_Wall_B_Y_A8958F34498B607B5D0BAA9C6B3A1E6F' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL_Wall_B_X_A8958F34498B607B5D0BAA9C6B3A1E6F) == 0x000370, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL_Wall_B_X_A8958F34498B607B5D0BAA9C6B3A1E6F' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL_Wall_Z_A8958F34498B607B5D0BAA9C6B3A1E6F) == 0x000374, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL_Wall_Z_A8958F34498B607B5D0BAA9C6B3A1E6F' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL_Wall_Y_A8958F34498B607B5D0BAA9C6B3A1E6F) == 0x000378, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL_Wall_Y_A8958F34498B607B5D0BAA9C6B3A1E6F' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL_Wall_X_A8958F34498B607B5D0BAA9C6B3A1E6F) == 0x00037C, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL_Wall_X_A8958F34498B607B5D0BAA9C6B3A1E6F' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL__Direction_A8958F34498B607B5D0BAA9C6B3A1E6F) == 0x000380, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL__Direction_A8958F34498B607B5D0BAA9C6B3A1E6F' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildAnim_Walls_TL) == 0x000384, "Member 'AMyTown_Building_Master_C::BuildAnim_Walls_TL' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, SquashAndStretchIn_TL_fFadeIn_F65A50F9485109D050DA48A27CA90AF5) == 0x000388, "Member 'AMyTown_Building_Master_C::SquashAndStretchIn_TL_fFadeIn_F65A50F9485109D050DA48A27CA90AF5' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, SquashAndStretchIn_TL_fSquashIn_F65A50F9485109D050DA48A27CA90AF5) == 0x00038C, "Member 'AMyTown_Building_Master_C::SquashAndStretchIn_TL_fSquashIn_F65A50F9485109D050DA48A27CA90AF5' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, SquashAndStretchIn_TL__Direction_F65A50F9485109D050DA48A27CA90AF5) == 0x000390, "Member 'AMyTown_Building_Master_C::SquashAndStretchIn_TL__Direction_F65A50F9485109D050DA48A27CA90AF5' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, SquashAndStretchIn_TL) == 0x000394, "Member 'AMyTown_Building_Master_C::SquashAndStretchIn_TL' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GlobalFadeIn_TL_fGlobalFadeIn_A116FB5A4414B6F876C0289C97BD4B19) == 0x000398, "Member 'AMyTown_Building_Master_C::GlobalFadeIn_TL_fGlobalFadeIn_A116FB5A4414B6F876C0289C97BD4B19' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GlobalFadeIn_TL__Direction_A116FB5A4414B6F876C0289C97BD4B19) == 0x00039C, "Member 'AMyTown_Building_Master_C::GlobalFadeIn_TL__Direction_A116FB5A4414B6F876C0289C97BD4B19' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GlobalFadeIn_TL) == 0x0003A0, "Member 'AMyTown_Building_Master_C::GlobalFadeIn_TL' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GlobalFadeOut_TL_fGlobalFadeOut_C7CBEBC64EA8A4A48498E792B9E9A1FF) == 0x0003A4, "Member 'AMyTown_Building_Master_C::GlobalFadeOut_TL_fGlobalFadeOut_C7CBEBC64EA8A4A48498E792B9E9A1FF' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GlobalFadeOut_TL__Direction_C7CBEBC64EA8A4A48498E792B9E9A1FF) == 0x0003A8, "Member 'AMyTown_Building_Master_C::GlobalFadeOut_TL__Direction_C7CBEBC64EA8A4A48498E792B9E9A1FF' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, GlobalFadeOut_TL) == 0x0003AC, "Member 'AMyTown_Building_Master_C::GlobalFadeOut_TL' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MyFortManager) == 0x0003B0, "Member 'AMyTown_Building_Master_C::MyFortManager' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingMeshMaterial) == 0x0003B4, "Member 'AMyTown_Building_Master_C::BuildingMeshMaterial' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, RoadManager) == 0x0003B8, "Member 'AMyTown_Building_Master_C::RoadManager' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, IsSubBuilding) == 0x0003BC, "Member 'AMyTown_Building_Master_C::IsSubBuilding' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockedState) == 0x0003C0, "Member 'AMyTown_Building_Master_C::LockedState' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockZRot) == 0x0003C4, "Member 'AMyTown_Building_Master_C::LockZRot' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UnBuiltMesh) == 0x0003C8, "Member 'AMyTown_Building_Master_C::UnBuiltMesh' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingId) == 0x0003CC, "Member 'AMyTown_Building_Master_C::BuildingId' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, PlatformMID) == 0x0003D0, "Member 'AMyTown_Building_Master_C::PlatformMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, DebugStates) == 0x0003D4, "Member 'AMyTown_Building_Master_C::DebugStates' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingMID) == 0x0003D8, "Member 'AMyTown_Building_Master_C::BuildingMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, HoverBoxMID) == 0x0003DC, "Member 'AMyTown_Building_Master_C::HoverBoxMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockMID) == 0x0003E0, "Member 'AMyTown_Building_Master_C::LockMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, Black) == 0x0003E4, "Member 'AMyTown_Building_Master_C::Black' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UnbuiltMaterialMID) == 0x0003F4, "Member 'AMyTown_Building_Master_C::UnbuiltMaterialMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockedSelectionHover1) == 0x0003F8, "Member 'AMyTown_Building_Master_C::LockedSelectionHover1' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockedSelectionHover2) == 0x000408, "Member 'AMyTown_Building_Master_C::LockedSelectionHover2' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, IdleHover1) == 0x000418, "Member 'AMyTown_Building_Master_C::IdleHover1' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, IdleHover2) == 0x000428, "Member 'AMyTown_Building_Master_C::IdleHover2' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UpgradeHover1) == 0x000438, "Member 'AMyTown_Building_Master_C::UpgradeHover1' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UpgradeHover2) == 0x000448, "Member 'AMyTown_Building_Master_C::UpgradeHover2' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, HoloBuildingOffset) == 0x000458, "Member 'AMyTown_Building_Master_C::HoloBuildingOffset' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, MenuOpened) == 0x000464, "Member 'AMyTown_Building_Master_C::MenuOpened' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, HoverAnimComplete) == 0x000465, "Member 'AMyTown_Building_Master_C::HoverAnimComplete' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallXMID) == 0x000468, "Member 'AMyTown_Building_Master_C::WallXMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallYMID) == 0x00046C, "Member 'AMyTown_Building_Master_C::WallYMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallBXMID) == 0x000470, "Member 'AMyTown_Building_Master_C::WallBXMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallBYMID) == 0x000474, "Member 'AMyTown_Building_Master_C::WallBYMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallMorphMID) == 0x000478, "Member 'AMyTown_Building_Master_C::WallMorphMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBoxMID) == 0x00047C, "Member 'AMyTown_Building_Master_C::BuildBoxMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallZMID) == 0x000480, "Member 'AMyTown_Building_Master_C::WallZMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, WallMorphBackMID) == 0x000484, "Member 'AMyTown_Building_Master_C::WallMorphBackMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, PopMID) == 0x000488, "Member 'AMyTown_Building_Master_C::PopMID' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildingisBuilt) == 0x00048C, "Member 'AMyTown_Building_Master_C::BuildingisBuilt' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockedIdleColor1) == 0x000490, "Member 'AMyTown_Building_Master_C::LockedIdleColor1' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, LockedIdleColor2) == 0x0004A0, "Member 'AMyTown_Building_Master_C::LockedIdleColor2' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, InitialLevel) == 0x0004B0, "Member 'AMyTown_Building_Master_C::InitialLevel' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, bAnimating) == 0x0004B4, "Member 'AMyTown_Building_Master_C::bAnimating' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, TutorialBuilding) == 0x0004B5, "Member 'AMyTown_Building_Master_C::TutorialBuilding' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, TutorialCommandoScreenPos) == 0x0004B8, "Member 'AMyTown_Building_Master_C::TutorialCommandoScreenPos' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, IdleUnbuiltHover1) == 0x0004C0, "Member 'AMyTown_Building_Master_C::IdleUnbuiltHover1' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, IdleUnbuiltHover2) == 0x0004D0, "Member 'AMyTown_Building_Master_C::IdleUnbuiltHover2' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, TutorialConstructorScreenPos) == 0x0004E0, "Member 'AMyTown_Building_Master_C::TutorialConstructorScreenPos' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, TutorialCommandoDist) == 0x0004E8, "Member 'AMyTown_Building_Master_C::TutorialCommandoDist' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, TutorialConstructorDist) == 0x0004EC, "Member 'AMyTown_Building_Master_C::TutorialConstructorDist' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, inTutorial) == 0x0004F0, "Member 'AMyTown_Building_Master_C::inTutorial' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, SavedZoom) == 0x0004F4, "Member 'AMyTown_Building_Master_C::SavedZoom' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, SavedDist) == 0x0004FC, "Member 'AMyTown_Building_Master_C::SavedDist' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, UpgradePath) == 0x000500, "Member 'AMyTown_Building_Master_C::UpgradePath' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, BuildBuilding_LightEmitter) == 0x000504, "Member 'AMyTown_Building_Master_C::BuildBuilding_LightEmitter' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, HasBanner) == 0x000508, "Member 'AMyTown_Building_Master_C::HasBanner' has a wrong offset!");
static_assert(offsetof(AMyTown_Building_Master_C, NewVar) == 0x00050C, "Member 'AMyTown_Building_Master_C::NewVar' has a wrong offset!");

}

#pragma pack(pop)
