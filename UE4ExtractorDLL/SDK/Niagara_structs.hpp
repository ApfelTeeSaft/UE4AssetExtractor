#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Niagara

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Enum Niagara.ENiagaraDataSetType
// NumValues: 0x0004
enum class ENiagaraDataSetType : uint8
{
	ParticleData                             = 0,
	Shared                                   = 1,
	Event                                    = 2,
	ENiagaraDataSetType_MAX                  = 3,
};

// Enum Niagara.ENiagaraDataType
// NumValues: 0x0005
enum class ENiagaraDataType : uint8
{
	Scalar                                   = 0,
	Vector                                   = 1,
	Matrix                                   = 2,
	Curve                                    = 3,
	ENiagaraDataType_MAX                     = 4,
};

// Enum Niagara.EUnusedAttributeBehaviour
// NumValues: 0x0005
enum class EUnusedAttributeBehaviour : uint8
{
	Copy                                     = 0,
	Zero                                     = 1,
	None                                     = 2,
	MarkInvalid                              = 3,
	EUnusedAttributeBehaviour_MAX            = 4,
};

// Enum Niagara.EEmitterRenderModuleType
// NumValues: 0x0006
enum class EEmitterRenderModuleType : uint8
{
	RMT_None                                 = 0,
	RMT_Sprites                              = 1,
	RMT_Ribbon                               = 2,
	RMT_Trails                               = 3,
	RMT_Meshes                               = 4,
	RMT_MAX                                  = 5,
};

// ScriptStruct Niagara.NiagaraConstantBase
// 0x0008 (0x0008 - 0x0000)
struct FNiagaraConstantBase
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstantBase) == 0x000004, "Wrong alignment on FNiagaraConstantBase");
static_assert(sizeof(FNiagaraConstantBase) == 0x000008, "Wrong size on FNiagaraConstantBase");
static_assert(offsetof(FNiagaraConstantBase, Name) == 0x000000, "Member 'FNiagaraConstantBase::Name' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstants_Float
// 0x0004 (0x000C - 0x0008)
struct FNiagaraConstants_Float final : public FNiagaraConstantBase
{
public:
	float                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstants_Float) == 0x000004, "Wrong alignment on FNiagaraConstants_Float");
static_assert(sizeof(FNiagaraConstants_Float) == 0x00000C, "Wrong size on FNiagaraConstants_Float");
static_assert(offsetof(FNiagaraConstants_Float, Value) == 0x000008, "Member 'FNiagaraConstants_Float::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstants_Matrix
// 0x0048 (0x0050 - 0x0008)
struct FNiagaraConstants_Matrix final : public FNiagaraConstantBase
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                Value;                                             // 0x0010(0x0040)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstants_Matrix) == 0x000010, "Wrong alignment on FNiagaraConstants_Matrix");
static_assert(sizeof(FNiagaraConstants_Matrix) == 0x000050, "Wrong size on FNiagaraConstants_Matrix");
static_assert(offsetof(FNiagaraConstants_Matrix, Value) == 0x000010, "Member 'FNiagaraConstants_Matrix::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstants_Vector
// 0x0018 (0x0020 - 0x0008)
struct FNiagaraConstants_Vector final : public FNiagaraConstantBase
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Value;                                             // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstants_Vector) == 0x000010, "Wrong alignment on FNiagaraConstants_Vector");
static_assert(sizeof(FNiagaraConstants_Vector) == 0x000020, "Wrong size on FNiagaraConstants_Vector");
static_assert(offsetof(FNiagaraConstants_Vector, Value) == 0x000010, "Member 'FNiagaraConstants_Vector::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstants_DataObject
// 0x0004 (0x000C - 0x0008)
struct FNiagaraConstants_DataObject final : public FNiagaraConstantBase
{
public:
	class UNiagaraDataObject*                     Value;                                             // 0x0008(0x0004)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstants_DataObject) == 0x000004, "Wrong alignment on FNiagaraConstants_DataObject");
static_assert(sizeof(FNiagaraConstants_DataObject) == 0x00000C, "Wrong size on FNiagaraConstants_DataObject");
static_assert(offsetof(FNiagaraConstants_DataObject, Value) == 0x000008, "Member 'FNiagaraConstants_DataObject::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstants
// 0x0030 (0x0030 - 0x0000)
struct FNiagaraConstants final
{
public:
	TArray<struct FNiagaraConstants_Float>        ScalarConstants;                                   // 0x0000(0x000C)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraConstants_Vector>       VectorConstants;                                   // 0x000C(0x000C)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraConstants_Matrix>       MatrixConstants;                                   // 0x0018(0x000C)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraConstants_DataObject>   DataObjectConstants;                               // 0x0024(0x000C)(Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstants) == 0x000004, "Wrong alignment on FNiagaraConstants");
static_assert(sizeof(FNiagaraConstants) == 0x000030, "Wrong size on FNiagaraConstants");
static_assert(offsetof(FNiagaraConstants, ScalarConstants) == 0x000000, "Member 'FNiagaraConstants::ScalarConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraConstants, VectorConstants) == 0x00000C, "Member 'FNiagaraConstants::VectorConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraConstants, MatrixConstants) == 0x000018, "Member 'FNiagaraConstants::MatrixConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraConstants, DataObjectConstants) == 0x000024, "Member 'FNiagaraConstants::DataObjectConstants' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventReceiverProperties
// 0x0024 (0x0024 - 0x0000)
struct FNiagaraEventReceiverProperties final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceEventGenerator;                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceEmitter;                                     // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNiagaraEventReceiverEmitterAction*> EmitterActions;                                    // 0x0018(0x000C)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEventReceiverProperties) == 0x000004, "Wrong alignment on FNiagaraEventReceiverProperties");
static_assert(sizeof(FNiagaraEventReceiverProperties) == 0x000024, "Wrong size on FNiagaraEventReceiverProperties");
static_assert(offsetof(FNiagaraEventReceiverProperties, Name) == 0x000000, "Member 'FNiagaraEventReceiverProperties::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, SourceEventGenerator) == 0x000008, "Member 'FNiagaraEventReceiverProperties::SourceEventGenerator' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, SourceEmitter) == 0x000010, "Member 'FNiagaraEventReceiverProperties::SourceEmitter' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, EmitterActions) == 0x000018, "Member 'FNiagaraEventReceiverProperties::EmitterActions' has a wrong offset!");

// ScriptStruct Niagara.NiagaraDataSetID
// 0x000C (0x000C - 0x0000)
struct FNiagaraDataSetID final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraDataSetType                           Type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraDataSetID) == 0x000004, "Wrong alignment on FNiagaraDataSetID");
static_assert(sizeof(FNiagaraDataSetID) == 0x00000C, "Wrong size on FNiagaraDataSetID");
static_assert(offsetof(FNiagaraDataSetID, Name) == 0x000000, "Member 'FNiagaraDataSetID::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraDataSetID, Type) == 0x000008, "Member 'FNiagaraDataSetID::Type' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariableInfo
// 0x000C (0x000C - 0x0000)
struct FNiagaraVariableInfo final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraDataType                              Type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraVariableInfo) == 0x000004, "Wrong alignment on FNiagaraVariableInfo");
static_assert(sizeof(FNiagaraVariableInfo) == 0x00000C, "Wrong size on FNiagaraVariableInfo");
static_assert(offsetof(FNiagaraVariableInfo, Name) == 0x000000, "Member 'FNiagaraVariableInfo::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableInfo, Type) == 0x000008, "Member 'FNiagaraVariableInfo::Type' has a wrong offset!");

// ScriptStruct Niagara.NiagaraDataSetProperties
// 0x0018 (0x0018 - 0x0000)
struct FNiagaraDataSetProperties
{
public:
	struct FNiagaraDataSetID                      ID;                                                // 0x0000(0x000C)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariableInfo>           Variables;                                         // 0x000C(0x000C)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraDataSetProperties) == 0x000004, "Wrong alignment on FNiagaraDataSetProperties");
static_assert(sizeof(FNiagaraDataSetProperties) == 0x000018, "Wrong size on FNiagaraDataSetProperties");
static_assert(offsetof(FNiagaraDataSetProperties, ID) == 0x000000, "Member 'FNiagaraDataSetProperties::ID' has a wrong offset!");
static_assert(offsetof(FNiagaraDataSetProperties, Variables) == 0x00000C, "Member 'FNiagaraDataSetProperties::Variables' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventGeneratorProperties
// 0x0004 (0x001C - 0x0018)
struct FNiagaraEventGeneratorProperties final : public FNiagaraDataSetProperties
{
public:
	int32                                         MaxEventsPerFrame;                                 // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEventGeneratorProperties) == 0x000004, "Wrong alignment on FNiagaraEventGeneratorProperties");
static_assert(sizeof(FNiagaraEventGeneratorProperties) == 0x00001C, "Wrong size on FNiagaraEventGeneratorProperties");
static_assert(offsetof(FNiagaraEventGeneratorProperties, MaxEventsPerFrame) == 0x000018, "Member 'FNiagaraEventGeneratorProperties::MaxEventsPerFrame' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEmitterScriptProperties
// 0x004C (0x004C - 0x0000)
struct FNiagaraEmitterScriptProperties final
{
public:
	class UNiagaraScript*                         Script;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraConstants                      ExternalConstants;                                 // 0x0004(0x0030)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraEventReceiverProperties> EventReceivers;                                    // 0x0034(0x000C)(Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraEventGeneratorProperties> EventGenerators;                                   // 0x0040(0x000C)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEmitterScriptProperties) == 0x000004, "Wrong alignment on FNiagaraEmitterScriptProperties");
static_assert(sizeof(FNiagaraEmitterScriptProperties) == 0x00004C, "Wrong size on FNiagaraEmitterScriptProperties");
static_assert(offsetof(FNiagaraEmitterScriptProperties, Script) == 0x000000, "Member 'FNiagaraEmitterScriptProperties::Script' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, ExternalConstants) == 0x000004, "Member 'FNiagaraEmitterScriptProperties::ExternalConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, EventReceivers) == 0x000034, "Member 'FNiagaraEmitterScriptProperties::EventReceivers' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, EventGenerators) == 0x000040, "Member 'FNiagaraEmitterScriptProperties::EventGenerators' has a wrong offset!");

// ScriptStruct Niagara.DeprecatedNiagaraConstants
// 0x0060 (0x0060 - 0x0000)
struct FDeprecatedNiagaraConstants final
{
public:
	TArray<struct FNiagaraVariableInfo>           ScalarConstantsInfo;                               // 0x0000(0x000C)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariableInfo>           VectorConstantsInfo;                               // 0x000C(0x000C)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariableInfo>           MatrixConstantsInfo;                               // 0x0018(0x000C)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ScalarConstants;                                   // 0x0030(0x000C)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FVector4>                       VectorConstants;                                   // 0x003C(0x000C)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FMatrix>                        MatrixConstants;                                   // 0x0048(0x000C)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDeprecatedNiagaraConstants) == 0x000004, "Wrong alignment on FDeprecatedNiagaraConstants");
static_assert(sizeof(FDeprecatedNiagaraConstants) == 0x000060, "Wrong size on FDeprecatedNiagaraConstants");
static_assert(offsetof(FDeprecatedNiagaraConstants, ScalarConstantsInfo) == 0x000000, "Member 'FDeprecatedNiagaraConstants::ScalarConstantsInfo' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraConstants, VectorConstantsInfo) == 0x00000C, "Member 'FDeprecatedNiagaraConstants::VectorConstantsInfo' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraConstants, MatrixConstantsInfo) == 0x000018, "Member 'FDeprecatedNiagaraConstants::MatrixConstantsInfo' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraConstants, ScalarConstants) == 0x000030, "Member 'FDeprecatedNiagaraConstants::ScalarConstants' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraConstants, VectorConstants) == 0x00003C, "Member 'FDeprecatedNiagaraConstants::VectorConstants' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraConstants, MatrixConstants) == 0x000048, "Member 'FDeprecatedNiagaraConstants::MatrixConstants' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstantMap
// 0x00F4 (0x00F4 - 0x0000)
struct alignas(0x04) FNiagaraConstantMap final
{
public:
	uint8                                         Pad_0[0xF4];                                       // 0x0000(0x00F4)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraConstantMap) == 0x000004, "Wrong alignment on FNiagaraConstantMap");
static_assert(sizeof(FNiagaraConstantMap) == 0x0000F4, "Wrong size on FNiagaraConstantMap");

// ScriptStruct Niagara.NiagaraScriptConstantData
// 0x0120 (0x0120 - 0x0000)
struct FNiagaraScriptConstantData final
{
public:
	struct FDeprecatedNiagaraConstants            ExternalConstants;                                 // 0x0000(0x0060)(Deprecated, NativeAccessSpecifierPublic)
	struct FDeprecatedNiagaraConstants            InternalConstants;                                 // 0x0060(0x0060)(Deprecated, NativeAccessSpecifierPublic)
	struct FNiagaraConstants                      ExternalConstantsNew;                              // 0x00C0(0x0030)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FNiagaraConstants                      InternalConstantsNew;                              // 0x00F0(0x0030)(ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraScriptConstantData) == 0x000004, "Wrong alignment on FNiagaraScriptConstantData");
static_assert(sizeof(FNiagaraScriptConstantData) == 0x000120, "Wrong size on FNiagaraScriptConstantData");
static_assert(offsetof(FNiagaraScriptConstantData, ExternalConstants) == 0x000000, "Member 'FNiagaraScriptConstantData::ExternalConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptConstantData, InternalConstants) == 0x000060, "Member 'FNiagaraScriptConstantData::InternalConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptConstantData, ExternalConstantsNew) == 0x0000C0, "Member 'FNiagaraScriptConstantData::ExternalConstantsNew' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptConstantData, InternalConstantsNew) == 0x0000F0, "Member 'FNiagaraScriptConstantData::InternalConstantsNew' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptUsageInfo
// 0x0001 (0x0001 - 0x0000)
struct FNiagaraScriptUsageInfo final
{
public:
	bool                                          bReadsAttriubteData;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraScriptUsageInfo) == 0x000001, "Wrong alignment on FNiagaraScriptUsageInfo");
static_assert(sizeof(FNiagaraScriptUsageInfo) == 0x000001, "Wrong size on FNiagaraScriptUsageInfo");
static_assert(offsetof(FNiagaraScriptUsageInfo, bReadsAttriubteData) == 0x000000, "Member 'FNiagaraScriptUsageInfo::bReadsAttriubteData' has a wrong offset!");

// ScriptStruct Niagara.DeprecatedNiagaraEmitterProperties
// 0x021C (0x021C - 0x0000)
struct FDeprecatedNiagaraEmitterProperties final
{
public:
	class FString                                 Name;                                              // 0x0000(0x000C)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEnabled;                                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnRate;                                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraScript*                         UpdateScript;                                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraScript*                         SpawnScript;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              Material;                                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEmitterRenderModuleType                      RenderModuleType;                                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartTime;                                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraEffectRendererProperties*       RendererProperties;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraConstantMap                    ExternalConstants;                                 // 0x0030(0x00F4)(NativeAccessSpecifierPublic)
	struct FNiagaraConstantMap                    ExternalSpawnConstants;                            // 0x0124(0x00F4)(NativeAccessSpecifierPublic)
	int32                                         NumLoops;                                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDeprecatedNiagaraEmitterProperties) == 0x000004, "Wrong alignment on FDeprecatedNiagaraEmitterProperties");
static_assert(sizeof(FDeprecatedNiagaraEmitterProperties) == 0x00021C, "Wrong size on FDeprecatedNiagaraEmitterProperties");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, Name) == 0x000000, "Member 'FDeprecatedNiagaraEmitterProperties::Name' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, bIsEnabled) == 0x00000C, "Member 'FDeprecatedNiagaraEmitterProperties::bIsEnabled' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, SpawnRate) == 0x000010, "Member 'FDeprecatedNiagaraEmitterProperties::SpawnRate' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, UpdateScript) == 0x000014, "Member 'FDeprecatedNiagaraEmitterProperties::UpdateScript' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, SpawnScript) == 0x000018, "Member 'FDeprecatedNiagaraEmitterProperties::SpawnScript' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, Material) == 0x00001C, "Member 'FDeprecatedNiagaraEmitterProperties::Material' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, RenderModuleType) == 0x000020, "Member 'FDeprecatedNiagaraEmitterProperties::RenderModuleType' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, StartTime) == 0x000024, "Member 'FDeprecatedNiagaraEmitterProperties::StartTime' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, EndTime) == 0x000028, "Member 'FDeprecatedNiagaraEmitterProperties::EndTime' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, RendererProperties) == 0x00002C, "Member 'FDeprecatedNiagaraEmitterProperties::RendererProperties' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, ExternalConstants) == 0x000030, "Member 'FDeprecatedNiagaraEmitterProperties::ExternalConstants' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, ExternalSpawnConstants) == 0x000124, "Member 'FDeprecatedNiagaraEmitterProperties::ExternalSpawnConstants' has a wrong offset!");
static_assert(offsetof(FDeprecatedNiagaraEmitterProperties, NumLoops) == 0x000218, "Member 'FDeprecatedNiagaraEmitterProperties::NumLoops' has a wrong offset!");

}

#pragma pack(pop)
