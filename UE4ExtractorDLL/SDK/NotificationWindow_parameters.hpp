#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NotificationWindow

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function NotificationWindow.NotificationWindow_C.ExecuteUbergraph_NotificationWindow
// 0x0010 (0x0010 - 0x0000)
struct NotificationWindow_C_ExecuteUbergraph_NotificationWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0004(0x0004)()
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_ExecuteUbergraph_NotificationWindow) == 0x000004, "Wrong alignment on NotificationWindow_C_ExecuteUbergraph_NotificationWindow");
static_assert(sizeof(NotificationWindow_C_ExecuteUbergraph_NotificationWindow) == 0x000010, "Wrong size on NotificationWindow_C_ExecuteUbergraph_NotificationWindow");
static_assert(offsetof(NotificationWindow_C_ExecuteUbergraph_NotificationWindow, EntryPoint) == 0x000000, "Member 'NotificationWindow_C_ExecuteUbergraph_NotificationWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_ExecuteUbergraph_NotificationWindow, CallFunc_K2_SetTimer_ReturnValue) == 0x000004, "Member 'NotificationWindow_C_ExecuteUbergraph_NotificationWindow::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_ExecuteUbergraph_NotificationWindow, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'NotificationWindow_C_ExecuteUbergraph_NotificationWindow::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_ExecuteUbergraph_NotificationWindow, CallFunc_GetContext_ReturnValue2) == 0x00000C, "Member 'NotificationWindow_C_ExecuteUbergraph_NotificationWindow::CallFunc_GetContext_ReturnValue2' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.StartNotification
// 0x0050 (0x0050 - 0x0000)
struct NotificationWindow_C_StartNotification final
{
public:
	struct FFortDialogDescription                 NotificationDescription;                           // 0x0000(0x0050)(Parm)
};
static_assert(alignof(NotificationWindow_C_StartNotification) == 0x000004, "Wrong alignment on NotificationWindow_C_StartNotification");
static_assert(sizeof(NotificationWindow_C_StartNotification) == 0x000050, "Wrong size on NotificationWindow_C_StartNotification");
static_assert(offsetof(NotificationWindow_C_StartNotification, NotificationDescription) == 0x000000, "Member 'NotificationWindow_C_StartNotification::NotificationDescription' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.RegisterNotificationHandler
// 0x0014 (0x0014 - 0x0000)
struct NotificationWindow_C_RegisterNotificationHandler final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_RegisterNotificationHandler) == 0x000004, "Wrong alignment on NotificationWindow_C_RegisterNotificationHandler");
static_assert(sizeof(NotificationWindow_C_RegisterNotificationHandler) == 0x000014, "Wrong size on NotificationWindow_C_RegisterNotificationHandler");
static_assert(offsetof(NotificationWindow_C_RegisterNotificationHandler, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'NotificationWindow_C_RegisterNotificationHandler::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_RegisterNotificationHandler, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'NotificationWindow_C_RegisterNotificationHandler::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.SetTitle
// 0x0010 (0x0010 - 0x0000)
struct NotificationWindow_C_SetTitle final
{
public:
	class FText                                   InText;                                            // 0x0000(0x000C)(Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_SetTitle) == 0x000004, "Wrong alignment on NotificationWindow_C_SetTitle");
static_assert(sizeof(NotificationWindow_C_SetTitle) == 0x000010, "Wrong size on NotificationWindow_C_SetTitle");
static_assert(offsetof(NotificationWindow_C_SetTitle, InText) == 0x000000, "Member 'NotificationWindow_C_SetTitle::InText' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_SetTitle, CallFunc_TextIsEmpty_ReturnValue) == 0x00000C, "Member 'NotificationWindow_C_SetTitle::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.SetMessage
// 0x0010 (0x0010 - 0x0000)
struct NotificationWindow_C_SetMessage final
{
public:
	class FText                                   InText;                                            // 0x0000(0x000C)(Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_SetMessage) == 0x000004, "Wrong alignment on NotificationWindow_C_SetMessage");
static_assert(sizeof(NotificationWindow_C_SetMessage) == 0x000010, "Wrong size on NotificationWindow_C_SetMessage");
static_assert(offsetof(NotificationWindow_C_SetMessage, InText) == 0x000000, "Member 'NotificationWindow_C_SetMessage::InText' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_SetMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x00000C, "Member 'NotificationWindow_C_SetMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.SetAcceptButton
// 0x0010 (0x0010 - 0x0000)
struct NotificationWindow_C_SetAcceptButton final
{
public:
	class FText                                   InText;                                            // 0x0000(0x000C)(Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_SetAcceptButton) == 0x000004, "Wrong alignment on NotificationWindow_C_SetAcceptButton");
static_assert(sizeof(NotificationWindow_C_SetAcceptButton) == 0x000010, "Wrong size on NotificationWindow_C_SetAcceptButton");
static_assert(offsetof(NotificationWindow_C_SetAcceptButton, InText) == 0x000000, "Member 'NotificationWindow_C_SetAcceptButton::InText' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_SetAcceptButton, CallFunc_TextIsEmpty_ReturnValue) == 0x00000C, "Member 'NotificationWindow_C_SetAcceptButton::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.SetIgnoreButton
// 0x0010 (0x0010 - 0x0000)
struct NotificationWindow_C_SetIgnoreButton final
{
public:
	class FText                                   InText;                                            // 0x0000(0x000C)(Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_SetIgnoreButton) == 0x000004, "Wrong alignment on NotificationWindow_C_SetIgnoreButton");
static_assert(sizeof(NotificationWindow_C_SetIgnoreButton) == 0x000010, "Wrong size on NotificationWindow_C_SetIgnoreButton");
static_assert(offsetof(NotificationWindow_C_SetIgnoreButton, InText) == 0x000000, "Member 'NotificationWindow_C_SetIgnoreButton::InText' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_SetIgnoreButton, CallFunc_TextIsEmpty_ReturnValue) == 0x00000C, "Member 'NotificationWindow_C_SetIgnoreButton::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.FinishHandlingNotification
// 0x0004 (0x0004 - 0x0000)
struct NotificationWindow_C_FinishHandlingNotification final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_FinishHandlingNotification) == 0x000004, "Wrong alignment on NotificationWindow_C_FinishHandlingNotification");
static_assert(sizeof(NotificationWindow_C_FinishHandlingNotification) == 0x000004, "Wrong size on NotificationWindow_C_FinishHandlingNotification");
static_assert(offsetof(NotificationWindow_C_FinishHandlingNotification, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'NotificationWindow_C_FinishHandlingNotification::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.TryConsumeNextNotification
// 0x0058 (0x0058 - 0x0000)
struct NotificationWindow_C_TryConsumeNextNotification final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortDialogDescription                 CallFunc_GetNextNotification_NotifcationDescription; // 0x0004(0x0050)()
	bool                                          CallFunc_GetNextNotification_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_TryConsumeNextNotification) == 0x000004, "Wrong alignment on NotificationWindow_C_TryConsumeNextNotification");
static_assert(sizeof(NotificationWindow_C_TryConsumeNextNotification) == 0x000058, "Wrong size on NotificationWindow_C_TryConsumeNextNotification");
static_assert(offsetof(NotificationWindow_C_TryConsumeNextNotification, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'NotificationWindow_C_TryConsumeNextNotification::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_TryConsumeNextNotification, CallFunc_GetNextNotification_NotifcationDescription) == 0x000004, "Member 'NotificationWindow_C_TryConsumeNextNotification::CallFunc_GetNextNotification_NotifcationDescription' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_TryConsumeNextNotification, CallFunc_GetNextNotification_ReturnValue) == 0x000054, "Member 'NotificationWindow_C_TryConsumeNextNotification::CallFunc_GetNextNotification_ReturnValue' has a wrong offset!");

// Function NotificationWindow.NotificationWindow_C.PlayFeedback
// 0x000C (0x000C - 0x0000)
struct NotificationWindow_C_PlayFeedback final
{
public:
	EFortDialogFeedbackType                       FeedBackType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogFeedbackType                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationWindow_C_PlayFeedback) == 0x000004, "Wrong alignment on NotificationWindow_C_PlayFeedback");
static_assert(sizeof(NotificationWindow_C_PlayFeedback) == 0x00000C, "Wrong size on NotificationWindow_C_PlayFeedback");
static_assert(offsetof(NotificationWindow_C_PlayFeedback, FeedBackType) == 0x000000, "Member 'NotificationWindow_C_PlayFeedback::FeedBackType' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_PlayFeedback, Temp_byte_Variable) == 0x000001, "Member 'NotificationWindow_C_PlayFeedback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_PlayFeedback, Temp_object_Variable) == 0x000004, "Member 'NotificationWindow_C_PlayFeedback::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(NotificationWindow_C_PlayFeedback, K2Node_Select_Default) == 0x000008, "Member 'NotificationWindow_C_PlayFeedback::K2Node_Select_Default' has a wrong offset!");

}

#pragma pack(pop)
