#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OculusLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// ScriptStruct OculusLibrary.HmdUserProfileField
// 0x0018 (0x0018 - 0x0000)
struct FHmdUserProfileField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x000C)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FieldValue;                                        // 0x000C(0x000C)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHmdUserProfileField) == 0x000004, "Wrong alignment on FHmdUserProfileField");
static_assert(sizeof(FHmdUserProfileField) == 0x000018, "Wrong size on FHmdUserProfileField");
static_assert(offsetof(FHmdUserProfileField, FieldName) == 0x000000, "Member 'FHmdUserProfileField::FieldName' has a wrong offset!");
static_assert(offsetof(FHmdUserProfileField, FieldValue) == 0x00000C, "Member 'FHmdUserProfileField::FieldValue' has a wrong offset!");

// ScriptStruct OculusLibrary.HmdUserProfile
// 0x0038 (0x0038 - 0x0000)
struct FHmdUserProfile final
{
public:
	class FString                                 Name;                                              // 0x0000(0x000C)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Gender;                                            // 0x000C(0x000C)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerHeight;                                      // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeHeight;                                         // 0x001C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IPD;                                               // 0x0020(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              NeckToEyeDistance;                                 // 0x0024(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FHmdUserProfileField>           ExtraFields;                                       // 0x002C(0x000C)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHmdUserProfile) == 0x000004, "Wrong alignment on FHmdUserProfile");
static_assert(sizeof(FHmdUserProfile) == 0x000038, "Wrong size on FHmdUserProfile");
static_assert(offsetof(FHmdUserProfile, Name) == 0x000000, "Member 'FHmdUserProfile::Name' has a wrong offset!");
static_assert(offsetof(FHmdUserProfile, Gender) == 0x00000C, "Member 'FHmdUserProfile::Gender' has a wrong offset!");
static_assert(offsetof(FHmdUserProfile, PlayerHeight) == 0x000018, "Member 'FHmdUserProfile::PlayerHeight' has a wrong offset!");
static_assert(offsetof(FHmdUserProfile, EyeHeight) == 0x00001C, "Member 'FHmdUserProfile::EyeHeight' has a wrong offset!");
static_assert(offsetof(FHmdUserProfile, IPD) == 0x000020, "Member 'FHmdUserProfile::IPD' has a wrong offset!");
static_assert(offsetof(FHmdUserProfile, NeckToEyeDistance) == 0x000024, "Member 'FHmdUserProfile::NeckToEyeDistance' has a wrong offset!");
static_assert(offsetof(FHmdUserProfile, ExtraFields) == 0x00002C, "Member 'FHmdUserProfile::ExtraFields' has a wrong offset!");

}

#pragma pack(pop)
