#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Commando

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.ExecuteUbergraph_PlayerPawn_Commando
// 0x034C (0x034C - 0x0000)
struct PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType5;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters5;               // 0x0008(0x0084)()
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType4;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters4;               // 0x0090(0x0084)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType3;                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters3;               // 0x0118(0x0084)()
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType2;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters2;               // 0x01A4(0x0084)()
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0238(0x0058)()
	class AController*                            K2Node_Event_NewController;                        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x0298(0x0084)()
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando");
static_assert(sizeof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando) == 0x00034C, "Wrong size on PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, EntryPoint) == 0x000000, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_EventType5) == 0x000004, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_EventType5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_Parameters5) == 0x000008, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_Parameters5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_EventType4) == 0x00008C, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_EventType4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_Parameters4) == 0x000090, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_Parameters4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_SwitchEnum_CmpSuccess) == 0x000114, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_EventType3) == 0x000115, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_EventType3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_Parameters3) == 0x000118, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_Parameters3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x00019C, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_SwitchEnum2_CmpSuccess) == 0x0001A0, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_EventType2) == 0x0001A1, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_EventType2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_Parameters2) == 0x0001A4, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_Parameters2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_SwitchEnum3_CmpSuccess) == 0x000228, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x00022C, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000234, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_MakeStruct_GameplayEventData) == 0x000238, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_Event_NewController) == 0x000290, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_EventType) == 0x000294, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_GameplayCueEvent_Parameters) == 0x000298, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, K2Node_SwitchEnum4_CmpSuccess) == 0x00031C, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_MakeRotFromX_ReturnValue) == 0x000320, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00032C, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000330, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_MakeVector_ReturnValue) == 0x000334, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando, CallFunc_MakeVector_ReturnValue2) == 0x000340, "Member 'PlayerPawn_Commando_C_ExecuteUbergraph_PlayerPawn_Commando::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.GameplayCue.Abilities.Activation.Commando.Shockwave
// 0x0088 (0x0088 - 0x0000)
struct PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave");
static_assert(sizeof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave) == 0x000088, "Wrong size on PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave, EventType) == 0x000000, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave, Parameters) == 0x000004, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Commando_Shockwave::Parameters' has a wrong offset!");

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.ReceivePossessed
// 0x0004 (0x0004 - 0x0000)
struct PlayerPawn_Commando_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerPawn_Commando_C_ReceivePossessed) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_ReceivePossessed");
static_assert(sizeof(PlayerPawn_Commando_C_ReceivePossessed) == 0x000004, "Wrong size on PlayerPawn_Commando_C_ReceivePossessed");
static_assert(offsetof(PlayerPawn_Commando_C_ReceivePossessed, NewController) == 0x000000, "Member 'PlayerPawn_Commando_C_ReceivePossessed::NewController' has a wrong offset!");

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier2
// 0x0088 (0x0088 - 0x0000)
struct PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2 final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2");
static_assert(sizeof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2) == 0x000088, "Wrong size on PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2, EventType) == 0x000000, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2, Parameters) == 0x000004, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2::Parameters' has a wrong offset!");

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier1
// 0x0088 (0x0088 - 0x0000)
struct PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1 final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1");
static_assert(sizeof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1) == 0x000088, "Wrong size on PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1, EventType) == 0x000000, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1, Parameters) == 0x000004, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1::Parameters' has a wrong offset!");

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.GameplayCue.Abilities.Applied.Commando.MakeItRain
// 0x0088 (0x0088 - 0x0000)
struct PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain");
static_assert(sizeof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain) == 0x000088, "Wrong size on PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain, EventType) == 0x000000, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain, Parameters) == 0x000004, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_MakeItRain::Parameters' has a wrong offset!");

// Function PlayerPawn_Commando.PlayerPawn_Commando_C.GameplayCue.Abilities.Applied.Commando.IncendiaryRounds
// 0x0088 (0x0088 - 0x0000)
struct PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(Parm)
};
static_assert(alignof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds) == 0x000004, "Wrong alignment on PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds");
static_assert(sizeof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds) == 0x000088, "Wrong size on PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds, EventType) == 0x000000, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds, Parameters) == 0x000004, "Member 'PlayerPawn_Commando_C_GameplayCue_Abilities_Applied_Commando_IncendiaryRounds::Parameters' has a wrong offset!");

}

#pragma pack(pop)
