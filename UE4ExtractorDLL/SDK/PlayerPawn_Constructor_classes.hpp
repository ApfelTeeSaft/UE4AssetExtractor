#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Constructor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PlayerPawn_Generic_classes.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Constructor.PlayerPawn_Constructor_C
// 0x00C0 (0x1000 - 0x0F40)
class APlayerPawn_Constructor_C final : public APlayerPawn_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Constructor_C;           // 0x0F40(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BullRushCollision;                                 // 0x0F44(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UBoxComponent*                          BullRushStopCollision;                             // 0x0F48(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_UpperBody_Back;                          // 0x0F4C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFSHield_Thigh_L;                                 // 0x0F50(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Shoulders_L;                             // 0x0F54(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Shin_R;                                  // 0x0F58(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_ForeArm_R;                               // 0x0F5C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_UpperBody_Front;                         // 0x0F60(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Thigh_R;                                 // 0x0F64(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Shoulders_R;                             // 0x0F68(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_ForeArm_L;                               // 0x0F6C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Helmet;                                  // 0x0F70(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Pelvis;                                  // 0x0F74(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               IFFShield_Light;                                   // 0x0F78(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               IFFShield_Activate;                                // 0x0F7C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        ShieldAudioComponent;                              // 0x0F80(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IFFShield_Shin_L;                                  // 0x0F84(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         TakeDamageTimeline_LineBrightness_E993138E4A26ED909055A89FDA7BCA47; // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TakeDamageTimeline_DamageFlash_E993138E4A26ED909055A89FDA7BCA47; // 0x0F8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TakeDamageTimeline__Direction_E993138E4A26ED909055A89FDA7BCA47; // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F91[0x3];                                      // 0x0F91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TakeDamageTimeline;                                // 0x0F94(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Activate;                                        // 0x0F98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 ShieldPlayerMesh;                                  // 0x0F9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_IFF_ShieldFlicker;                             // 0x0FA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   DamageFlash;                                       // 0x0FA4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   LineBrightness;                                    // 0x0FAC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_TIABExplosion;                                   // 0x0FB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_TIAB;                                        // 0x0FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Kinetic_Overload;                            // 0x0FBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Shield_Start;                                // 0x0FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Shield_Stop;                                 // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Shield_Impact_0;                             // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Finalized_IFF_BackPack_Offset;                     // 0x0FCC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                IFF_Local_Offset_Without_Backpack;                 // 0x0FD8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                IFF_Local_Offset_With_Back_Pack;                   // 0x0FE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	UMulticastDelegateProperty_                   PlayArmAnim;                                       // 0x0FF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_PlayerPawn_Constructor(int32 EntryPoint);
	void PlayArm();
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCharacterPartsReinitialized();
	void testIFF();
	void ReceiveBeginPlay();
	void GameplayCue_Constructor_KineticOverload_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Constructor_ToInfinityAndBeyond_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Constructor_PlasmaPulse_IFFCoding(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void TakeDamageTimeline__UpdateFunc();
	void TakeDamageTimeline__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Constructor_C">();
	}
	static class APlayerPawn_Constructor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Constructor_C>();
	}
};
static_assert(alignof(APlayerPawn_Constructor_C) == 0x000010, "Wrong alignment on APlayerPawn_Constructor_C");
static_assert(sizeof(APlayerPawn_Constructor_C) == 0x001000, "Wrong size on APlayerPawn_Constructor_C");
static_assert(offsetof(APlayerPawn_Constructor_C, UberGraphFrame_PlayerPawn_Constructor_C) == 0x000F40, "Member 'APlayerPawn_Constructor_C::UberGraphFrame_PlayerPawn_Constructor_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, BullRushCollision) == 0x000F44, "Member 'APlayerPawn_Constructor_C::BullRushCollision' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, BullRushStopCollision) == 0x000F48, "Member 'APlayerPawn_Constructor_C::BullRushStopCollision' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_UpperBody_Back) == 0x000F4C, "Member 'APlayerPawn_Constructor_C::IFFShield_UpperBody_Back' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFSHield_Thigh_L) == 0x000F50, "Member 'APlayerPawn_Constructor_C::IFFSHield_Thigh_L' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Shoulders_L) == 0x000F54, "Member 'APlayerPawn_Constructor_C::IFFShield_Shoulders_L' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Shin_R) == 0x000F58, "Member 'APlayerPawn_Constructor_C::IFFShield_Shin_R' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_ForeArm_R) == 0x000F5C, "Member 'APlayerPawn_Constructor_C::IFFShield_ForeArm_R' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_UpperBody_Front) == 0x000F60, "Member 'APlayerPawn_Constructor_C::IFFShield_UpperBody_Front' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Thigh_R) == 0x000F64, "Member 'APlayerPawn_Constructor_C::IFFShield_Thigh_R' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Shoulders_R) == 0x000F68, "Member 'APlayerPawn_Constructor_C::IFFShield_Shoulders_R' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_ForeArm_L) == 0x000F6C, "Member 'APlayerPawn_Constructor_C::IFFShield_ForeArm_L' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Helmet) == 0x000F70, "Member 'APlayerPawn_Constructor_C::IFFShield_Helmet' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Pelvis) == 0x000F74, "Member 'APlayerPawn_Constructor_C::IFFShield_Pelvis' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Light) == 0x000F78, "Member 'APlayerPawn_Constructor_C::IFFShield_Light' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Activate) == 0x000F7C, "Member 'APlayerPawn_Constructor_C::IFFShield_Activate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, ShieldAudioComponent) == 0x000F80, "Member 'APlayerPawn_Constructor_C::ShieldAudioComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFFShield_Shin_L) == 0x000F84, "Member 'APlayerPawn_Constructor_C::IFFShield_Shin_L' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, TakeDamageTimeline_LineBrightness_E993138E4A26ED909055A89FDA7BCA47) == 0x000F88, "Member 'APlayerPawn_Constructor_C::TakeDamageTimeline_LineBrightness_E993138E4A26ED909055A89FDA7BCA47' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, TakeDamageTimeline_DamageFlash_E993138E4A26ED909055A89FDA7BCA47) == 0x000F8C, "Member 'APlayerPawn_Constructor_C::TakeDamageTimeline_DamageFlash_E993138E4A26ED909055A89FDA7BCA47' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, TakeDamageTimeline__Direction_E993138E4A26ED909055A89FDA7BCA47) == 0x000F90, "Member 'APlayerPawn_Constructor_C::TakeDamageTimeline__Direction_E993138E4A26ED909055A89FDA7BCA47' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, TakeDamageTimeline) == 0x000F94, "Member 'APlayerPawn_Constructor_C::TakeDamageTimeline' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, P_Activate) == 0x000F98, "Member 'APlayerPawn_Constructor_C::P_Activate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, ShieldPlayerMesh) == 0x000F9C, "Member 'APlayerPawn_Constructor_C::ShieldPlayerMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, MID_IFF_ShieldFlicker) == 0x000FA0, "Member 'APlayerPawn_Constructor_C::MID_IFF_ShieldFlicker' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, DamageFlash) == 0x000FA4, "Member 'APlayerPawn_Constructor_C::DamageFlash' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, LineBrightness) == 0x000FAC, "Member 'APlayerPawn_Constructor_C::LineBrightness' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, P_TIABExplosion) == 0x000FB4, "Member 'APlayerPawn_Constructor_C::P_TIABExplosion' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, Sound_TIAB) == 0x000FB8, "Member 'APlayerPawn_Constructor_C::Sound_TIAB' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, Sound_Kinetic_Overload) == 0x000FBC, "Member 'APlayerPawn_Constructor_C::Sound_Kinetic_Overload' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, Sound_Shield_Start) == 0x000FC0, "Member 'APlayerPawn_Constructor_C::Sound_Shield_Start' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, Sound_Shield_Stop) == 0x000FC4, "Member 'APlayerPawn_Constructor_C::Sound_Shield_Stop' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, Sound_Shield_Impact_0) == 0x000FC8, "Member 'APlayerPawn_Constructor_C::Sound_Shield_Impact_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, Finalized_IFF_BackPack_Offset) == 0x000FCC, "Member 'APlayerPawn_Constructor_C::Finalized_IFF_BackPack_Offset' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFF_Local_Offset_Without_Backpack) == 0x000FD8, "Member 'APlayerPawn_Constructor_C::IFF_Local_Offset_Without_Backpack' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, IFF_Local_Offset_With_Back_Pack) == 0x000FE4, "Member 'APlayerPawn_Constructor_C::IFF_Local_Offset_With_Back_Pack' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Constructor_C, PlayArmAnim) == 0x000FF0, "Member 'APlayerPawn_Constructor_C::PlayArmAnim' has a wrong offset!");

}

#pragma pack(pop)
