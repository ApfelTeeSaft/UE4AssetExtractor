#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Ninja

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PlayerPawn_Generic_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Ninja.PlayerPawn_Ninja_C
// 0x01A0 (0x10E0 - 0x0F40)
class APlayerPawn_Ninja_C final : public APlayerPawn_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Ninja_C;                 // 0x0F40(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_TOTD_Trail_01;                                   // 0x0F44(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_Assassination;                                   // 0x0F48(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 ShadowStanceHeadComponent;                         // 0x0F4C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 ShadowStanceBodyComponent;                         // 0x0F50(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USphereComponent*                       DragonSlashImpact;                                 // 0x0F54(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        Stealth_Activate;                                  // 0x0F58(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         FadeRibbonTOTD_Fade_37E3AFF842E4A1D772F228B07AA1229C; // 0x0F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            FadeRibbonTOTD__Direction_37E3AFF842E4A1D772F228B07AA1229C; // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F61[0x3];                                      // 0x0F61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeRibbonTOTD;                                    // 0x0F64(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Animate_Ninja_ShadowStance_Dissolve_Inverse_Translucent_Shader_Opacity_1E481F634B18DA79A1B2FDBCB1091D62; // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Animate_Ninja_ShadowStance_Dissolve_NinjaDissolve_1E481F634B18DA79A1B2FDBCB1091D62; // 0x0F6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Animate_Ninja_ShadowStance_Dissolve__Direction_1E481F634B18DA79A1B2FDBCB1091D62; // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F71[0x3];                                      // 0x0F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Animate_Ninja_ShadowStance_Dissolve;               // 0x0F74(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        E_SmokeBombSmokeAttached;                          // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_EnableMantisLeap;                               // 0x0F7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     MI_ShadowStanceDissolve;                           // 0x0F80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TestMacros;                                        // 0x0F84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F85[0x3];                                      // 0x0F85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_Assassination_Running;                           // 0x0F88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   AssassinationSocket;                               // 0x0F8C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   AssassinationSpawnRate;                            // 0x0F94(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         StackCount;                                        // 0x0F9C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DimMakActive;                                      // 0x0FA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA1[0x3];                                      // 0x0FA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Stealth_Deactivate;                          // 0x0FA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Stealth_Activate;                            // 0x0FA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        MantisLeapEffect;                                  // 0x0FAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             MantisLeapCue;                                     // 0x0FB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   FootSocketL;                                       // 0x0FB4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   FootSocketR;                                       // 0x0FBC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_EnterShadowStance;                               // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Shadow_Stance_Active;                              // 0x0FC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC9[0x3];                                      // 0x0FC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_AssassinationActivate;                           // 0x0FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_AssassinationDeactivate;                         // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceDissolveArray;                     // 0x0FD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInterface*                     MI_Shadow_Stance_Translucent_Shader;               // 0x0FE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Body;             // 0x0FE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Head;             // 0x0FF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystemComponent*               ShadowStanceLoopingFX;                             // 0x0FFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ShadowStanceVisibility;                            // 0x1000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     MI_Shadow_Stance_Translucent_Shader_Enemy_View;    // 0x1004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Shadow_Stance_Material;                            // 0x1008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DragonSlashActive;                                 // 0x100C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WeaponsShadowStanceReversed;                       // 0x100D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_100E[0x2];                                     // 0x100E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_AssassinationStacks;                            // 0x1010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         LargeFXActivateLvl;                                // 0x1014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USplineMeshComponent*>           TOTD_MeshSplines;                                  // 0x1018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USplineComponent*                       TOTD_Spline;                                       // 0x1024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                TOTD_LastSplinePoint;                              // 0x1028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         TOTD_SplinePoints;                                 // 0x1034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DistanceToSpawnNewSplineAndParticles;              // 0x1038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     TOTD_MID_0;                                        // 0x103C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     TOTD_MID_1;                                        // 0x1040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstanceDynamic*>       TOTD_MID_Array_0;                                  // 0x1044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       TOTD_MID_Array_1;                                  // 0x1050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         TOTD_Lifetime;                                     // 0x105C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TOTD_Fadeout;                                      // 0x1060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TOTDActive_;                                       // 0x1064(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1065[0x3];                                     // 0x1065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TOTD_ParticleTrailVelocity;                        // 0x1068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        TOTD_RecalculatedPoints;                           // 0x106C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           TOTD_MID_0_Color_A_Friendy;                        // 0x1078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           TOTD_MID_0_Color_A_Enemy;                          // 0x1088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           TOTD_MID_1_Color_A_Friendy;                        // 0x1098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           TOTD_MID_1_Color_A_Enemy;                          // 0x10A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           TOTD_MID_1_Color_B_Friendy;                        // 0x10B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           TOTD_MID_1_Color_B_Enemy;                          // 0x10C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_MantisStrikeImpact;                              // 0x10D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             MantisStrikeImpactCue;                             // 0x10DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerPawn_Ninja(int32 EntryPoint);
	void GameplayCue_Ninja_MantisLeap_MantisStrikeFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void TOTDTimerExpired();
	void ReceiveTick(float DeltaSeconds);
	void TailOfDragonEnd();
	void TailOfDragonStart(float AoeCloudTimeToLive);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCharacterPartsReinitialized();
	void Toggle_Shadow_Stance();
	void ReceiveBeginPlay();
	void DragonSlashActivatedOrDeactivated(bool Active_);
	void UpdateWeaponShadowStance();
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void GameplayCue_Ninja_MantisLeap_ActivationFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Ninja_DimMak_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Ninja_Assassination_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Ninja_ShadowStance(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnLanded(const struct FHitResult& Hit);
	void GameplayCue_Ninja_SmokeBomb_ImpactFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void FadeRibbonTOTD__UpdateFunc();
	void FadeRibbonTOTD__FinishedFunc();
	void Animate_Ninja_ShadowStance_Dissolve__UpdateFunc();
	void Animate_Ninja_ShadowStance_Dissolve__FinishedFunc();
	void UserConstructionScript();
	void CreateAndAttachDuplicateEffectSkeletalMeshes(EFortCustomPartType BodyType, class USkeletalMeshComponent*& DuplicatedSkeletalMeshComponent, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority);
	void VFX_InitializeSpline_TOTD();
	void VFX_UpdateSplinePoints_TOTD();
	void VFX_AddSplinePointAndMesh_TOTD();
	void VFX_DestroySplines_TOTD();
	void VFX_CreateMIDs_TOTD();
	void VFX_RedistributePointsAlongSpline_TOTD();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Ninja_C">();
	}
	static class APlayerPawn_Ninja_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Ninja_C>();
	}
};
static_assert(alignof(APlayerPawn_Ninja_C) == 0x000010, "Wrong alignment on APlayerPawn_Ninja_C");
static_assert(sizeof(APlayerPawn_Ninja_C) == 0x0010E0, "Wrong size on APlayerPawn_Ninja_C");
static_assert(offsetof(APlayerPawn_Ninja_C, UberGraphFrame_PlayerPawn_Ninja_C) == 0x000F40, "Member 'APlayerPawn_Ninja_C::UberGraphFrame_PlayerPawn_Ninja_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_TOTD_Trail_01) == 0x000F44, "Member 'APlayerPawn_Ninja_C::P_TOTD_Trail_01' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_Assassination) == 0x000F48, "Member 'APlayerPawn_Ninja_C::P_Assassination' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceHeadComponent) == 0x000F4C, "Member 'APlayerPawn_Ninja_C::ShadowStanceHeadComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceBodyComponent) == 0x000F50, "Member 'APlayerPawn_Ninja_C::ShadowStanceBodyComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DragonSlashImpact) == 0x000F54, "Member 'APlayerPawn_Ninja_C::DragonSlashImpact' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Stealth_Activate) == 0x000F58, "Member 'APlayerPawn_Ninja_C::Stealth_Activate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, FadeRibbonTOTD_Fade_37E3AFF842E4A1D772F228B07AA1229C) == 0x000F5C, "Member 'APlayerPawn_Ninja_C::FadeRibbonTOTD_Fade_37E3AFF842E4A1D772F228B07AA1229C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, FadeRibbonTOTD__Direction_37E3AFF842E4A1D772F228B07AA1229C) == 0x000F60, "Member 'APlayerPawn_Ninja_C::FadeRibbonTOTD__Direction_37E3AFF842E4A1D772F228B07AA1229C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, FadeRibbonTOTD) == 0x000F64, "Member 'APlayerPawn_Ninja_C::FadeRibbonTOTD' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve_Inverse_Translucent_Shader_Opacity_1E481F634B18DA79A1B2FDBCB1091D62) == 0x000F68, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve_Inverse_Translucent_Shader_Opacity_1E481F634B18DA79A1B2FDBCB1091D62' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve_NinjaDissolve_1E481F634B18DA79A1B2FDBCB1091D62) == 0x000F6C, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve_NinjaDissolve_1E481F634B18DA79A1B2FDBCB1091D62' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve__Direction_1E481F634B18DA79A1B2FDBCB1091D62) == 0x000F70, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve__Direction_1E481F634B18DA79A1B2FDBCB1091D62' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve) == 0x000F74, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, E_SmokeBombSmokeAttached) == 0x000F78, "Member 'APlayerPawn_Ninja_C::E_SmokeBombSmokeAttached' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, GE_EnableMantisLeap) == 0x000F7C, "Member 'APlayerPawn_Ninja_C::GE_EnableMantisLeap' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MI_ShadowStanceDissolve) == 0x000F80, "Member 'APlayerPawn_Ninja_C::MI_ShadowStanceDissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TestMacros) == 0x000F84, "Member 'APlayerPawn_Ninja_C::TestMacros' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_Assassination_Running) == 0x000F88, "Member 'APlayerPawn_Ninja_C::P_Assassination_Running' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, AssassinationSocket) == 0x000F8C, "Member 'APlayerPawn_Ninja_C::AssassinationSocket' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, AssassinationSpawnRate) == 0x000F94, "Member 'APlayerPawn_Ninja_C::AssassinationSpawnRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, StackCount) == 0x000F9C, "Member 'APlayerPawn_Ninja_C::StackCount' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DimMakActive) == 0x000FA0, "Member 'APlayerPawn_Ninja_C::DimMakActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Sound_Stealth_Deactivate) == 0x000FA4, "Member 'APlayerPawn_Ninja_C::Sound_Stealth_Deactivate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Sound_Stealth_Activate) == 0x000FA8, "Member 'APlayerPawn_Ninja_C::Sound_Stealth_Activate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MantisLeapEffect) == 0x000FAC, "Member 'APlayerPawn_Ninja_C::MantisLeapEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MantisLeapCue) == 0x000FB0, "Member 'APlayerPawn_Ninja_C::MantisLeapCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, FootSocketL) == 0x000FB4, "Member 'APlayerPawn_Ninja_C::FootSocketL' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, FootSocketR) == 0x000FBC, "Member 'APlayerPawn_Ninja_C::FootSocketR' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_EnterShadowStance) == 0x000FC4, "Member 'APlayerPawn_Ninja_C::P_EnterShadowStance' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Shadow_Stance_Active) == 0x000FC8, "Member 'APlayerPawn_Ninja_C::Shadow_Stance_Active' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_AssassinationActivate) == 0x000FCC, "Member 'APlayerPawn_Ninja_C::P_AssassinationActivate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_AssassinationDeactivate) == 0x000FD0, "Member 'APlayerPawn_Ninja_C::P_AssassinationDeactivate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceDissolveArray) == 0x000FD4, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceDissolveArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MI_Shadow_Stance_Translucent_Shader) == 0x000FE0, "Member 'APlayerPawn_Ninja_C::MI_Shadow_Stance_Translucent_Shader' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Body) == 0x000FE4, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Head) == 0x000FF0, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Head' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceLoopingFX) == 0x000FFC, "Member 'APlayerPawn_Ninja_C::ShadowStanceLoopingFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceVisibility) == 0x001000, "Member 'APlayerPawn_Ninja_C::ShadowStanceVisibility' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MI_Shadow_Stance_Translucent_Shader_Enemy_View) == 0x001004, "Member 'APlayerPawn_Ninja_C::MI_Shadow_Stance_Translucent_Shader_Enemy_View' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Shadow_Stance_Material) == 0x001008, "Member 'APlayerPawn_Ninja_C::Shadow_Stance_Material' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DragonSlashActive) == 0x00100C, "Member 'APlayerPawn_Ninja_C::DragonSlashActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, WeaponsShadowStanceReversed) == 0x00100D, "Member 'APlayerPawn_Ninja_C::WeaponsShadowStanceReversed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, GE_AssassinationStacks) == 0x001010, "Member 'APlayerPawn_Ninja_C::GE_AssassinationStacks' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, LargeFXActivateLvl) == 0x001014, "Member 'APlayerPawn_Ninja_C::LargeFXActivateLvl' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MeshSplines) == 0x001018, "Member 'APlayerPawn_Ninja_C::TOTD_MeshSplines' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_Spline) == 0x001024, "Member 'APlayerPawn_Ninja_C::TOTD_Spline' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_LastSplinePoint) == 0x001028, "Member 'APlayerPawn_Ninja_C::TOTD_LastSplinePoint' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_SplinePoints) == 0x001034, "Member 'APlayerPawn_Ninja_C::TOTD_SplinePoints' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DistanceToSpawnNewSplineAndParticles) == 0x001038, "Member 'APlayerPawn_Ninja_C::DistanceToSpawnNewSplineAndParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_0) == 0x00103C, "Member 'APlayerPawn_Ninja_C::TOTD_MID_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_1) == 0x001040, "Member 'APlayerPawn_Ninja_C::TOTD_MID_1' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_Array_0) == 0x001044, "Member 'APlayerPawn_Ninja_C::TOTD_MID_Array_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_Array_1) == 0x001050, "Member 'APlayerPawn_Ninja_C::TOTD_MID_Array_1' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_Lifetime) == 0x00105C, "Member 'APlayerPawn_Ninja_C::TOTD_Lifetime' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_Fadeout) == 0x001060, "Member 'APlayerPawn_Ninja_C::TOTD_Fadeout' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTDActive_) == 0x001064, "Member 'APlayerPawn_Ninja_C::TOTDActive_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_ParticleTrailVelocity) == 0x001068, "Member 'APlayerPawn_Ninja_C::TOTD_ParticleTrailVelocity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_RecalculatedPoints) == 0x00106C, "Member 'APlayerPawn_Ninja_C::TOTD_RecalculatedPoints' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_0_Color_A_Friendy) == 0x001078, "Member 'APlayerPawn_Ninja_C::TOTD_MID_0_Color_A_Friendy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_0_Color_A_Enemy) == 0x001088, "Member 'APlayerPawn_Ninja_C::TOTD_MID_0_Color_A_Enemy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_1_Color_A_Friendy) == 0x001098, "Member 'APlayerPawn_Ninja_C::TOTD_MID_1_Color_A_Friendy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_1_Color_A_Enemy) == 0x0010A8, "Member 'APlayerPawn_Ninja_C::TOTD_MID_1_Color_A_Enemy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_1_Color_B_Friendy) == 0x0010B8, "Member 'APlayerPawn_Ninja_C::TOTD_MID_1_Color_B_Friendy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_MID_1_Color_B_Enemy) == 0x0010C8, "Member 'APlayerPawn_Ninja_C::TOTD_MID_1_Color_B_Enemy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, P_MantisStrikeImpact) == 0x0010D8, "Member 'APlayerPawn_Ninja_C::P_MantisStrikeImpact' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MantisStrikeImpactCue) == 0x0010DC, "Member 'APlayerPawn_Ninja_C::MantisStrikeImpactCue' has a wrong offset!");

}

#pragma pack(pop)
