#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Outlander

#include "Basic.hpp"

#include "PlayerPawn_Generic_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "E_Outlander_FragmentTypes_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Outlander.PlayerPawn_Outlander_C
// 0x0270 (0x11B0 - 0x0F40)
class APlayerPawn_Outlander_C final : public APlayerPawn_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Outlander_C;             // 0x0F40(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          AntiMaterialHitBox;                                // 0x0F44(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USphereComponent*                       KeenEyesRadius;                                    // 0x0F48(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_Outlander_PhaseShift_Impact_01;                  // 0x0F4C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 Effect_HeadSkeletalMesh;                           // 0x0F50(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 Effect_BodySkeletalMesh;                           // 0x0F54(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         PhaseShiftHitSweep_Sweep_81A0178F416D1106B841D9A9B7E8C737; // 0x0F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            PhaseShiftHitSweep__Direction_81A0178F416D1106B841D9A9B7E8C737; // 0x0F5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5D[0x3];                                      // 0x0F5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PhaseShiftHitSweep;                                // 0x0F60(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Phase_Shift_Activation_Timeline_Sweep_6D72A2BD427987D65B765788F442228C; // 0x0F64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Phase_Shift_Activation_Timeline_Opacity_6D72A2BD427987D65B765788F442228C; // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Phase_Shift_Activation_Timeline__Direction_6D72A2BD427987D65B765788F442228C; // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6D[0x3];                                      // 0x0F6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Phase_Shift_Activation_Timeline;                   // 0x0F70(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_FragmentActivation;                              // 0x0F74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Core_Index_0;                                      // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Core_Index_1;                                      // 0x0F7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Core_Index_2;                                      // 0x0F80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Diamond_Index3;                                    // 0x0F84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Diamond_Index4;                                    // 0x0F88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Diamond_Index5;                                    // 0x0F8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Sparkles_Index8;                                   // 0x0F90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Smoke_Index7;                                      // 0x0F94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Diamond_Index6;                                    // 0x0F98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Sparkles_Index9;                                   // 0x0F9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           OffensiveColor1;                                   // 0x0FA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           OffensiveColor2;                                   // 0x0FB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           DefensiveColor1;                                   // 0x0FC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           DefensiveColor2;                                   // 0x0FD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           SpecialtyColor1;                                   // 0x0FE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           SpecialtyColor2;                                   // 0x0FF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  TC_SpecialityBuff;                                 // 0x1000(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_DefensiveBuff;                                  // 0x1018(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_OffensiveBuff;                                  // 0x1030(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_Outlander_FragmentTypes                     FragType;                                          // 0x1048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1049[0x3];                                     // 0x1049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_FragmentOffense;                                 // 0x104C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_FragmentDefense;                                 // 0x1050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_FragmentSpeciality;                              // 0x1054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_InTheZone_Activate;                              // 0x1058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnPlayerBuiltFloor;                                // 0x105C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_105D[0x3];                                     // 0x105D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     EventData;                                         // 0x1060(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventNeedRoadsActivate;                            // 0x10B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventNeedRoadsDeactivate;                          // 0x10C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_WhereWeregoingWeNeedRoads;                      // 0x10C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        P_Fragment;                                        // 0x10E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Specialty;                                       // 0x10E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Defensive;                                       // 0x10E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Offensive;                                       // 0x10EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFortFeedbackHandle                    Feedback_ShardGet;                                 // 0x10F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortFeedbackHandle                    Feedback_OffensiveShard;                           // 0x1100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortFeedbackHandle                    Feedback_DefensiveShard;                           // 0x1110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortFeedbackHandle                    Feedback_SpecialtyShard;                           // 0x1120(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             Sound_Frg_Offensive_Start;                         // 0x1130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Frg_Defensive_Start;                         // 0x1134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Frg_Resource_Start;                          // 0x1138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Frg_Stop;                                    // 0x113C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Frg_Collect;                                 // 0x1140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_InTheZone_Running;                               // 0x1144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_InTheZone_Hit;                                   // 0x1148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   Spawn_Color;                                       // 0x114C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstanceDynamic*>       Head_Effect_Mesh_Materials;                        // 0x1154(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Body_Effect_Mesh_Materials;                        // 0x1160(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInterface*                     Phase_Shift_Material_;                             // 0x116C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        PhaseShiftActivateParticles;                       // 0x1170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPhaseShiftActive_;                                // 0x1174(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1175[0x3];                                     // 0x1175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        KnockKnockFX;                                      // 0x1178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_Handtrail;                                       // 0x117C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_AMCDustKickup;                                   // 0x1180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_AMCShockwave;                                    // 0x1184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               P_Handtrail_Active;                                // 0x1188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        P_ArmThruster;                                     // 0x118C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               P_Arm_Thuster_Active;                              // 0x1190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             ChargeUpSoundCue;                                  // 0x1194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        ChargeUpAudioComp;                                 // 0x1198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 ChargeUpCameraShake;                               // 0x119C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundCue*                              AMCImpactEnemySound;                               // 0x11A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundCue*                              AMCImpactBuildingSound;                            // 0x11A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 AMCImpactCameraShake;                              // 0x11A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerPawn_Outlander(int32 EntryPoint);
	void GameplayCue_Abilities_Activation_Outlander_AntiMaterialChargeImpact(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Outlander_AntiMaterialChargeChargeUp(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Outlander_AntiMaterialChargeThruster(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Outlander_AntiMaterialCharge(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Outlander_KnockKnock(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void EventOnDamagePlayFX();
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnCharacterPartsReinitialized();
	void RefreshIcons();
	void GameplayCue_Outlander_PhaseShift_AppliedFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void WithinReachOfTreasure(const struct FLinearColor& VSpawnColor, bool Activate);
	void GameplayCue_Explorer_Fragment_Specialty_PickupFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Explorer_Fragment_Defense_PickupFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Explorer_Fragment_Offense_PickupFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ReceivePossessed(class AController* NewController);
	void OnBaseChanged(class AActor* NewBase);
	void GameplayCue_Outlander_InTheZone_FX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Explorer_Fragment(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void PhaseShiftHitSweep__UpdateFunc();
	void PhaseShiftHitSweep__FinishedFunc();
	void Phase_Shift_Activation_Timeline__UpdateFunc();
	void Phase_Shift_Activation_Timeline__FinishedFunc();
	void UserConstructionScript();
	void OnRep_OnPlayerBuiltFloor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Outlander_C">();
	}
	static class APlayerPawn_Outlander_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Outlander_C>();
	}
};
static_assert(alignof(APlayerPawn_Outlander_C) == 0x000010, "Wrong alignment on APlayerPawn_Outlander_C");
static_assert(sizeof(APlayerPawn_Outlander_C) == 0x0011B0, "Wrong size on APlayerPawn_Outlander_C");
static_assert(offsetof(APlayerPawn_Outlander_C, UberGraphFrame_PlayerPawn_Outlander_C) == 0x000F40, "Member 'APlayerPawn_Outlander_C::UberGraphFrame_PlayerPawn_Outlander_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, AntiMaterialHitBox) == 0x000F44, "Member 'APlayerPawn_Outlander_C::AntiMaterialHitBox' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, KeenEyesRadius) == 0x000F48, "Member 'APlayerPawn_Outlander_C::KeenEyesRadius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Outlander_PhaseShift_Impact_01) == 0x000F4C, "Member 'APlayerPawn_Outlander_C::P_Outlander_PhaseShift_Impact_01' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Effect_HeadSkeletalMesh) == 0x000F50, "Member 'APlayerPawn_Outlander_C::Effect_HeadSkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Effect_BodySkeletalMesh) == 0x000F54, "Member 'APlayerPawn_Outlander_C::Effect_BodySkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, PhaseShiftHitSweep_Sweep_81A0178F416D1106B841D9A9B7E8C737) == 0x000F58, "Member 'APlayerPawn_Outlander_C::PhaseShiftHitSweep_Sweep_81A0178F416D1106B841D9A9B7E8C737' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, PhaseShiftHitSweep__Direction_81A0178F416D1106B841D9A9B7E8C737) == 0x000F5C, "Member 'APlayerPawn_Outlander_C::PhaseShiftHitSweep__Direction_81A0178F416D1106B841D9A9B7E8C737' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, PhaseShiftHitSweep) == 0x000F60, "Member 'APlayerPawn_Outlander_C::PhaseShiftHitSweep' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Phase_Shift_Activation_Timeline_Sweep_6D72A2BD427987D65B765788F442228C) == 0x000F64, "Member 'APlayerPawn_Outlander_C::Phase_Shift_Activation_Timeline_Sweep_6D72A2BD427987D65B765788F442228C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Phase_Shift_Activation_Timeline_Opacity_6D72A2BD427987D65B765788F442228C) == 0x000F68, "Member 'APlayerPawn_Outlander_C::Phase_Shift_Activation_Timeline_Opacity_6D72A2BD427987D65B765788F442228C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Phase_Shift_Activation_Timeline__Direction_6D72A2BD427987D65B765788F442228C) == 0x000F6C, "Member 'APlayerPawn_Outlander_C::Phase_Shift_Activation_Timeline__Direction_6D72A2BD427987D65B765788F442228C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Phase_Shift_Activation_Timeline) == 0x000F70, "Member 'APlayerPawn_Outlander_C::Phase_Shift_Activation_Timeline' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_FragmentActivation) == 0x000F74, "Member 'APlayerPawn_Outlander_C::P_FragmentActivation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Core_Index_0) == 0x000F78, "Member 'APlayerPawn_Outlander_C::Core_Index_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Core_Index_1) == 0x000F7C, "Member 'APlayerPawn_Outlander_C::Core_Index_1' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Core_Index_2) == 0x000F80, "Member 'APlayerPawn_Outlander_C::Core_Index_2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Diamond_Index3) == 0x000F84, "Member 'APlayerPawn_Outlander_C::Diamond_Index3' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Diamond_Index4) == 0x000F88, "Member 'APlayerPawn_Outlander_C::Diamond_Index4' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Diamond_Index5) == 0x000F8C, "Member 'APlayerPawn_Outlander_C::Diamond_Index5' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sparkles_Index8) == 0x000F90, "Member 'APlayerPawn_Outlander_C::Sparkles_Index8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Smoke_Index7) == 0x000F94, "Member 'APlayerPawn_Outlander_C::Smoke_Index7' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Diamond_Index6) == 0x000F98, "Member 'APlayerPawn_Outlander_C::Diamond_Index6' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sparkles_Index9) == 0x000F9C, "Member 'APlayerPawn_Outlander_C::Sparkles_Index9' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, OffensiveColor1) == 0x000FA0, "Member 'APlayerPawn_Outlander_C::OffensiveColor1' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, OffensiveColor2) == 0x000FB0, "Member 'APlayerPawn_Outlander_C::OffensiveColor2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, DefensiveColor1) == 0x000FC0, "Member 'APlayerPawn_Outlander_C::DefensiveColor1' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, DefensiveColor2) == 0x000FD0, "Member 'APlayerPawn_Outlander_C::DefensiveColor2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, SpecialtyColor1) == 0x000FE0, "Member 'APlayerPawn_Outlander_C::SpecialtyColor1' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, SpecialtyColor2) == 0x000FF0, "Member 'APlayerPawn_Outlander_C::SpecialtyColor2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, TC_SpecialityBuff) == 0x001000, "Member 'APlayerPawn_Outlander_C::TC_SpecialityBuff' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, TC_DefensiveBuff) == 0x001018, "Member 'APlayerPawn_Outlander_C::TC_DefensiveBuff' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, TC_OffensiveBuff) == 0x001030, "Member 'APlayerPawn_Outlander_C::TC_OffensiveBuff' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, FragType) == 0x001048, "Member 'APlayerPawn_Outlander_C::FragType' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_FragmentOffense) == 0x00104C, "Member 'APlayerPawn_Outlander_C::P_FragmentOffense' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_FragmentDefense) == 0x001050, "Member 'APlayerPawn_Outlander_C::P_FragmentDefense' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_FragmentSpeciality) == 0x001054, "Member 'APlayerPawn_Outlander_C::P_FragmentSpeciality' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_InTheZone_Activate) == 0x001058, "Member 'APlayerPawn_Outlander_C::P_InTheZone_Activate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, OnPlayerBuiltFloor) == 0x00105C, "Member 'APlayerPawn_Outlander_C::OnPlayerBuiltFloor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, EventData) == 0x001060, "Member 'APlayerPawn_Outlander_C::EventData' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, EventNeedRoadsActivate) == 0x0010B8, "Member 'APlayerPawn_Outlander_C::EventNeedRoadsActivate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, EventNeedRoadsDeactivate) == 0x0010C0, "Member 'APlayerPawn_Outlander_C::EventNeedRoadsDeactivate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, TC_WhereWeregoingWeNeedRoads) == 0x0010C8, "Member 'APlayerPawn_Outlander_C::TC_WhereWeregoingWeNeedRoads' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Fragment) == 0x0010E0, "Member 'APlayerPawn_Outlander_C::P_Fragment' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Specialty) == 0x0010E4, "Member 'APlayerPawn_Outlander_C::P_Specialty' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Defensive) == 0x0010E8, "Member 'APlayerPawn_Outlander_C::P_Defensive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Offensive) == 0x0010EC, "Member 'APlayerPawn_Outlander_C::P_Offensive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Feedback_ShardGet) == 0x0010F0, "Member 'APlayerPawn_Outlander_C::Feedback_ShardGet' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Feedback_OffensiveShard) == 0x001100, "Member 'APlayerPawn_Outlander_C::Feedback_OffensiveShard' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Feedback_DefensiveShard) == 0x001110, "Member 'APlayerPawn_Outlander_C::Feedback_DefensiveShard' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Feedback_SpecialtyShard) == 0x001120, "Member 'APlayerPawn_Outlander_C::Feedback_SpecialtyShard' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sound_Frg_Offensive_Start) == 0x001130, "Member 'APlayerPawn_Outlander_C::Sound_Frg_Offensive_Start' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sound_Frg_Defensive_Start) == 0x001134, "Member 'APlayerPawn_Outlander_C::Sound_Frg_Defensive_Start' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sound_Frg_Resource_Start) == 0x001138, "Member 'APlayerPawn_Outlander_C::Sound_Frg_Resource_Start' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sound_Frg_Stop) == 0x00113C, "Member 'APlayerPawn_Outlander_C::Sound_Frg_Stop' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Sound_Frg_Collect) == 0x001140, "Member 'APlayerPawn_Outlander_C::Sound_Frg_Collect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_InTheZone_Running) == 0x001144, "Member 'APlayerPawn_Outlander_C::P_InTheZone_Running' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_InTheZone_Hit) == 0x001148, "Member 'APlayerPawn_Outlander_C::P_InTheZone_Hit' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Spawn_Color) == 0x00114C, "Member 'APlayerPawn_Outlander_C::Spawn_Color' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Head_Effect_Mesh_Materials) == 0x001154, "Member 'APlayerPawn_Outlander_C::Head_Effect_Mesh_Materials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Body_Effect_Mesh_Materials) == 0x001160, "Member 'APlayerPawn_Outlander_C::Body_Effect_Mesh_Materials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, Phase_Shift_Material_) == 0x00116C, "Member 'APlayerPawn_Outlander_C::Phase_Shift_Material_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, PhaseShiftActivateParticles) == 0x001170, "Member 'APlayerPawn_Outlander_C::PhaseShiftActivateParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, bPhaseShiftActive_) == 0x001174, "Member 'APlayerPawn_Outlander_C::bPhaseShiftActive_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, KnockKnockFX) == 0x001178, "Member 'APlayerPawn_Outlander_C::KnockKnockFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Handtrail) == 0x00117C, "Member 'APlayerPawn_Outlander_C::P_Handtrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_AMCDustKickup) == 0x001180, "Member 'APlayerPawn_Outlander_C::P_AMCDustKickup' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_AMCShockwave) == 0x001184, "Member 'APlayerPawn_Outlander_C::P_AMCShockwave' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Handtrail_Active) == 0x001188, "Member 'APlayerPawn_Outlander_C::P_Handtrail_Active' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_ArmThruster) == 0x00118C, "Member 'APlayerPawn_Outlander_C::P_ArmThruster' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, P_Arm_Thuster_Active) == 0x001190, "Member 'APlayerPawn_Outlander_C::P_Arm_Thuster_Active' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, ChargeUpSoundCue) == 0x001194, "Member 'APlayerPawn_Outlander_C::ChargeUpSoundCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, ChargeUpAudioComp) == 0x001198, "Member 'APlayerPawn_Outlander_C::ChargeUpAudioComp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, ChargeUpCameraShake) == 0x00119C, "Member 'APlayerPawn_Outlander_C::ChargeUpCameraShake' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, AMCImpactEnemySound) == 0x0011A0, "Member 'APlayerPawn_Outlander_C::AMCImpactEnemySound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, AMCImpactBuildingSound) == 0x0011A4, "Member 'APlayerPawn_Outlander_C::AMCImpactBuildingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Outlander_C, AMCImpactCameraShake) == 0x0011A8, "Member 'APlayerPawn_Outlander_C::AMCImpactCameraShake' has a wrong offset!");

}

#pragma pack(pop)
