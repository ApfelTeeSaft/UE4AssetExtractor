#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PortalRpc

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// ScriptStruct PortalRpc.PortalRpcServer
// 0x000C (0x000C - 0x0000)
struct FPortalRpcServer final
{
public:
	class FString                                 ServerAddress;                                     // 0x0000(0x000C)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPortalRpcServer) == 0x000004, "Wrong alignment on FPortalRpcServer");
static_assert(sizeof(FPortalRpcServer) == 0x00000C, "Wrong size on FPortalRpcServer");
static_assert(offsetof(FPortalRpcServer, ServerAddress) == 0x000000, "Member 'FPortalRpcServer::ServerAddress' has a wrong offset!");

// ScriptStruct PortalRpc.PortalRpcLocateServer
// 0x0028 (0x0028 - 0x0000)
struct FPortalRpcLocateServer final
{
public:
	struct FGuid                                  ProductId;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ProductVersion;                                    // 0x0010(0x000C)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HostMacAddress;                                    // 0x001C(0x000C)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPortalRpcLocateServer) == 0x000004, "Wrong alignment on FPortalRpcLocateServer");
static_assert(sizeof(FPortalRpcLocateServer) == 0x000028, "Wrong size on FPortalRpcLocateServer");
static_assert(offsetof(FPortalRpcLocateServer, ProductId) == 0x000000, "Member 'FPortalRpcLocateServer::ProductId' has a wrong offset!");
static_assert(offsetof(FPortalRpcLocateServer, ProductVersion) == 0x000010, "Member 'FPortalRpcLocateServer::ProductVersion' has a wrong offset!");
static_assert(offsetof(FPortalRpcLocateServer, HostMacAddress) == 0x00001C, "Member 'FPortalRpcLocateServer::HostMacAddress' has a wrong offset!");

}

#pragma pack(pop)
