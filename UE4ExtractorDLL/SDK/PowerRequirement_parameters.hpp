#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PowerRequirement

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function PowerRequirement.PowerRequirement_C.ExecuteUbergraph_PowerRequirement
// 0x0020 (0x0020 - 0x0000)
struct PowerRequirement_C_ExecuteUbergraph_PowerRequirement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_TeamPower;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_PersonalPower;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(int32 TeamPower, int32 PersonalPower)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement) == 0x000004, "Wrong alignment on PowerRequirement_C_ExecuteUbergraph_PowerRequirement");
static_assert(sizeof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement) == 0x000020, "Wrong size on PowerRequirement_C_ExecuteUbergraph_PowerRequirement");
static_assert(offsetof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement, EntryPoint) == 0x000000, "Member 'PowerRequirement_C_ExecuteUbergraph_PowerRequirement::EntryPoint' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement, K2Node_CustomEvent_TeamPower) == 0x000004, "Member 'PowerRequirement_C_ExecuteUbergraph_PowerRequirement::K2Node_CustomEvent_TeamPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement, K2Node_CustomEvent_PersonalPower) == 0x000008, "Member 'PowerRequirement_C_ExecuteUbergraph_PowerRequirement::K2Node_CustomEvent_PersonalPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PowerRequirement_C_ExecuteUbergraph_PowerRequirement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_ExecuteUbergraph_PowerRequirement, CallFunc_GetContext_ReturnValue) == 0x00001C, "Member 'PowerRequirement_C_ExecuteUbergraph_PowerRequirement::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function PowerRequirement.PowerRequirement_C.HandleTeamPowerChanged
// 0x0008 (0x0008 - 0x0000)
struct PowerRequirement_C_HandleTeamPowerChanged final
{
public:
	int32                                         TeamPower;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         PersonalPower;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PowerRequirement_C_HandleTeamPowerChanged) == 0x000004, "Wrong alignment on PowerRequirement_C_HandleTeamPowerChanged");
static_assert(sizeof(PowerRequirement_C_HandleTeamPowerChanged) == 0x000008, "Wrong size on PowerRequirement_C_HandleTeamPowerChanged");
static_assert(offsetof(PowerRequirement_C_HandleTeamPowerChanged, TeamPower) == 0x000000, "Member 'PowerRequirement_C_HandleTeamPowerChanged::TeamPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_HandleTeamPowerChanged, PersonalPower) == 0x000004, "Member 'PowerRequirement_C_HandleTeamPowerChanged::PersonalPower' has a wrong offset!");

// Function PowerRequirement.PowerRequirement_C.SetRequirements
// 0x0014 (0x0014 - 0x0000)
struct PowerRequirement_C_SetRequirements final
{
public:
	int32                                         RequiredPower_0;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RecommendedPower_0;                                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamPower_TeamPower;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamPower_PersonalPower;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PowerRequirement_C_SetRequirements) == 0x000004, "Wrong alignment on PowerRequirement_C_SetRequirements");
static_assert(sizeof(PowerRequirement_C_SetRequirements) == 0x000014, "Wrong size on PowerRequirement_C_SetRequirements");
static_assert(offsetof(PowerRequirement_C_SetRequirements, RequiredPower_0) == 0x000000, "Member 'PowerRequirement_C_SetRequirements::RequiredPower_0' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetRequirements, RecommendedPower_0) == 0x000004, "Member 'PowerRequirement_C_SetRequirements::RecommendedPower_0' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetRequirements, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'PowerRequirement_C_SetRequirements::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetRequirements, CallFunc_GetTeamPower_TeamPower) == 0x00000C, "Member 'PowerRequirement_C_SetRequirements::CallFunc_GetTeamPower_TeamPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetRequirements, CallFunc_GetTeamPower_PersonalPower) == 0x000010, "Member 'PowerRequirement_C_SetRequirements::CallFunc_GetTeamPower_PersonalPower' has a wrong offset!");

// Function PowerRequirement.PowerRequirement_C.Update
// 0x0008 (0x0008 - 0x0000)
struct PowerRequirement_C_Update final
{
public:
	int32                                         TeamPower;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PowerRequirement_C_Update) == 0x000004, "Wrong alignment on PowerRequirement_C_Update");
static_assert(sizeof(PowerRequirement_C_Update) == 0x000008, "Wrong size on PowerRequirement_C_Update");
static_assert(offsetof(PowerRequirement_C_Update, TeamPower) == 0x000000, "Member 'PowerRequirement_C_Update::TeamPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'PowerRequirement_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_Update, CallFunc_Greater_IntInt_ReturnValue2) == 0x000005, "Member 'PowerRequirement_C_Update::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'PowerRequirement_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_Update, CallFunc_Greater_IntInt_ReturnValue3) == 0x000007, "Member 'PowerRequirement_C_Update::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");

// Function PowerRequirement.PowerRequirement_C.SetUIForRecommended
// 0x0084 (0x0084 - 0x0000)
struct PowerRequirement_C_SetUIForRecommended final
{
public:
	int32                                         PartyPower;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x001C)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor2;                     // 0x0030(0x001C)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor3;                     // 0x004C(0x001C)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor4;                     // 0x0068(0x001C)()
};
static_assert(alignof(PowerRequirement_C_SetUIForRecommended) == 0x000004, "Wrong alignment on PowerRequirement_C_SetUIForRecommended");
static_assert(sizeof(PowerRequirement_C_SetUIForRecommended) == 0x000084, "Wrong size on PowerRequirement_C_SetUIForRecommended");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, PartyPower) == 0x000000, "Member 'PowerRequirement_C_SetUIForRecommended::PartyPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'PowerRequirement_C_SetUIForRecommended::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000008, "Member 'PowerRequirement_C_SetUIForRecommended::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'PowerRequirement_C_SetUIForRecommended::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'PowerRequirement_C_SetUIForRecommended::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x000011, "Member 'PowerRequirement_C_SetUIForRecommended::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x000012, "Member 'PowerRequirement_C_SetUIForRecommended::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'PowerRequirement_C_SetUIForRecommended::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, K2Node_MakeStruct_SlateColor2) == 0x000030, "Member 'PowerRequirement_C_SetUIForRecommended::K2Node_MakeStruct_SlateColor2' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, K2Node_MakeStruct_SlateColor3) == 0x00004C, "Member 'PowerRequirement_C_SetUIForRecommended::K2Node_MakeStruct_SlateColor3' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRecommended, K2Node_MakeStruct_SlateColor4) == 0x000068, "Member 'PowerRequirement_C_SetUIForRecommended::K2Node_MakeStruct_SlateColor4' has a wrong offset!");

// Function PowerRequirement.PowerRequirement_C.SetUIForRequired
// 0x0040 (0x0040 - 0x0000)
struct PowerRequirement_C_SetUIForRequired final
{
public:
	int32                                         PartyPower;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x001C)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor2;                     // 0x0024(0x001C)()
};
static_assert(alignof(PowerRequirement_C_SetUIForRequired) == 0x000004, "Wrong alignment on PowerRequirement_C_SetUIForRequired");
static_assert(sizeof(PowerRequirement_C_SetUIForRequired) == 0x000040, "Wrong size on PowerRequirement_C_SetUIForRequired");
static_assert(offsetof(PowerRequirement_C_SetUIForRequired, PartyPower) == 0x000000, "Member 'PowerRequirement_C_SetUIForRequired::PartyPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRequired, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'PowerRequirement_C_SetUIForRequired::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRequired, CallFunc_Less_IntInt_ReturnValue) == 0x000005, "Member 'PowerRequirement_C_SetUIForRequired::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRequired, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'PowerRequirement_C_SetUIForRequired::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_SetUIForRequired, K2Node_MakeStruct_SlateColor2) == 0x000024, "Member 'PowerRequirement_C_SetUIForRequired::K2Node_MakeStruct_SlateColor2' has a wrong offset!");

// Function PowerRequirement.PowerRequirement_C.GenerateToolTipWidget
// 0x0024 (0x0024 - 0x0000)
struct PowerRequirement_C_GenerateToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamPower_TeamPower;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamPower_PersonalPower;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output2;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PowerRequirement_C_GenerateToolTipWidget) == 0x000004, "Wrong alignment on PowerRequirement_C_GenerateToolTipWidget");
static_assert(sizeof(PowerRequirement_C_GenerateToolTipWidget) == 0x000024, "Wrong size on PowerRequirement_C_GenerateToolTipWidget");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, ReturnValue) == 0x000000, "Member 'PowerRequirement_C_GenerateToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_Greater_IntInt_ReturnValue2) == 0x000005, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x00000C, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_GetTeamPower_TeamPower) == 0x000010, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_GetTeamPower_TeamPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_GetTeamPower_PersonalPower) == 0x000014, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_GetTeamPower_PersonalPower' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_Create_Basic_Tooltip_Output) == 0x000018, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_Greater_IntInt_ReturnValue3) == 0x00001C, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerRequirement_C_GenerateToolTipWidget, CallFunc_Create_Basic_Tooltip_Output2) == 0x000020, "Member 'PowerRequirement_C_GenerateToolTipWidget::CallFunc_Create_Basic_Tooltip_Output2' has a wrong offset!");

}

#pragma pack(pop)
