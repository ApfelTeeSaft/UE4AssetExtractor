#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectileHuskRanged

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass ProjectileHuskRanged.ProjectileHuskRanged_C
// 0x0010 (0x0428 - 0x0418)
class AProjectileHuskRanged_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Ranged_Projectile_Sound;                           // 0x041C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               ProjectileParticleSystem;                          // 0x0420(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class AActor*                                 GoalActor;                                         // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ProjectileHuskRanged(int32 EntryPoint);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void StopHoming();
	void ProjectileCheck();
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProjectileHuskRanged_C">();
	}
	static class AProjectileHuskRanged_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectileHuskRanged_C>();
	}
};
static_assert(alignof(AProjectileHuskRanged_C) == 0x000004, "Wrong alignment on AProjectileHuskRanged_C");
static_assert(sizeof(AProjectileHuskRanged_C) == 0x000428, "Wrong size on AProjectileHuskRanged_C");
static_assert(offsetof(AProjectileHuskRanged_C, UberGraphFrame) == 0x000418, "Member 'AProjectileHuskRanged_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectileHuskRanged_C, Ranged_Projectile_Sound) == 0x00041C, "Member 'AProjectileHuskRanged_C::Ranged_Projectile_Sound' has a wrong offset!");
static_assert(offsetof(AProjectileHuskRanged_C, ProjectileParticleSystem) == 0x000420, "Member 'AProjectileHuskRanged_C::ProjectileParticleSystem' has a wrong offset!");
static_assert(offsetof(AProjectileHuskRanged_C, GoalActor) == 0x000424, "Member 'AProjectileHuskRanged_C::GoalActor' has a wrong offset!");

}

#pragma pack(pop)
