#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_Explorer_OutlanderFragment_Llama

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass Prop_Explorer_OutlanderFragment_Llama.Prop_Explorer_OutlanderFragment_Llama_C
// 0x018C (0x0AD0 - 0x0944)
class AProp_Explorer_OutlanderFragment_Llama_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0944(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 LLama_SkeletalMesh;                                // 0x0948(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UProjectileMovementComponent*           MovementComponent;                                 // 0x094C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Timeline_0_LlamaScaleIn_CF0E7B9444C376CC817787B0D8C3D666; // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Timeline_0__Direction_CF0E7B9444C376CC817787B0D8C3D666; // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_955[0x3];                                      // 0x0955(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0958(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TotalDamage;                                       // 0x095C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxDamage;                                         // 0x0960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         WoodThreshold;                                     // 0x0964(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StoneThreshold;                                    // 0x0968(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MetalThreshold;                                    // 0x096C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RareThreshold;                                     // 0x0970(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         IntWoodSpawn;                                      // 0x0974(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         IntStoneSpawn;                                     // 0x0978(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         IntMetalSpawn;                                     // 0x097C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         IntRarespawn;                                      // 0x0980(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MinRandomVector;                                   // 0x0984(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxRandomVector;                                   // 0x0988(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UFortWorldItemDefinition*               CrystalType;                                       // 0x098C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Min_Percent;                                       // 0x0990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Max_Percent;                                       // 0x0994(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BlackPercent;                                      // 0x0998(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         GreenPercent;                                      // 0x099C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RedPercent;                                        // 0x09A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         YellowPercent;                                     // 0x09A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasDiamonds;                                       // 0x09A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A9[0x3];                                      // 0x09A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IntIntIngrediantSpawn;                             // 0x09AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         MaxStone;                                          // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UFortIngredientItemDefinition*          Item_Ingrediant;                                   // 0x09B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Cue_HitSound;                                      // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         MaxWood;                                           // 0x09BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DealtDamage;                                       // 0x09C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         SpawnedWood;                                       // 0x09C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentWood;                                       // 0x09C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DamageRemainder;                                   // 0x09CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentSpawned;                                    // 0x09D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SpawnThreshold;                                    // 0x09D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CarryOverDamage;                                   // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TestNewDamage;                                     // 0x09DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9DD[0x3];                                      // 0x09DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempDealtDamage;                                   // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         NumSpawnGroups;                                    // 0x09E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FinishSpawning;                                    // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E9[0x3];                                      // 0x09E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               Wood;                                              // 0x09EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UFortWorldItemDefinition*               Stone;                                             // 0x09F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewVar;                                            // 0x09F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F5[0x3];                                      // 0x09F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentStone;                                      // 0x09F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         MaxMetal;                                          // 0x09FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentMetal;                                      // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UFortWorldItemDefinition*               Metal;                                             // 0x0A04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         IngrediantSpawnThreshold;                          // 0x0A08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentIngrediant;                                 // 0x0A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         MaxIngrediant;                                     // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 GE_DiamondsHealthMod;                              // 0x0A14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFortFeedbackHandle                    FeedbackPain;                                      // 0x0A18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           Anim_Deploy;                                       // 0x0A28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             PinataPain;                                        // 0x0A2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             PinataSpawn;                                       // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             DeathCue;                                          // 0x0A34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayDeathSound;                                    // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39[0x3];                                      // 0x0A39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 HeadProjectile;                                    // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   ProjectileSpawnLocation;                           // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFortProjectileBase*                    ProjectileReturnValue;                             // 0x0A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ProjectileSpeedLow;                                // 0x0A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ProjectileSpeedHigh;                               // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        DeathConfetti_Effects;                             // 0x0A54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   DeathFX_SocketName;                                // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        HitConfetti_Effects;                               // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_Index_01;                                      // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_Index_02;                                      // 0x0A68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_Index_03;                                      // 0x0A6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_Index_00;                                      // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LlamaSkelMeshVisibility;                           // 0x0A74(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A75[0x3];                                      // 0x0A75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          LlamaDeath_FirstAnim;                              // 0x0A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Llama_BodyOpacityMask;                             // 0x0A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     OverrideStaticMeshMat;                             // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Llama_Lifespan;                                    // 0x0A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0A88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         DeathDelay;                                        // 0x0A94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        LlamaDeathLoop;                                    // 0x0A98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Eyes01;                                            // 0x0A9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Eyes02;                                            // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Eyes01_Skeletal;                                   // 0x0AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Eyes02_Skeletal;                                   // 0x0AA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDying;                                           // 0x0AAC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AAD[0x3];                                      // 0x0AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Llama_Death_Loop_Spawned;                          // 0x0AB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PinataExpired;                                     // 0x0AB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB5[0x3];                                      // 0x0AB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          LlamaDeath_SecondAnim;                             // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          KillParticle;                                      // 0x0ABC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_ABD[0x3];                                      // 0x0ABD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULlamaAnim_BP_C*                        Llama_Anim_BP;                                     // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Building_Static_Mesh_Component;                    // 0x0AC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         Number_Of_llam_mesh_materials;                     // 0x0AC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Headspawned;                                       // 0x0ACC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Prop_Explorer_OutlanderFragment_Llama(int32 EntryPoint);
	void The_First_Llama_Death_Animation_is_Finished();
	void LlamaDeathMontageIsComplete();
	void TheHeadWasSpawnedOnTheServerCallback();
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void DiamondsLlama();
	void DefaultLlama();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void RollCrystalType(class UFortWorldItemDefinition** RareCrystal);
	void RollIngrediants(class UFortIngredientItemDefinition** SpawnItem);
	void ConvertDamageToResources(float Dealt_Damage, float Damage_Threshold, float Spawn_Threshold, int32 MaxSpawnGroups, int32 AmountSpawnGroups, class UFortWorldItemDefinition* SpawnItem, int32 CurrentSpawned_0, float* CarryOverDamage_0, float* DamageRemainder_0, int32* AmountSpawned, bool* FinishedSpawning);
	void SpawnRareCrystals();
	void Spawn_Death_Ingrediants();
	void SetupDiamonds();
	void SpawnHeadProjectile(class USkeletalMeshComponent* SkeletalMesh);
	void CreateAndAttachEyes(class USkeletalMeshComponent* Skeletal_Mesh);
	void Llama_Lifespan_Expired();
	void OnRep_KillParticle();
	void ShowHideModels(bool Show_SkeletalMesh);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Prop_Explorer_OutlanderFragment_Llama_C">();
	}
	static class AProp_Explorer_OutlanderFragment_Llama_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_Explorer_OutlanderFragment_Llama_C>();
	}
};
static_assert(alignof(AProp_Explorer_OutlanderFragment_Llama_C) == 0x000004, "Wrong alignment on AProp_Explorer_OutlanderFragment_Llama_C");
static_assert(sizeof(AProp_Explorer_OutlanderFragment_Llama_C) == 0x000AD0, "Wrong size on AProp_Explorer_OutlanderFragment_Llama_C");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, UberGraphFrame) == 0x000944, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, LLama_SkeletalMesh) == 0x000948, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::LLama_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MovementComponent) == 0x00094C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MovementComponent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Timeline_0_LlamaScaleIn_CF0E7B9444C376CC817787B0D8C3D666) == 0x000950, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Timeline_0_LlamaScaleIn_CF0E7B9444C376CC817787B0D8C3D666' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Timeline_0__Direction_CF0E7B9444C376CC817787B0D8C3D666) == 0x000954, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Timeline_0__Direction_CF0E7B9444C376CC817787B0D8C3D666' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Timeline_0) == 0x000958, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, TotalDamage) == 0x00095C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::TotalDamage' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MaxDamage) == 0x000960, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MaxDamage' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, WoodThreshold) == 0x000964, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::WoodThreshold' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, StoneThreshold) == 0x000968, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::StoneThreshold' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MetalThreshold) == 0x00096C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MetalThreshold' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, RareThreshold) == 0x000970, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::RareThreshold' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IntWoodSpawn) == 0x000974, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IntWoodSpawn' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IntStoneSpawn) == 0x000978, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IntStoneSpawn' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IntMetalSpawn) == 0x00097C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IntMetalSpawn' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IntRarespawn) == 0x000980, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IntRarespawn' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MinRandomVector) == 0x000984, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MinRandomVector' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MaxRandomVector) == 0x000988, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MaxRandomVector' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CrystalType) == 0x00098C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CrystalType' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Min_Percent) == 0x000990, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Min_Percent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Max_Percent) == 0x000994, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Max_Percent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, BlackPercent) == 0x000998, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::BlackPercent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, GreenPercent) == 0x00099C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::GreenPercent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, RedPercent) == 0x0009A0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::RedPercent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, YellowPercent) == 0x0009A4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::YellowPercent' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, HasDiamonds) == 0x0009A8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::HasDiamonds' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IntIntIngrediantSpawn) == 0x0009AC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IntIntIngrediantSpawn' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MaxStone) == 0x0009B0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MaxStone' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Item_Ingrediant) == 0x0009B4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Item_Ingrediant' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Cue_HitSound) == 0x0009B8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Cue_HitSound' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MaxWood) == 0x0009BC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MaxWood' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, DealtDamage) == 0x0009C0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::DealtDamage' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, SpawnedWood) == 0x0009C4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::SpawnedWood' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CurrentWood) == 0x0009C8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CurrentWood' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, DamageRemainder) == 0x0009CC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::DamageRemainder' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CurrentSpawned) == 0x0009D0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CurrentSpawned' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, SpawnThreshold) == 0x0009D4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::SpawnThreshold' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CarryOverDamage) == 0x0009D8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CarryOverDamage' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, TestNewDamage) == 0x0009DC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::TestNewDamage' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, TempDealtDamage) == 0x0009E0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::TempDealtDamage' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, NumSpawnGroups) == 0x0009E4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::NumSpawnGroups' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, FinishSpawning) == 0x0009E8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::FinishSpawning' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Wood) == 0x0009EC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Wood' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Stone) == 0x0009F0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Stone' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, NewVar) == 0x0009F4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::NewVar' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CurrentStone) == 0x0009F8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CurrentStone' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MaxMetal) == 0x0009FC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MaxMetal' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CurrentMetal) == 0x000A00, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CurrentMetal' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Metal) == 0x000A04, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Metal' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IngrediantSpawnThreshold) == 0x000A08, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IngrediantSpawnThreshold' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, CurrentIngrediant) == 0x000A0C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::CurrentIngrediant' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MaxIngrediant) == 0x000A10, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MaxIngrediant' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, GE_DiamondsHealthMod) == 0x000A14, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::GE_DiamondsHealthMod' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, FeedbackPain) == 0x000A18, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::FeedbackPain' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Anim_Deploy) == 0x000A28, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Anim_Deploy' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, PinataPain) == 0x000A2C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::PinataPain' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, PinataSpawn) == 0x000A30, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::PinataSpawn' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, DeathCue) == 0x000A34, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::DeathCue' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, PlayDeathSound) == 0x000A38, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::PlayDeathSound' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, HeadProjectile) == 0x000A3C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::HeadProjectile' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, ProjectileSpawnLocation) == 0x000A40, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::ProjectileSpawnLocation' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, ProjectileReturnValue) == 0x000A48, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::ProjectileReturnValue' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, ProjectileSpeedLow) == 0x000A4C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::ProjectileSpeedLow' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, ProjectileSpeedHigh) == 0x000A50, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::ProjectileSpeedHigh' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, DeathConfetti_Effects) == 0x000A54, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::DeathConfetti_Effects' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, DeathFX_SocketName) == 0x000A58, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::DeathFX_SocketName' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, HitConfetti_Effects) == 0x000A60, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::HitConfetti_Effects' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MID_Index_01) == 0x000A64, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MID_Index_01' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MID_Index_02) == 0x000A68, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MID_Index_02' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MID_Index_03) == 0x000A6C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MID_Index_03' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MID_Index_00) == 0x000A70, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MID_Index_00' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, LlamaSkelMeshVisibility) == 0x000A74, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::LlamaSkelMeshVisibility' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, LlamaDeath_FirstAnim) == 0x000A78, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::LlamaDeath_FirstAnim' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Llama_BodyOpacityMask) == 0x000A7C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Llama_BodyOpacityMask' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, OverrideStaticMeshMat) == 0x000A80, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::OverrideStaticMeshMat' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Llama_Lifespan) == 0x000A84, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Llama_Lifespan' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, MIDs) == 0x000A88, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::MIDs' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, DeathDelay) == 0x000A94, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::DeathDelay' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, LlamaDeathLoop) == 0x000A98, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::LlamaDeathLoop' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Eyes01) == 0x000A9C, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Eyes01' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Eyes02) == 0x000AA0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Eyes02' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Eyes01_Skeletal) == 0x000AA4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Eyes01_Skeletal' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Eyes02_Skeletal) == 0x000AA8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Eyes02_Skeletal' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, IsDying) == 0x000AAC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::IsDying' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Llama_Death_Loop_Spawned) == 0x000AB0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Llama_Death_Loop_Spawned' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, PinataExpired) == 0x000AB4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::PinataExpired' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, LlamaDeath_SecondAnim) == 0x000AB8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::LlamaDeath_SecondAnim' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, KillParticle) == 0x000ABC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::KillParticle' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Llama_Anim_BP) == 0x000AC0, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Llama_Anim_BP' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Building_Static_Mesh_Component) == 0x000AC4, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Building_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Number_Of_llam_mesh_materials) == 0x000AC8, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Number_Of_llam_mesh_materials' has a wrong offset!");
static_assert(offsetof(AProp_Explorer_OutlanderFragment_Llama_C, Headspawned) == 0x000ACC, "Member 'AProp_Explorer_OutlanderFragment_Llama_C::Headspawned' has a wrong offset!");

}

#pragma pack(pop)
