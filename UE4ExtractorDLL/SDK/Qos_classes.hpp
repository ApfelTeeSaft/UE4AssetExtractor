#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Qos

#include "Basic.hpp"

#include "Qos_structs.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "CoreUObject_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Class Qos.QosBeaconClient
// 0x0028 (0x029C - 0x0274)
class AQosBeaconClient final : public AOnlineBeaconClient
{
public:
	uint8                                         Pad_274[0x28];                                     // 0x0274(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientQosResponse(EQosResponseType Response);
	void ServerQosRequest(const class FString& InSessionId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QosBeaconClient">();
	}
	static class AQosBeaconClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQosBeaconClient>();
	}
};
static_assert(alignof(AQosBeaconClient) == 0x000004, "Wrong alignment on AQosBeaconClient");
static_assert(sizeof(AQosBeaconClient) == 0x00029C, "Wrong size on AQosBeaconClient");

// Class Qos.QosBeaconHost
// 0x000C (0x0268 - 0x025C)
class AQosBeaconHost final : public AOnlineBeaconHostObject
{
public:
	uint8                                         Pad_25C[0xC];                                      // 0x025C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QosBeaconHost">();
	}
	static class AQosBeaconHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQosBeaconHost>();
	}
};
static_assert(alignof(AQosBeaconHost) == 0x000004, "Wrong alignment on AQosBeaconHost");
static_assert(sizeof(AQosBeaconHost) == 0x000268, "Wrong size on AQosBeaconHost");

// Class Qos.QosEvaluator
// 0x005C (0x0078 - 0x001C)
class UQosEvaluator final : public UObject
{
public:
	struct FQosSearchState                        SearchState;                                       // 0x001C(0x0014)(NativeAccessSpecifierPrivate)
	struct FQosSearchPass                         CurrentSearchPass;                                 // 0x0030(0x0010)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class AQosBeaconClient*                       QosBeaconClient;                                   // 0x0058(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x1C];                                      // 0x005C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QosEvaluator">();
	}
	static class UQosEvaluator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQosEvaluator>();
	}
};
static_assert(alignof(UQosEvaluator) == 0x000004, "Wrong alignment on UQosEvaluator");
static_assert(sizeof(UQosEvaluator) == 0x000078, "Wrong size on UQosEvaluator");
static_assert(offsetof(UQosEvaluator, SearchState) == 0x00001C, "Member 'UQosEvaluator::SearchState' has a wrong offset!");
static_assert(offsetof(UQosEvaluator, CurrentSearchPass) == 0x000030, "Member 'UQosEvaluator::CurrentSearchPass' has a wrong offset!");
static_assert(offsetof(UQosEvaluator, QosBeaconClient) == 0x000058, "Member 'UQosEvaluator::QosBeaconClient' has a wrong offset!");

}

#pragma pack(pop)
