#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardsListWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function RewardsListWidget.RewardsListWidget_C.PopulateRewards
// 0x0038 (0x0038 - 0x0000)
struct RewardsListWidget_C_PopulateRewards final
{
public:
	TArray<struct FFortQuestReward>               Rewards;                                           // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortQuestReward                       CallFunc_Array_Get_Item;                           // 0x0014(0x0008)()
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem_C*                                CallFunc_Create_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsListWidget_C_PopulateRewards) == 0x000004, "Wrong alignment on RewardsListWidget_C_PopulateRewards");
static_assert(sizeof(RewardsListWidget_C_PopulateRewards) == 0x000038, "Wrong size on RewardsListWidget_C_PopulateRewards");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, Rewards) == 0x000000, "Member 'RewardsListWidget_C_PopulateRewards::Rewards' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'RewardsListWidget_C_PopulateRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_Array_Get_Item) == 0x000014, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_GetType_ReturnValue) == 0x00001C, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001D, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'RewardsListWidget_C_PopulateRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x00002C, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_Create_ReturnValue) == 0x000030, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsListWidget_C_PopulateRewards, CallFunc_AddChild_ReturnValue) == 0x000034, "Member 'RewardsListWidget_C_PopulateRewards::CallFunc_AddChild_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
