#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RoboBear_AnimBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function RoboBear_AnimBP.RoboBear_AnimBP_C.ExecuteUbergraph_RoboBear_AnimBP
// 0x0040 (0x0040 - 0x0000)
struct RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_BGA_Explorer_OutlanderFragmentBear_C* K2Node_DynamicCast_AsB_BGA_Explorer_Outlander_Fragment_Bear; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP) == 0x000004, "Wrong alignment on RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP");
static_assert(sizeof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP) == 0x000040, "Wrong size on RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, EntryPoint) == 0x000000, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_GetOwningActor_ReturnValue) == 0x000004, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, K2Node_DynamicCast_AsB_BGA_Explorer_Outlander_Fragment_Bear) == 0x000008, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::K2Node_DynamicCast_AsB_BGA_Explorer_Outlander_Fragment_Bear' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, K2Node_DynamicCast_bSuccess) == 0x00000C, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x00002C, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, K2Node_Event_DeltaTimeX) == 0x000030, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP, CallFunc_MakeRotator_ReturnValue2) == 0x000034, "Member 'RoboBear_AnimBP_C_ExecuteUbergraph_RoboBear_AnimBP::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");

// Function RoboBear_AnimBP.RoboBear_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct RoboBear_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RoboBear_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on RoboBear_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(RoboBear_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on RoboBear_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(RoboBear_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'RoboBear_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}

#pragma pack(pop)
