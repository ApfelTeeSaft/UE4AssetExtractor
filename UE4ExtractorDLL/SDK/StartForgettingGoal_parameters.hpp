#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StartForgettingGoal

#include "Basic.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function StartForgettingGoal.StartForgettingGoal_C.ExecuteUbergraph_StartForgettingGoal
// 0x0010 (0x0010 - 0x0000)
struct StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal) == 0x000004, "Wrong alignment on StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal");
static_assert(sizeof(StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal) == 0x000010, "Wrong size on StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal");
static_assert(offsetof(StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal, EntryPoint) == 0x000000, "Member 'StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal::EntryPoint' has a wrong offset!");
static_assert(offsetof(StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal, K2Node_Event_OwnerActor) == 0x000004, "Member 'StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal, K2Node_DynamicCast_AsFort_AIController) == 0x000008, "Member 'StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal::K2Node_DynamicCast_AsFort_AIController' has a wrong offset!");
static_assert(offsetof(StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal, K2Node_DynamicCast_bSuccess) == 0x00000C, "Member 'StartForgettingGoal_C_ExecuteUbergraph_StartForgettingGoal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function StartForgettingGoal.StartForgettingGoal_C.ReceiveExecute
// 0x0004 (0x0004 - 0x0000)
struct StartForgettingGoal_C_ReceiveExecute final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StartForgettingGoal_C_ReceiveExecute) == 0x000004, "Wrong alignment on StartForgettingGoal_C_ReceiveExecute");
static_assert(sizeof(StartForgettingGoal_C_ReceiveExecute) == 0x000004, "Wrong size on StartForgettingGoal_C_ReceiveExecute");
static_assert(offsetof(StartForgettingGoal_C_ReceiveExecute, OwnerActor) == 0x000000, "Member 'StartForgettingGoal_C_ReceiveExecute::OwnerActor' has a wrong offset!");

}

#pragma pack(pop)
