#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StoreCardReveal_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass StoreCardReveal_BP.StoreCardReveal_BP_C
// 0x0428 (0x0668 - 0x0240)
class AStoreCardReveal_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FastForward_AudioComponent;                        // 0x0244(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardTemp;                                          // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardDummyLocExit;                                  // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardDummyLocHide;                                  // 0x0250(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardDummyLocShow;                                  // 0x0254(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UWidgetComponent*                       CardFrontWidget;                                   // 0x0258(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_VindertechCardGlowMesh;                          // 0x025C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_CardReveal_Rays_01;                              // 0x0260(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   St_VindertechCard_Rays_01;                         // 0x0264(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_VindertechCard01;                                // 0x0268(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UArrowComponent*                        CardRoot;                                          // 0x026C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   GroundPlaceholderMesh;                             // 0x0270(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        GroundRoot;                                        // 0x0274(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        PinataSceneRoot;                                   // 0x0278(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         FastForwardPauseTime_NewTrack_0_96BE2F524ACA60752FDC6CB87121F545; // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            FastForwardPauseTime__Direction_96BE2F524ACA60752FDC6CB87121F545; // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FastForwardPauseTime;                              // 0x0284(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardMoveToScreenFast_Rotation_2D89CFED4B186F0BFB13A397C37A1EE7; // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardMoveToScreenFast_LerpWorldLoc_2D89CFED4B186F0BFB13A397C37A1EE7; // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardMoveToScreenFast__Direction_2D89CFED4B186F0BFB13A397C37A1EE7; // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardMoveToScreenFast;                           // 0x0294(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardFlipSlowly_CardFlipSlow_F5F7D15E4851E94A79CD4E93B8E664B3; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardFlipSlowly__Direction_F5F7D15E4851E94A79CD4E93B8E664B3; // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardFlipSlowly;                                 // 0x02A0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardFlipToFront_NewTrack_6_8902A76E45F02B2EAFFF568387C58F2F; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardFlipToFront__Direction_8902A76E45F02B2EAFFF568387C58F2F; // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardFlipToFront;                                // 0x02AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardUpgradeFast_RaysFader_949EB8324B003C2943D50781B70022F4; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardUpgradeFast_NewTrack_0_949EB8324B003C2943D50781B70022F4; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardUpgradeFast__Direction_949EB8324B003C2943D50781B70022F4; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardUpgradeFast;                                // 0x02BC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardUpgrade_RaysFader_D41042154B04955F2C9F4F92369F5E1A; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardUpgrade_NewTrack_0_D41042154B04955F2C9F4F92369F5E1A; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardUpgrade__Direction_D41042154B04955F2C9F4F92369F5E1A; // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardUpgrade;                                    // 0x02CC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardExit_NewTrack_1_5B7343EC450EC02002347D8C37622915; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardExit__Direction_5B7343EC450EC02002347D8C37622915; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardExit;                                       // 0x02D8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                MeleeWeaponEquipLoc;                               // 0x02DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         EquipWeaponDelay;                                  // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataTassels;                                 // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Current_Delta;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldLocationForMaterial;                          // 0x02F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USkeletalMesh*>                  WeaponList;                                        // 0x0300(0x000C)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                SKMeleeLocation;                                   // 0x030C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SKMeleeRotation;                                   // 0x0318(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Stop;                                              // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MeleeWeaponDownLoc;                                // 0x0328(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               MeleeWeaponEquipRot;                               // 0x0334(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataBase;                                    // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UV2_Item_Card_C*                        CurrentCard;                                       // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LiveCardLocBeforeExit;                             // 0x0348(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PackIsUpgrade1;                                    // 0x0354(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PackIsUpgrade2;                                    // 0x0355(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PackIsUpgrade0;                                    // 0x0356(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasAttacked1X;                                     // 0x0357(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasAttacked2X;                                     // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasAttacked3X;                                     // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x2];                                      // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Random0_2;                                         // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                IconPanelMeshALoc;                                 // 0x0360(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LiveCardRotBeforeExit;                             // 0x036C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ChargeMeleeTime;                                   // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AbleToAttack;                                      // 0x037C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanFastForward;                                    // 0x037D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftMousePressed;                                  // 0x037E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftMouseReleased;                                 // 0x037F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataSwingStaticRot;                              // 0x0380(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataPackType;                                // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_;                                            // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DebugLevel0_;                                      // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DebugLevel1_;                                      // 0x0392(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DebugLevel2_;                                      // 0x0393(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UMaterialInstance*                      CardPackUpgrades;                                  // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackUpgradesT;                                 // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackCrew;                                      // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackCrewT;                                     // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackJackpot;                                   // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackJackpotT;                                  // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMeleeWep;                                  // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMeleeWepT;                                 // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackRangedWep;                                 // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackRangedWepT;                                // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackTraps;                                     // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackTrapsT;                                    // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackWeapons;                                   // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackWeaponsT;                                  // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMaterial;                                  // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMaterialT;                                 // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UTexture*                               CardPackIconTexture;                               // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CardPackIconColor;                                 // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataFoil;                                    // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        FallingDebris_Lvl_0;                               // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        FallingDebris_Lvl_1;                               // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Falling_Debris_Lvl_2;                              // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Explode_Lvl_0;                                     // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Explode_Lvl_1;                                     // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Explode_Lvl_2;                                     // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Hit_Lvl_0;                                   // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Hit_Lvl_1;                                   // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Upgrade_Lvl_1;                               // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Upgrade_Lvl_2;                               // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortRarity                                   CurrentRarity;                                     // 0x0414(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortRarity                                   TargetRarity;                                      // 0x0415(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_416[0x2];                                      // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MID_CardRarity;                                    // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_CardFoil;                                      // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataSwingStaticLoc;                              // 0x0420(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Lvl1_Lightray_Color;                               // 0x042C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Lvl2_Lightray_Color;                               // 0x043C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CardRaysMID;                                       // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Card_Rays_Color;                                   // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      ConfettiMID;                                       // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadGroundLocStart;                          // 0x0464(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadGroundLocEnd;                            // 0x0470(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadGroundLocEndOffset;                      // 0x047C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UMaterialInstanceDynamic*               MID_UpgradeNecklace;                               // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadStartLoc;                                // 0x048C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataHeadStartRot;                                // 0x0498(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataHeadGroundRotStart;                          // 0x04A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataHeadPreFallRot;                              // 0x04B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadPreFallLoc;                              // 0x04BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PinataDropHeight;                                  // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataSwingStaticRotRelative;                      // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataEyeLeft;                                 // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataEyeRight;                                // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        WeaponListOffsetLoc;                               // 0x04E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                TestWepOffset;                                     // 0x04EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMesh*                          TestWeapon;                                        // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FRotator>                       WeaponListOffsetRot;                               // 0x04FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        WeaponListOffsetScale;                             // 0x0508(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FRotator                               TestWepRot;                                        // 0x0514(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                TestWepScale;                                      // 0x0520(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RandomWeaponNumber;                                // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Llama_Appear;                                // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CardFlip;                                    // 0x0534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CurrentWeaponReady;                          // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CurrentWeaponSwing;                          // 0x053C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CurrentWeaponImpact;                         // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_ChargeAttackLoop;                            // 0x0544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Upgrade_Silver;                              // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Upgrade_Gold;                                // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Open_Normal;                                 // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Open_Silver;                                 // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Open_Gold;                                   // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_Greet_Current;                        // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_OpenNormal_Current;                   // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_UpgradeSilver_Current;                // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_UpgradeGold_Current;                  // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_OpenSilver_Current;                   // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_OpenGold_Current;                     // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_Hover_Current;                        // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_Tickle_Current;                       // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USoundBase*>                     Dialog_Llama_Depressed_Greet_Array;                // 0x057C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USoundBase*>                     Weapon_Ready_Sound_Array;                          // 0x0588(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USoundBase*>                     Weapon_Swing_Sound_Array;                          // 0x0594(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USoundBase*>                     Weapon_Impact_Sound_Array;                         // 0x05A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             Sound_CardFlyAtPlayer;                             // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CardPutAway;                                 // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_Card_Summary;                          // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Blue;                      // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Green;                     // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Purple;                    // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Gold;                      // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Platinum;                  // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_SweepUp;                                     // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USoundBase*>                     Dialog_Llama_Mob_Greet_Array;                      // 0x05D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USoundBase*>                     Dialog_Llama_Greet_Array_Current;                  // 0x05DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             Sound_PinataSwing;                                 // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         VO_Delay;                                          // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFort_Entry_Music_Controller_BP_C*      Fort_Entry_Music_Controller;                       // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          KillHover;                                         // 0x05F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          GettingReadyToStrike;                              // 0x05F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F6[0x2];                                      // 0x05F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Dialog_Llama_PreHit_Current;                       // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Music_Drop;                                  // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Music_Open;                                  // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USoundBase*>                     Greet_ARRAY;                                       // 0x0604(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             GreetGenericSound;                                 // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetSledgehammerSound;                            // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetBaseballBat_Sound;                            // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetAxeSound;                                     // 0x061C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             HockeyStickGreet_Sound;                            // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Garden_Rake_Greet_Sound;                           // 0x0624(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Garden_Hoe_Sound;                            // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Scythe_Sound;                                // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetPickaxe_Sound;                                // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Pitchfork_Sound;                             // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Sword_Sound;                                 // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_CardGlow;                                      // 0x063C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TimeHeldDown;                                      // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldLocationForEye;                               // 0x0644(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FCard                                  CardData;                                          // 0x0650(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SpecialCardPause;                                  // 0x065C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RareCard;                                          // 0x065D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewCard;                                           // 0x065E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewAndRareCard;                                    // 0x065F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ATVPostProcessBP_C*                     TVPPEffect;                                        // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FastForwardIsON;                                   // 0x0664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DEBUGRandomUpgradePause;                           // 0x0665(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableMouseInput;                                  // 0x0666(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DisableMouseInput_0;                               // 0x0667(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_StoreCardReveal_BP(int32 EntryPoint);
	void SpecialCardPauseAbort();
	void CardPackStoreStart();
	void ReceiveBeginPlay();
	void FastForwardPaused();
	void EnableMouseToFF();
	void TurnOnFastForward();
	void CardFrontRevealStart();
	void CardBackRevealStart();
	void TurnOffFastForward();
	void CardExitStart();
	void CardFlipStart();
	void PackDestroyStart();
	void CardEnterStart();
	void StartPackOpen();
	void OnStoreStateChanged(EFortStoreState NewStoreState);
	void InitiatePinata();
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void FastForwardPauseTime__UpdateFunc();
	void FastForwardPauseTime__FinishedFunc();
	void TL_CardUpgradeFast__UpdateFunc();
	void TL_CardUpgradeFast__FinishedFunc();
	void TL_CardFlipToFront__UpdateFunc();
	void TL_CardFlipToFront__FinishedFunc();
	void TL_CardUpgrade__UpdateFunc();
	void TL_CardUpgrade__FinishedFunc();
	void TL_CardFlipSlowly__UpdateFunc();
	void TL_CardFlipSlowly__FinishedFunc();
	void TL_CardExit__UpdateFunc();
	void TL_CardExit__FinishedFunc();
	void TL_CardMoveToScreenFast__UpdateFunc();
	void TL_CardMoveToScreenFast__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StoreCardReveal_BP_C">();
	}
	static class AStoreCardReveal_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStoreCardReveal_BP_C>();
	}
};
static_assert(alignof(AStoreCardReveal_BP_C) == 0x000004, "Wrong alignment on AStoreCardReveal_BP_C");
static_assert(sizeof(AStoreCardReveal_BP_C) == 0x000668, "Wrong size on AStoreCardReveal_BP_C");
static_assert(offsetof(AStoreCardReveal_BP_C, UberGraphFrame) == 0x000240, "Member 'AStoreCardReveal_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FastForward_AudioComponent) == 0x000244, "Member 'AStoreCardReveal_BP_C::FastForward_AudioComponent' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardTemp) == 0x000248, "Member 'AStoreCardReveal_BP_C::CardTemp' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardDummyLocExit) == 0x00024C, "Member 'AStoreCardReveal_BP_C::CardDummyLocExit' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardDummyLocHide) == 0x000250, "Member 'AStoreCardReveal_BP_C::CardDummyLocHide' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardDummyLocShow) == 0x000254, "Member 'AStoreCardReveal_BP_C::CardDummyLocShow' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardFrontWidget) == 0x000258, "Member 'AStoreCardReveal_BP_C::CardFrontWidget' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, S_VindertechCardGlowMesh) == 0x00025C, "Member 'AStoreCardReveal_BP_C::S_VindertechCardGlowMesh' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, P_CardReveal_Rays_01) == 0x000260, "Member 'AStoreCardReveal_BP_C::P_CardReveal_Rays_01' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, St_VindertechCard_Rays_01) == 0x000264, "Member 'AStoreCardReveal_BP_C::St_VindertechCard_Rays_01' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, S_VindertechCard01) == 0x000268, "Member 'AStoreCardReveal_BP_C::S_VindertechCard01' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardRoot) == 0x00026C, "Member 'AStoreCardReveal_BP_C::CardRoot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GroundPlaceholderMesh) == 0x000270, "Member 'AStoreCardReveal_BP_C::GroundPlaceholderMesh' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GroundRoot) == 0x000274, "Member 'AStoreCardReveal_BP_C::GroundRoot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataSceneRoot) == 0x000278, "Member 'AStoreCardReveal_BP_C::PinataSceneRoot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FastForwardPauseTime_NewTrack_0_96BE2F524ACA60752FDC6CB87121F545) == 0x00027C, "Member 'AStoreCardReveal_BP_C::FastForwardPauseTime_NewTrack_0_96BE2F524ACA60752FDC6CB87121F545' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FastForwardPauseTime__Direction_96BE2F524ACA60752FDC6CB87121F545) == 0x000280, "Member 'AStoreCardReveal_BP_C::FastForwardPauseTime__Direction_96BE2F524ACA60752FDC6CB87121F545' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FastForwardPauseTime) == 0x000284, "Member 'AStoreCardReveal_BP_C::FastForwardPauseTime' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardMoveToScreenFast_Rotation_2D89CFED4B186F0BFB13A397C37A1EE7) == 0x000288, "Member 'AStoreCardReveal_BP_C::TL_CardMoveToScreenFast_Rotation_2D89CFED4B186F0BFB13A397C37A1EE7' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardMoveToScreenFast_LerpWorldLoc_2D89CFED4B186F0BFB13A397C37A1EE7) == 0x00028C, "Member 'AStoreCardReveal_BP_C::TL_CardMoveToScreenFast_LerpWorldLoc_2D89CFED4B186F0BFB13A397C37A1EE7' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardMoveToScreenFast__Direction_2D89CFED4B186F0BFB13A397C37A1EE7) == 0x000290, "Member 'AStoreCardReveal_BP_C::TL_CardMoveToScreenFast__Direction_2D89CFED4B186F0BFB13A397C37A1EE7' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardMoveToScreenFast) == 0x000294, "Member 'AStoreCardReveal_BP_C::TL_CardMoveToScreenFast' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardFlipSlowly_CardFlipSlow_F5F7D15E4851E94A79CD4E93B8E664B3) == 0x000298, "Member 'AStoreCardReveal_BP_C::TL_CardFlipSlowly_CardFlipSlow_F5F7D15E4851E94A79CD4E93B8E664B3' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardFlipSlowly__Direction_F5F7D15E4851E94A79CD4E93B8E664B3) == 0x00029C, "Member 'AStoreCardReveal_BP_C::TL_CardFlipSlowly__Direction_F5F7D15E4851E94A79CD4E93B8E664B3' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardFlipSlowly) == 0x0002A0, "Member 'AStoreCardReveal_BP_C::TL_CardFlipSlowly' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardFlipToFront_NewTrack_6_8902A76E45F02B2EAFFF568387C58F2F) == 0x0002A4, "Member 'AStoreCardReveal_BP_C::TL_CardFlipToFront_NewTrack_6_8902A76E45F02B2EAFFF568387C58F2F' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardFlipToFront__Direction_8902A76E45F02B2EAFFF568387C58F2F) == 0x0002A8, "Member 'AStoreCardReveal_BP_C::TL_CardFlipToFront__Direction_8902A76E45F02B2EAFFF568387C58F2F' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardFlipToFront) == 0x0002AC, "Member 'AStoreCardReveal_BP_C::TL_CardFlipToFront' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgradeFast_RaysFader_949EB8324B003C2943D50781B70022F4) == 0x0002B0, "Member 'AStoreCardReveal_BP_C::TL_CardUpgradeFast_RaysFader_949EB8324B003C2943D50781B70022F4' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgradeFast_NewTrack_0_949EB8324B003C2943D50781B70022F4) == 0x0002B4, "Member 'AStoreCardReveal_BP_C::TL_CardUpgradeFast_NewTrack_0_949EB8324B003C2943D50781B70022F4' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgradeFast__Direction_949EB8324B003C2943D50781B70022F4) == 0x0002B8, "Member 'AStoreCardReveal_BP_C::TL_CardUpgradeFast__Direction_949EB8324B003C2943D50781B70022F4' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgradeFast) == 0x0002BC, "Member 'AStoreCardReveal_BP_C::TL_CardUpgradeFast' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgrade_RaysFader_D41042154B04955F2C9F4F92369F5E1A) == 0x0002C0, "Member 'AStoreCardReveal_BP_C::TL_CardUpgrade_RaysFader_D41042154B04955F2C9F4F92369F5E1A' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgrade_NewTrack_0_D41042154B04955F2C9F4F92369F5E1A) == 0x0002C4, "Member 'AStoreCardReveal_BP_C::TL_CardUpgrade_NewTrack_0_D41042154B04955F2C9F4F92369F5E1A' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgrade__Direction_D41042154B04955F2C9F4F92369F5E1A) == 0x0002C8, "Member 'AStoreCardReveal_BP_C::TL_CardUpgrade__Direction_D41042154B04955F2C9F4F92369F5E1A' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardUpgrade) == 0x0002CC, "Member 'AStoreCardReveal_BP_C::TL_CardUpgrade' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardExit_NewTrack_1_5B7343EC450EC02002347D8C37622915) == 0x0002D0, "Member 'AStoreCardReveal_BP_C::TL_CardExit_NewTrack_1_5B7343EC450EC02002347D8C37622915' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardExit__Direction_5B7343EC450EC02002347D8C37622915) == 0x0002D4, "Member 'AStoreCardReveal_BP_C::TL_CardExit__Direction_5B7343EC450EC02002347D8C37622915' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TL_CardExit) == 0x0002D8, "Member 'AStoreCardReveal_BP_C::TL_CardExit' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MeleeWeaponEquipLoc) == 0x0002DC, "Member 'AStoreCardReveal_BP_C::MeleeWeaponEquipLoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, EquipWeaponDelay) == 0x0002E8, "Member 'AStoreCardReveal_BP_C::EquipWeaponDelay' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_PinataTassels) == 0x0002EC, "Member 'AStoreCardReveal_BP_C::MID_PinataTassels' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Current_Delta) == 0x0002F0, "Member 'AStoreCardReveal_BP_C::Current_Delta' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, WorldLocationForMaterial) == 0x0002F4, "Member 'AStoreCardReveal_BP_C::WorldLocationForMaterial' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, WeaponList) == 0x000300, "Member 'AStoreCardReveal_BP_C::WeaponList' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, SKMeleeLocation) == 0x00030C, "Member 'AStoreCardReveal_BP_C::SKMeleeLocation' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, SKMeleeRotation) == 0x000318, "Member 'AStoreCardReveal_BP_C::SKMeleeRotation' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Stop) == 0x000324, "Member 'AStoreCardReveal_BP_C::Stop' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MeleeWeaponDownLoc) == 0x000328, "Member 'AStoreCardReveal_BP_C::MeleeWeaponDownLoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MeleeWeaponEquipRot) == 0x000334, "Member 'AStoreCardReveal_BP_C::MeleeWeaponEquipRot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_PinataBase) == 0x000340, "Member 'AStoreCardReveal_BP_C::MID_PinataBase' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CurrentCard) == 0x000344, "Member 'AStoreCardReveal_BP_C::CurrentCard' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, LiveCardLocBeforeExit) == 0x000348, "Member 'AStoreCardReveal_BP_C::LiveCardLocBeforeExit' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PackIsUpgrade1) == 0x000354, "Member 'AStoreCardReveal_BP_C::PackIsUpgrade1' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PackIsUpgrade2) == 0x000355, "Member 'AStoreCardReveal_BP_C::PackIsUpgrade2' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PackIsUpgrade0) == 0x000356, "Member 'AStoreCardReveal_BP_C::PackIsUpgrade0' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, HasAttacked1X) == 0x000357, "Member 'AStoreCardReveal_BP_C::HasAttacked1X' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, HasAttacked2X) == 0x000358, "Member 'AStoreCardReveal_BP_C::HasAttacked2X' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, HasAttacked3X) == 0x000359, "Member 'AStoreCardReveal_BP_C::HasAttacked3X' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Random0_2) == 0x00035C, "Member 'AStoreCardReveal_BP_C::Random0_2' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, IconPanelMeshALoc) == 0x000360, "Member 'AStoreCardReveal_BP_C::IconPanelMeshALoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, LiveCardRotBeforeExit) == 0x00036C, "Member 'AStoreCardReveal_BP_C::LiveCardRotBeforeExit' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, ChargeMeleeTime) == 0x000378, "Member 'AStoreCardReveal_BP_C::ChargeMeleeTime' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, AbleToAttack) == 0x00037C, "Member 'AStoreCardReveal_BP_C::AbleToAttack' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CanFastForward) == 0x00037D, "Member 'AStoreCardReveal_BP_C::CanFastForward' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, LeftMousePressed) == 0x00037E, "Member 'AStoreCardReveal_BP_C::LeftMousePressed' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, LeftMouseReleased) == 0x00037F, "Member 'AStoreCardReveal_BP_C::LeftMouseReleased' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataSwingStaticRot) == 0x000380, "Member 'AStoreCardReveal_BP_C::PinataSwingStaticRot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_PinataPackType) == 0x00038C, "Member 'AStoreCardReveal_BP_C::MID_PinataPackType' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Debug_) == 0x000390, "Member 'AStoreCardReveal_BP_C::Debug_' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, DebugLevel0_) == 0x000391, "Member 'AStoreCardReveal_BP_C::DebugLevel0_' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, DebugLevel1_) == 0x000392, "Member 'AStoreCardReveal_BP_C::DebugLevel1_' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, DebugLevel2_) == 0x000393, "Member 'AStoreCardReveal_BP_C::DebugLevel2_' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackUpgrades) == 0x000394, "Member 'AStoreCardReveal_BP_C::CardPackUpgrades' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackUpgradesT) == 0x000398, "Member 'AStoreCardReveal_BP_C::CardPackUpgradesT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackCrew) == 0x00039C, "Member 'AStoreCardReveal_BP_C::CardPackCrew' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackCrewT) == 0x0003A0, "Member 'AStoreCardReveal_BP_C::CardPackCrewT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackJackpot) == 0x0003A4, "Member 'AStoreCardReveal_BP_C::CardPackJackpot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackJackpotT) == 0x0003A8, "Member 'AStoreCardReveal_BP_C::CardPackJackpotT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackMeleeWep) == 0x0003AC, "Member 'AStoreCardReveal_BP_C::CardPackMeleeWep' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackMeleeWepT) == 0x0003B0, "Member 'AStoreCardReveal_BP_C::CardPackMeleeWepT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackRangedWep) == 0x0003B4, "Member 'AStoreCardReveal_BP_C::CardPackRangedWep' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackRangedWepT) == 0x0003B8, "Member 'AStoreCardReveal_BP_C::CardPackRangedWepT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackTraps) == 0x0003BC, "Member 'AStoreCardReveal_BP_C::CardPackTraps' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackTrapsT) == 0x0003C0, "Member 'AStoreCardReveal_BP_C::CardPackTrapsT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackWeapons) == 0x0003C4, "Member 'AStoreCardReveal_BP_C::CardPackWeapons' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackWeaponsT) == 0x0003C8, "Member 'AStoreCardReveal_BP_C::CardPackWeaponsT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackMaterial) == 0x0003CC, "Member 'AStoreCardReveal_BP_C::CardPackMaterial' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackMaterialT) == 0x0003D0, "Member 'AStoreCardReveal_BP_C::CardPackMaterialT' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackIconTexture) == 0x0003D4, "Member 'AStoreCardReveal_BP_C::CardPackIconTexture' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardPackIconColor) == 0x0003D8, "Member 'AStoreCardReveal_BP_C::CardPackIconColor' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_PinataFoil) == 0x0003E8, "Member 'AStoreCardReveal_BP_C::MID_PinataFoil' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FallingDebris_Lvl_0) == 0x0003EC, "Member 'AStoreCardReveal_BP_C::FallingDebris_Lvl_0' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FallingDebris_Lvl_1) == 0x0003F0, "Member 'AStoreCardReveal_BP_C::FallingDebris_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Falling_Debris_Lvl_2) == 0x0003F4, "Member 'AStoreCardReveal_BP_C::Falling_Debris_Lvl_2' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Explode_Lvl_0) == 0x0003F8, "Member 'AStoreCardReveal_BP_C::Explode_Lvl_0' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Explode_Lvl_1) == 0x0003FC, "Member 'AStoreCardReveal_BP_C::Explode_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Explode_Lvl_2) == 0x000400, "Member 'AStoreCardReveal_BP_C::Explode_Lvl_2' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Llama_Hit_Lvl_0) == 0x000404, "Member 'AStoreCardReveal_BP_C::Llama_Hit_Lvl_0' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Llama_Hit_Lvl_1) == 0x000408, "Member 'AStoreCardReveal_BP_C::Llama_Hit_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Llama_Upgrade_Lvl_1) == 0x00040C, "Member 'AStoreCardReveal_BP_C::Llama_Upgrade_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Llama_Upgrade_Lvl_2) == 0x000410, "Member 'AStoreCardReveal_BP_C::Llama_Upgrade_Lvl_2' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CurrentRarity) == 0x000414, "Member 'AStoreCardReveal_BP_C::CurrentRarity' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TargetRarity) == 0x000415, "Member 'AStoreCardReveal_BP_C::TargetRarity' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_CardRarity) == 0x000418, "Member 'AStoreCardReveal_BP_C::MID_CardRarity' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_CardFoil) == 0x00041C, "Member 'AStoreCardReveal_BP_C::MID_CardFoil' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataSwingStaticLoc) == 0x000420, "Member 'AStoreCardReveal_BP_C::PinataSwingStaticLoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Lvl1_Lightray_Color) == 0x00042C, "Member 'AStoreCardReveal_BP_C::Lvl1_Lightray_Color' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Lvl2_Lightray_Color) == 0x00043C, "Member 'AStoreCardReveal_BP_C::Lvl2_Lightray_Color' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardRaysMID) == 0x00044C, "Member 'AStoreCardReveal_BP_C::CardRaysMID' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Card_Rays_Color) == 0x000450, "Member 'AStoreCardReveal_BP_C::Card_Rays_Color' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, ConfettiMID) == 0x000460, "Member 'AStoreCardReveal_BP_C::ConfettiMID' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadGroundLocStart) == 0x000464, "Member 'AStoreCardReveal_BP_C::PinataHeadGroundLocStart' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadGroundLocEnd) == 0x000470, "Member 'AStoreCardReveal_BP_C::PinataHeadGroundLocEnd' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadGroundLocEndOffset) == 0x00047C, "Member 'AStoreCardReveal_BP_C::PinataHeadGroundLocEndOffset' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_UpgradeNecklace) == 0x000488, "Member 'AStoreCardReveal_BP_C::MID_UpgradeNecklace' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadStartLoc) == 0x00048C, "Member 'AStoreCardReveal_BP_C::PinataHeadStartLoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadStartRot) == 0x000498, "Member 'AStoreCardReveal_BP_C::PinataHeadStartRot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadGroundRotStart) == 0x0004A4, "Member 'AStoreCardReveal_BP_C::PinataHeadGroundRotStart' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadPreFallRot) == 0x0004B0, "Member 'AStoreCardReveal_BP_C::PinataHeadPreFallRot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataHeadPreFallLoc) == 0x0004BC, "Member 'AStoreCardReveal_BP_C::PinataHeadPreFallLoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataDropHeight) == 0x0004C8, "Member 'AStoreCardReveal_BP_C::PinataDropHeight' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, PinataSwingStaticRotRelative) == 0x0004CC, "Member 'AStoreCardReveal_BP_C::PinataSwingStaticRotRelative' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_PinataEyeLeft) == 0x0004D8, "Member 'AStoreCardReveal_BP_C::MID_PinataEyeLeft' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_PinataEyeRight) == 0x0004DC, "Member 'AStoreCardReveal_BP_C::MID_PinataEyeRight' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, WeaponListOffsetLoc) == 0x0004E0, "Member 'AStoreCardReveal_BP_C::WeaponListOffsetLoc' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TestWepOffset) == 0x0004EC, "Member 'AStoreCardReveal_BP_C::TestWepOffset' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TestWeapon) == 0x0004F8, "Member 'AStoreCardReveal_BP_C::TestWeapon' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, WeaponListOffsetRot) == 0x0004FC, "Member 'AStoreCardReveal_BP_C::WeaponListOffsetRot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, WeaponListOffsetScale) == 0x000508, "Member 'AStoreCardReveal_BP_C::WeaponListOffsetScale' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TestWepRot) == 0x000514, "Member 'AStoreCardReveal_BP_C::TestWepRot' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TestWepScale) == 0x000520, "Member 'AStoreCardReveal_BP_C::TestWepScale' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, RandomWeaponNumber) == 0x00052C, "Member 'AStoreCardReveal_BP_C::RandomWeaponNumber' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Llama_Appear) == 0x000530, "Member 'AStoreCardReveal_BP_C::Sound_Llama_Appear' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_CardFlip) == 0x000534, "Member 'AStoreCardReveal_BP_C::Sound_CardFlip' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_CurrentWeaponReady) == 0x000538, "Member 'AStoreCardReveal_BP_C::Sound_CurrentWeaponReady' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_CurrentWeaponSwing) == 0x00053C, "Member 'AStoreCardReveal_BP_C::Sound_CurrentWeaponSwing' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_CurrentWeaponImpact) == 0x000540, "Member 'AStoreCardReveal_BP_C::Sound_CurrentWeaponImpact' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_ChargeAttackLoop) == 0x000544, "Member 'AStoreCardReveal_BP_C::Sound_ChargeAttackLoop' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Upgrade_Silver) == 0x000548, "Member 'AStoreCardReveal_BP_C::Sound_Upgrade_Silver' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Upgrade_Gold) == 0x00054C, "Member 'AStoreCardReveal_BP_C::Sound_Upgrade_Gold' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Open_Normal) == 0x000550, "Member 'AStoreCardReveal_BP_C::Sound_Open_Normal' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Open_Silver) == 0x000554, "Member 'AStoreCardReveal_BP_C::Sound_Open_Silver' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Open_Gold) == 0x000558, "Member 'AStoreCardReveal_BP_C::Sound_Open_Gold' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_Greet_Current) == 0x00055C, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_Greet_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_OpenNormal_Current) == 0x000560, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_OpenNormal_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_UpgradeSilver_Current) == 0x000564, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_UpgradeSilver_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_UpgradeGold_Current) == 0x000568, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_UpgradeGold_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_OpenSilver_Current) == 0x00056C, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_OpenSilver_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_OpenGold_Current) == 0x000570, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_OpenGold_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_Hover_Current) == 0x000574, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_Hover_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_Tickle_Current) == 0x000578, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_Tickle_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_Depressed_Greet_Array) == 0x00057C, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_Depressed_Greet_Array' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Weapon_Ready_Sound_Array) == 0x000588, "Member 'AStoreCardReveal_BP_C::Weapon_Ready_Sound_Array' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Weapon_Swing_Sound_Array) == 0x000594, "Member 'AStoreCardReveal_BP_C::Weapon_Swing_Sound_Array' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Weapon_Impact_Sound_Array) == 0x0005A0, "Member 'AStoreCardReveal_BP_C::Weapon_Impact_Sound_Array' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_CardFlyAtPlayer) == 0x0005AC, "Member 'AStoreCardReveal_BP_C::Sound_CardFlyAtPlayer' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_CardPutAway) == 0x0005B0, "Member 'AStoreCardReveal_BP_C::Sound_CardPutAway' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Store_Card_Summary) == 0x0005B4, "Member 'AStoreCardReveal_BP_C::Sound_Store_Card_Summary' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Store_CardUpgrade_Blue) == 0x0005B8, "Member 'AStoreCardReveal_BP_C::Sound_Store_CardUpgrade_Blue' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Store_CardUpgrade_Green) == 0x0005BC, "Member 'AStoreCardReveal_BP_C::Sound_Store_CardUpgrade_Green' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Store_CardUpgrade_Purple) == 0x0005C0, "Member 'AStoreCardReveal_BP_C::Sound_Store_CardUpgrade_Purple' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Store_CardUpgrade_Gold) == 0x0005C4, "Member 'AStoreCardReveal_BP_C::Sound_Store_CardUpgrade_Gold' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Store_CardUpgrade_Platinum) == 0x0005C8, "Member 'AStoreCardReveal_BP_C::Sound_Store_CardUpgrade_Platinum' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_SweepUp) == 0x0005CC, "Member 'AStoreCardReveal_BP_C::Sound_SweepUp' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_Mob_Greet_Array) == 0x0005D0, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_Mob_Greet_Array' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_Greet_Array_Current) == 0x0005DC, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_Greet_Array_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_PinataSwing) == 0x0005E8, "Member 'AStoreCardReveal_BP_C::Sound_PinataSwing' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, VO_Delay) == 0x0005EC, "Member 'AStoreCardReveal_BP_C::VO_Delay' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Fort_Entry_Music_Controller) == 0x0005F0, "Member 'AStoreCardReveal_BP_C::Fort_Entry_Music_Controller' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, KillHover) == 0x0005F4, "Member 'AStoreCardReveal_BP_C::KillHover' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GettingReadyToStrike) == 0x0005F5, "Member 'AStoreCardReveal_BP_C::GettingReadyToStrike' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Dialog_Llama_PreHit_Current) == 0x0005F8, "Member 'AStoreCardReveal_BP_C::Dialog_Llama_PreHit_Current' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Music_Drop) == 0x0005FC, "Member 'AStoreCardReveal_BP_C::Sound_Music_Drop' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Sound_Music_Open) == 0x000600, "Member 'AStoreCardReveal_BP_C::Sound_Music_Open' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Greet_ARRAY) == 0x000604, "Member 'AStoreCardReveal_BP_C::Greet_ARRAY' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GreetGenericSound) == 0x000610, "Member 'AStoreCardReveal_BP_C::GreetGenericSound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GreetSledgehammerSound) == 0x000614, "Member 'AStoreCardReveal_BP_C::GreetSledgehammerSound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GreetBaseballBat_Sound) == 0x000618, "Member 'AStoreCardReveal_BP_C::GreetBaseballBat_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GreetAxeSound) == 0x00061C, "Member 'AStoreCardReveal_BP_C::GreetAxeSound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, HockeyStickGreet_Sound) == 0x000620, "Member 'AStoreCardReveal_BP_C::HockeyStickGreet_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Garden_Rake_Greet_Sound) == 0x000624, "Member 'AStoreCardReveal_BP_C::Garden_Rake_Greet_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Greet_Garden_Hoe_Sound) == 0x000628, "Member 'AStoreCardReveal_BP_C::Greet_Garden_Hoe_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Greet_Scythe_Sound) == 0x00062C, "Member 'AStoreCardReveal_BP_C::Greet_Scythe_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, GreetPickaxe_Sound) == 0x000630, "Member 'AStoreCardReveal_BP_C::GreetPickaxe_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Greet_Pitchfork_Sound) == 0x000634, "Member 'AStoreCardReveal_BP_C::Greet_Pitchfork_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, Greet_Sword_Sound) == 0x000638, "Member 'AStoreCardReveal_BP_C::Greet_Sword_Sound' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, MID_CardGlow) == 0x00063C, "Member 'AStoreCardReveal_BP_C::MID_CardGlow' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TimeHeldDown) == 0x000640, "Member 'AStoreCardReveal_BP_C::TimeHeldDown' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, WorldLocationForEye) == 0x000644, "Member 'AStoreCardReveal_BP_C::WorldLocationForEye' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, CardData) == 0x000650, "Member 'AStoreCardReveal_BP_C::CardData' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, SpecialCardPause) == 0x00065C, "Member 'AStoreCardReveal_BP_C::SpecialCardPause' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, RareCard) == 0x00065D, "Member 'AStoreCardReveal_BP_C::RareCard' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, NewCard) == 0x00065E, "Member 'AStoreCardReveal_BP_C::NewCard' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, NewAndRareCard) == 0x00065F, "Member 'AStoreCardReveal_BP_C::NewAndRareCard' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, TVPPEffect) == 0x000660, "Member 'AStoreCardReveal_BP_C::TVPPEffect' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, FastForwardIsON) == 0x000664, "Member 'AStoreCardReveal_BP_C::FastForwardIsON' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, DEBUGRandomUpgradePause) == 0x000665, "Member 'AStoreCardReveal_BP_C::DEBUGRandomUpgradePause' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, EnableMouseInput) == 0x000666, "Member 'AStoreCardReveal_BP_C::EnableMouseInput' has a wrong offset!");
static_assert(offsetof(AStoreCardReveal_BP_C, DisableMouseInput_0) == 0x000667, "Member 'AStoreCardReveal_BP_C::DisableMouseInput_0' has a wrong offset!");

}

#pragma pack(pop)
