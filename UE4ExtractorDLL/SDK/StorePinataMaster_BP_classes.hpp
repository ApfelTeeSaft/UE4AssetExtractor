#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StorePinataMaster_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass StorePinataMaster_BP.StorePinataMaster_BP_C
// 0x05D0 (0x0810 - 0x0240)
class AStorePinataMaster_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        NewWeaponRoot;                                     // 0x0244(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Pinata_MATERIAL_TEMP1;                           // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpotLightComponent*                    SpotLightRim_Ground;                               // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UDirectionalLightComponent*             DirectionalLight_Ground;                           // 0x0250(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardTemp;                                          // 0x0254(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpotLightComponent*                    SpotLightMain_Ground;                              // 0x0258(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 SK_Pinata_ExplodedMeshes;                          // 0x025C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Head_Damage;                             // 0x0260(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Head_UpgradeA;                           // 0x0264(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Head_UpgradeB;                           // 0x0268(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Jaw_UpgradeB;                            // 0x026C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Jaw_UpgradeA;                            // 0x0270(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Upgrade_Necklace;                        // 0x0274(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_UpgradeHatB;                             // 0x0278(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Pendant_UpgradeB;                        // 0x027C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Pendant_UpgradeA;                        // 0x0280(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Saddlebag_BaseL;                         // 0x0284(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Saddlebag_Lock;                          // 0x0288(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Saddlebag_Guard;                         // 0x028C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Saddlebag_Latch;                         // 0x0290(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Saddlebag_Door;                          // 0x0294(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Saddlebag_Base;                          // 0x0298(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Rear_Damage;                             // 0x029C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Jaw;                                     // 0x02A0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Rear;                                    // 0x02A4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Pinata_EyeL;                                     // 0x02A8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Pinata_EyeR;                                     // 0x02AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Head;                                    // 0x02B0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_LlamaExplode_Lvl1_01;                            // 0x02B4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_LlamaHit_Lvl0_01;                                // 0x02B8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_LlamaBreak_Head_Lvl0_01;                         // 0x02BC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   SK_Pinata_Body;                                    // 0x02C0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 SK_Pinata_Rig;                                     // 0x02C4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UAudioComponent*                        Llama_Voice;                                       // 0x02C8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UDirectionalLightComponent*             LightShafts;                                       // 0x02CC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_LlamaBreak_FallingDebris_01;                     // 0x02D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpotLightComponent*                    SpotLightMain;                                     // 0x02D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_LlamaUpgrade_Lvl1;                               // 0x02D8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardDummyLocExit;                                  // 0x02DC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardDummyLocHide;                                  // 0x02E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   CardDummyLocShow;                                  // 0x02E4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UWidgetComponent*                       CardFrontWidget;                                   // 0x02E8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_VindertechCardGlowMesh;                          // 0x02EC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_CardReveal_Rays_01;                              // 0x02F0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   St_VindertechCard_Rays_01;                         // 0x02F4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_VindertechCard01;                                // 0x02F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UArrowComponent*                        CardRoot;                                          // 0x02FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_CandyCorn02;                                     // 0x0300(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_CandyCorn01;                                     // 0x0304(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint13;                                    // 0x0308(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint12;                                    // 0x030C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint11;                                    // 0x0310(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint10;                                    // 0x0314(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean08;                               // 0x0318(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint09;                                    // 0x031C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean07;                               // 0x0320(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean06;                               // 0x0324(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint08;                                    // 0x0328(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean05;                               // 0x032C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean04;                               // 0x0330(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint07;                                    // 0x0334(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean01;                               // 0x0338(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint05;                                    // 0x033C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint06;                                    // 0x0340(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean03;                               // 0x0344(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Jellybean02;                               // 0x0348(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint03;                                    // 0x034C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint01;                                    // 0x0350(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   S_Candy_Mint04;                                    // 0x0354(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IconPanelMeshA;                                    // 0x0358(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_Broomdust_01;                                    // 0x035C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 SK_PushBroom;                                      // 0x0360(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   IconPanelMeshGroundPlaceholder;                    // 0x0364(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   GroundPlaceholderMesh;                             // 0x0368(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        GroundRoot;                                        // 0x036C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkyLightComponent*                     SkyLight00;                                        // 0x0370(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpotLightComponent*                    SpotLightRim;                                      // 0x0374(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   MeleeWeaponDummyCharge;                            // 0x0378(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   MeleeWeaponDummy2;                                 // 0x037C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USkeletalMeshComponent*                 SKMeleeWeapon;                                     // 0x0380(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   MeleeWeaponDummy;                                  // 0x0384(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   WeaponRoot;                                        // 0x0388(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        PinataSceneRoot;                                   // 0x038C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         Timeline_0_DirGround_7BEC5298479CA735A53B1CB25EC926EF; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Timeline_0_rimGround_7BEC5298479CA735A53B1CB25EC926EF; // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Timeline_0_MainGround_7BEC5298479CA735A53B1CB25EC926EF; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Timeline_0_MainLight_7BEC5298479CA735A53B1CB25EC926EF; // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Timeline_0__Direction_7BEC5298479CA735A53B1CB25EC926EF; // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x03A4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_CardCough_NewTrack_0_DAEEB3A641472A9A78E0BB93BA6CE0E0; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_CardCough__Direction_DAEEB3A641472A9A78E0BB93BA6CE0E0; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_CardCough;                                      // 0x03B0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_InitialEyesDelay_LerpToOverTime_730F5A1744987A22B842BC8543CCDBC5; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_InitialEyesDelay__Direction_730F5A1744987A22B842BC8543CCDBC5; // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_InitialEyesDelay;                               // 0x03BC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_EyesFollowMouseAgain_NewTrack_3_1BE27C46490CB7E2A3B07CA8042DE768; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_EyesFollowMouseAgain__Direction_1BE27C46490CB7E2A3B07CA8042DE768; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_EyesFollowMouseAgain;                           // 0x03C8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Upgrade2_NewTrack_6_3313188D45B89EDEAD5CC8BD30ABBAC3; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Upgrade2_NewTrack_4_3313188D45B89EDEAD5CC8BD30ABBAC3; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Upgrade2_UpgradeWipe_3313188D45B89EDEAD5CC8BD30ABBAC3; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_Upgrade2__Direction_3313188D45B89EDEAD5CC8BD30ABBAC3; // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Upgrade2;                                       // 0x03DC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_PushbroomAnim_LERP_5F6C90144EDBBEAF398302AB845E844F; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_PushbroomAnim_ParticleScaleOut_5F6C90144EDBBEAF398302AB845E844F; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_PushbroomAnim_NewTrack_2_5F6C90144EDBBEAF398302AB845E844F; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_PushbroomAnim__Direction_5F6C90144EDBBEAF398302AB845E844F; // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_PushbroomAnim;                                  // 0x03F0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_UndarkenBG_NewTrack_0_C60EED984B4A5117E9941E920611D748; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_UndarkenBG__Direction_C60EED984B4A5117E9941E920611D748; // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_UndarkenBG;                                     // 0x03FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_RegularEyes_NewTrack_3_2259ACD0444C6333BC4BD3BF1C9EE1E5; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_RegularEyes__Direction_2259ACD0444C6333BC4BD3BF1C9EE1E5; // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_RegularEyes;                                    // 0x0408(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_ChangeLighting_DirGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4; // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_ChangeLighting_rimGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_ChangeLighting_MainGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4; // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_ChangeLighting_MainLight_A488F4E44EB8E7A0F9886E8F7CA1BDC4; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_ChangeLighting__Direction_A488F4E44EB8E7A0F9886E8F7CA1BDC4; // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_ChangeLighting;                                 // 0x0420(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_DarkenBG_NewTrack_0_C89B3A6D43D94BAC2627F18DC7E2A1D1; // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_DarkenBG__Direction_C89B3A6D43D94BAC2627F18DC7E2A1D1; // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_DarkenBG;                                       // 0x042C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_WeaponCharge_TimeHeld_8CB70918473F7BE5EF5A2F827BB25ABF; // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_WeaponCharge_NewTrack_2_8CB70918473F7BE5EF5A2F827BB25ABF; // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_WeaponCharge_NewTrack_1_8CB70918473F7BE5EF5A2F827BB25ABF; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_WeaponCharge_NewTrack_0_8CB70918473F7BE5EF5A2F827BB25ABF; // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_WeaponCharge__Direction_8CB70918473F7BE5EF5A2F827BB25ABF; // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_WeaponCharge;                                   // 0x0444(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Upgrade1_NewTrack_5_DE6D0868440970D949F11B98CC0FC434; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Upgrade1_NewTrack_3_DE6D0868440970D949F11B98CC0FC434; // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Upgrade1_UpgradeWipe_DE6D0868440970D949F11B98CC0FC434; // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_Upgrade1__Direction_DE6D0868440970D949F11B98CC0FC434; // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Upgrade1;                                       // 0x0458(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_Attack_NewTrack_2_9355DE8041B051639599A9A8EA98EA0D; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_Attack__Direction_9355DE8041B051639599A9A8EA98EA0D; // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Attack;                                         // 0x0464(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TL_EquipWeapon_NewTrack_2_443114684EA745E35026E98F24AA5387; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            TL_EquipWeapon__Direction_443114684EA745E35026E98F24AA5387; // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_EquipWeapon;                                    // 0x0470(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   WeaponAsset_ID;                                    // 0x0474(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USoundBase>>      Weapon_Ready_Sound_Array;                          // 0x0480(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USoundBase>>      Weapon_Swing_Sound_Array;                          // 0x048C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USoundBase>>      Weapon_Impact_Sound_Array;                         // 0x0498(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USoundBase*>                     Greet_ARRAY;                                       // 0x04A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                MeleeWeaponEquipLoc;                               // 0x04B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         EquipWeaponDelay;                                  // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataTassels;                                 // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Current_Delta;                                     // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldLocationForMaterial;                          // 0x04C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                SKMeleeLocation;                                   // 0x04D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SKMeleeRotation;                                   // 0x04E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Stop;                                              // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MeleeWeaponDownLoc;                                // 0x04F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               MeleeWeaponEquipRot;                               // 0x04FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataBase;                                    // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UV2_Item_Card_C*                        CurrentCard;                                       // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LiveCardLocBeforeExit;                             // 0x0510(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PackIsUpgrade1;                                    // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PackIsUpgrade2;                                    // 0x051D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PackIsUpgrade0;                                    // 0x051E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasAttacked1X;                                     // 0x051F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasAttacked2X;                                     // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasAttacked3X;                                     // 0x0521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_522[0x2];                                      // 0x0522(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Random0_2;                                         // 0x0524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                IconPanelMeshALoc;                                 // 0x0528(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LiveCardRotBeforeExit;                             // 0x0534(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ChargeMeleeTime;                                   // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AbleToAttack;                                      // 0x0544(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanFastForward;                                    // 0x0545(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftMousePressed;                                  // 0x0546(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftMouseReleased;                                 // 0x0547(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataSwingStaticRot;                              // 0x0548(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataPackType;                                // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_;                                            // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DebugLevel0_;                                      // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DebugLevel1_;                                      // 0x055A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DebugLevel2_;                                      // 0x055B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UMaterialInstance*                      CardPackUpgrades;                                  // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackUpgradesT;                                 // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackCrew;                                      // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackCrewT;                                     // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackJackpot;                                   // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackJackpotT;                                  // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMeleeWep;                                  // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMeleeWepT;                                 // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackRangedWep;                                 // 0x057C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackRangedWepT;                                // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackTraps;                                     // 0x0584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackTrapsT;                                    // 0x0588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackWeapons;                                   // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackWeaponsT;                                  // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMaterial;                                  // 0x0594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      CardPackMaterialT;                                 // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UTexture*                               CardPackIconTexture;                               // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CardPackIconColor;                                 // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataFoil;                                    // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        FallingDebris_Lvl_0;                               // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        FallingDebris_Lvl_1;                               // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Falling_Debris_Lvl_2;                              // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Explode_Lvl_0;                                     // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Explode_Lvl_1;                                     // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Explode_Lvl_2;                                     // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Hit_Lvl_0;                                   // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Hit_Lvl_1;                                   // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Upgrade_Lvl_1;                               // 0x05D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        Llama_Upgrade_Lvl_2;                               // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortRarity                                   CurrentRarity;                                     // 0x05DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortRarity                                   TargetRarity;                                      // 0x05DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5DE[0x2];                                      // 0x05DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MID_CardRarity;                                    // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_CardFoil;                                      // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataSwingStaticLoc;                              // 0x05E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Lvl1_Lightray_Color;                               // 0x05F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Lvl2_Lightray_Color;                               // 0x0604(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CardRaysMID;                                       // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Card_Rays_Color;                                   // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstance*                      ConfettiMID;                                       // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadGroundLocStart;                          // 0x062C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadGroundLocEnd;                            // 0x0638(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadGroundLocEndOffset;                      // 0x0644(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UMaterialInstanceDynamic*               MID_UpgradeNecklace;                               // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadStartLoc;                                // 0x0654(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataHeadStartRot;                                // 0x0660(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataHeadGroundRotStart;                          // 0x066C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataHeadPreFallRot;                              // 0x0678(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PinataHeadPreFallLoc;                              // 0x0684(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PinataDropHeight;                                  // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PinataSwingStaticRotRelative;                      // 0x0694(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataEyeLeft;                                 // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_PinataEyeRight;                                // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USkeletalMesh*                          TestWeapon;                                        // 0x06A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         RandomWeaponNumber;                                // 0x06AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Llama_Appear;                                // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CardFlip;                                    // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CurrentWeaponReady;                          // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CurrentWeaponSwing;                          // 0x06BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CurrentWeaponImpact;                         // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_ChargeAttackLoop;                            // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Upgrade_Silver;                              // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Upgrade_Gold;                                // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Open_Normal;                                 // 0x06D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Open_Silver;                                 // 0x06D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Open_Gold;                                   // 0x06D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_Greet_Current;                        // 0x06DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_OpenNormal_Current;                   // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_UpgradeSilver_Current;                // 0x06E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_UpgradeGold_Current;                  // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_OpenSilver_Current;                   // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_OpenGold_Current;                     // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_Hover_Current;                        // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Dialog_Llama_Tickle_Current;                       // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USoundBase*>                     Dialog_Llama_Depressed_Greet_Array;                // 0x06FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             Sound_CardFlyAtPlayer;                             // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_CardPutAway;                                 // 0x070C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_Card_Summary;                          // 0x0710(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Blue;                      // 0x0714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Green;                     // 0x0718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Purple;                    // 0x071C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Gold;                      // 0x0720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Store_CardUpgrade_Platinum;                  // 0x0724(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_SweepUp;                                     // 0x0728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class USoundBase*>                     Dialog_Llama_Mob_Greet_Array;                      // 0x072C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USoundBase*>                     Dialog_Llama_Greet_Array_Current;                  // 0x0738(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             Sound_PinataSwing;                                 // 0x0744(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         VO_Delay;                                          // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFort_Entry_Music_Controller_BP_C*      Fort_Entry_Music_Controller;                       // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          KillHover;                                         // 0x0750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Dialog_Llama_PreHit_Current;                       // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Music_Drop;                                  // 0x0758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Sound_Music_Open;                                  // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetGenericSound;                                 // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetSledgehammerSound;                            // 0x0764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetBaseballBat_Sound;                            // 0x0768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetAxeSound;                                     // 0x076C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             HockeyStickGreet_Sound;                            // 0x0770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Garden_Rake_Greet_Sound;                           // 0x0774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Garden_Hoe_Sound;                            // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Scythe_Sound;                                // 0x077C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             GreetPickaxe_Sound;                                // 0x0780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Pitchfork_Sound;                             // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             Greet_Sword_Sound;                                 // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_CardGlow;                                      // 0x078C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TimeHeldDown;                                      // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldLocationForEye;                               // 0x0794(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 WeaponObject;                                      // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USkeletalMesh*                          CurrentWeaponAsset;                                // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        WeaponListOffsetLoc;                               // 0x07A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FRotator>                       WeaponListOffsetRot;                               // 0x07B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        WeaponListOffsetScale;                             // 0x07C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftClassPtr<class UClass>>           UseableWeapons;                                    // 0x07CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class AStoreWeaponMaster_BP_C*                SpawnedWeaponBlueprint;                            // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AStoreCamera_Blueprint_C*               StoreCameraActor;                                  // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AStoreCamera_Blueprint_C*               StoreCameraInLevel;                                // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TSoftClassPtr<class UClass>                   TEST44444;                                         // 0x07E4(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 WeaponClass;                                       // 0x07FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 LoadAssetWeaponClass;                              // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AttackLeftMousePressed;                            // 0x0804(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_805[0x3];                                      // 0x0805(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AStoreCardReveal_BP_C*                  StoreCardRevealInLevel;                            // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         AmountOfWeapons;                                   // 0x080C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_StorePinataMaster_BP(int32 EntryPoint);
	void SetTickleVO();
	void ReceiveBeginPlay();
	void PlayTickleVO(class USoundBase* InputTickleVO);
	void PlayHoverVO();
	void CardPackStoreStart();
	void FinishedUpgradePackTo2();
	void FinishedUpgradePackTo1();
	void ReadyToAttack();
	void PlayUpgradePackTo2();
	void OpenPinata();
	void PlayUpgradePackTo1();
	void PackDestroyStart();
	void CardEnterStart();
	void StartPackOpen();
	void CameraTransitionComplete();
	void CameraResetComplete();
	void OnStoreStateChanged(EFortStoreState NewStoreState);
	void InitiatePinata();
	void DisableLights(bool Enable);
	void ReceiveTick(float DeltaSeconds);
	void OnLoaded_E529D9FA4E70DEFD59CF9A8777EBA6D5(class UClass* Loaded);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void TL_CardCough__UpdateFunc();
	void TL_CardCough__FinishedFunc();
	void TL_InitialEyesDelay__UpdateFunc();
	void TL_InitialEyesDelay__FinishedFunc();
	void TL_ChangeLighting__UpdateFunc();
	void TL_ChangeLighting__FinishedFunc();
	void TL_EyesFollowMouseAgain__UpdateFunc();
	void TL_EyesFollowMouseAgain__FinishedFunc();
	void TL_RegularEyes__UpdateFunc();
	void TL_RegularEyes__FinishedFunc();
	void TL_UndarkenBG__UpdateFunc();
	void TL_UndarkenBG__FinishedFunc();
	void TL_DarkenBG__UpdateFunc();
	void TL_DarkenBG__FinishedFunc();
	void TL_WeaponCharge__UpdateFunc();
	void TL_WeaponCharge__FinishedFunc();
	void TL_Upgrade2__UpdateFunc();
	void TL_Upgrade2__FinishedFunc();
	void TL_Upgrade1__UpdateFunc();
	void TL_Upgrade1__FinishedFunc();
	void TL_PushbroomAnim__Trigger_Particles__EventFunc();
	void TL_PushbroomAnim__UpdateFunc();
	void TL_PushbroomAnim__FinishedFunc();
	void TL_Attack__UpdateFunc();
	void TL_Attack__FinishedFunc();
	void TL_EquipWeapon__UpdateFunc();
	void TL_EquipWeapon__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StorePinataMaster_BP_C">();
	}
	static class AStorePinataMaster_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStorePinataMaster_BP_C>();
	}
};
static_assert(alignof(AStorePinataMaster_BP_C) == 0x000004, "Wrong alignment on AStorePinataMaster_BP_C");
static_assert(sizeof(AStorePinataMaster_BP_C) == 0x000810, "Wrong size on AStorePinataMaster_BP_C");
static_assert(offsetof(AStorePinataMaster_BP_C, UberGraphFrame) == 0x000240, "Member 'AStorePinataMaster_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, NewWeaponRoot) == 0x000244, "Member 'AStorePinataMaster_BP_C::NewWeaponRoot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Pinata_MATERIAL_TEMP1) == 0x000248, "Member 'AStorePinataMaster_BP_C::S_Pinata_MATERIAL_TEMP1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SpotLightRim_Ground) == 0x00024C, "Member 'AStorePinataMaster_BP_C::SpotLightRim_Ground' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, DirectionalLight_Ground) == 0x000250, "Member 'AStorePinataMaster_BP_C::DirectionalLight_Ground' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardTemp) == 0x000254, "Member 'AStorePinataMaster_BP_C::CardTemp' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SpotLightMain_Ground) == 0x000258, "Member 'AStorePinataMaster_BP_C::SpotLightMain_Ground' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_ExplodedMeshes) == 0x00025C, "Member 'AStorePinataMaster_BP_C::SK_Pinata_ExplodedMeshes' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Head_Damage) == 0x000260, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Head_Damage' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Head_UpgradeA) == 0x000264, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Head_UpgradeA' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Head_UpgradeB) == 0x000268, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Head_UpgradeB' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Jaw_UpgradeB) == 0x00026C, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Jaw_UpgradeB' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Jaw_UpgradeA) == 0x000270, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Jaw_UpgradeA' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Upgrade_Necklace) == 0x000274, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Upgrade_Necklace' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_UpgradeHatB) == 0x000278, "Member 'AStorePinataMaster_BP_C::SK_Pinata_UpgradeHatB' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Pendant_UpgradeB) == 0x00027C, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Pendant_UpgradeB' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Pendant_UpgradeA) == 0x000280, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Pendant_UpgradeA' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Saddlebag_BaseL) == 0x000284, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Saddlebag_BaseL' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Saddlebag_Lock) == 0x000288, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Saddlebag_Lock' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Saddlebag_Guard) == 0x00028C, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Saddlebag_Guard' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Saddlebag_Latch) == 0x000290, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Saddlebag_Latch' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Saddlebag_Door) == 0x000294, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Saddlebag_Door' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Saddlebag_Base) == 0x000298, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Saddlebag_Base' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Rear_Damage) == 0x00029C, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Rear_Damage' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Jaw) == 0x0002A0, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Jaw' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Rear) == 0x0002A4, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Rear' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Pinata_EyeL) == 0x0002A8, "Member 'AStorePinataMaster_BP_C::S_Pinata_EyeL' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Pinata_EyeR) == 0x0002AC, "Member 'AStorePinataMaster_BP_C::S_Pinata_EyeR' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Head) == 0x0002B0, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Head' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_LlamaExplode_Lvl1_01) == 0x0002B4, "Member 'AStorePinataMaster_BP_C::P_LlamaExplode_Lvl1_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_LlamaHit_Lvl0_01) == 0x0002B8, "Member 'AStorePinataMaster_BP_C::P_LlamaHit_Lvl0_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_LlamaBreak_Head_Lvl0_01) == 0x0002BC, "Member 'AStorePinataMaster_BP_C::P_LlamaBreak_Head_Lvl0_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Body) == 0x0002C0, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Body' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_Pinata_Rig) == 0x0002C4, "Member 'AStorePinataMaster_BP_C::SK_Pinata_Rig' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Llama_Voice) == 0x0002C8, "Member 'AStorePinataMaster_BP_C::Llama_Voice' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, LightShafts) == 0x0002CC, "Member 'AStorePinataMaster_BP_C::LightShafts' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_LlamaBreak_FallingDebris_01) == 0x0002D0, "Member 'AStorePinataMaster_BP_C::P_LlamaBreak_FallingDebris_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SpotLightMain) == 0x0002D4, "Member 'AStorePinataMaster_BP_C::SpotLightMain' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_LlamaUpgrade_Lvl1) == 0x0002D8, "Member 'AStorePinataMaster_BP_C::P_LlamaUpgrade_Lvl1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardDummyLocExit) == 0x0002DC, "Member 'AStorePinataMaster_BP_C::CardDummyLocExit' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardDummyLocHide) == 0x0002E0, "Member 'AStorePinataMaster_BP_C::CardDummyLocHide' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardDummyLocShow) == 0x0002E4, "Member 'AStorePinataMaster_BP_C::CardDummyLocShow' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardFrontWidget) == 0x0002E8, "Member 'AStorePinataMaster_BP_C::CardFrontWidget' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_VindertechCardGlowMesh) == 0x0002EC, "Member 'AStorePinataMaster_BP_C::S_VindertechCardGlowMesh' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_CardReveal_Rays_01) == 0x0002F0, "Member 'AStorePinataMaster_BP_C::P_CardReveal_Rays_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, St_VindertechCard_Rays_01) == 0x0002F4, "Member 'AStorePinataMaster_BP_C::St_VindertechCard_Rays_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_VindertechCard01) == 0x0002F8, "Member 'AStorePinataMaster_BP_C::S_VindertechCard01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardRoot) == 0x0002FC, "Member 'AStorePinataMaster_BP_C::CardRoot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_CandyCorn02) == 0x000300, "Member 'AStorePinataMaster_BP_C::S_CandyCorn02' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_CandyCorn01) == 0x000304, "Member 'AStorePinataMaster_BP_C::S_CandyCorn01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint13) == 0x000308, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint13' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint12) == 0x00030C, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint12' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint11) == 0x000310, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint11' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint10) == 0x000314, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint10' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean08) == 0x000318, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean08' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint09) == 0x00031C, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint09' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean07) == 0x000320, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean07' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean06) == 0x000324, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean06' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint08) == 0x000328, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint08' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean05) == 0x00032C, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean05' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean04) == 0x000330, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean04' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint07) == 0x000334, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint07' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean01) == 0x000338, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint05) == 0x00033C, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint05' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint06) == 0x000340, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint06' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean03) == 0x000344, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean03' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Jellybean02) == 0x000348, "Member 'AStorePinataMaster_BP_C::S_Candy_Jellybean02' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint03) == 0x00034C, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint03' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint01) == 0x000350, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, S_Candy_Mint04) == 0x000354, "Member 'AStorePinataMaster_BP_C::S_Candy_Mint04' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, IconPanelMeshA) == 0x000358, "Member 'AStorePinataMaster_BP_C::IconPanelMeshA' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, P_Broomdust_01) == 0x00035C, "Member 'AStorePinataMaster_BP_C::P_Broomdust_01' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SK_PushBroom) == 0x000360, "Member 'AStorePinataMaster_BP_C::SK_PushBroom' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, IconPanelMeshGroundPlaceholder) == 0x000364, "Member 'AStorePinataMaster_BP_C::IconPanelMeshGroundPlaceholder' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GroundPlaceholderMesh) == 0x000368, "Member 'AStorePinataMaster_BP_C::GroundPlaceholderMesh' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GroundRoot) == 0x00036C, "Member 'AStorePinataMaster_BP_C::GroundRoot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SkyLight00) == 0x000370, "Member 'AStorePinataMaster_BP_C::SkyLight00' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SpotLightRim) == 0x000374, "Member 'AStorePinataMaster_BP_C::SpotLightRim' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MeleeWeaponDummyCharge) == 0x000378, "Member 'AStorePinataMaster_BP_C::MeleeWeaponDummyCharge' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MeleeWeaponDummy2) == 0x00037C, "Member 'AStorePinataMaster_BP_C::MeleeWeaponDummy2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SKMeleeWeapon) == 0x000380, "Member 'AStorePinataMaster_BP_C::SKMeleeWeapon' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MeleeWeaponDummy) == 0x000384, "Member 'AStorePinataMaster_BP_C::MeleeWeaponDummy' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponRoot) == 0x000388, "Member 'AStorePinataMaster_BP_C::WeaponRoot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataSceneRoot) == 0x00038C, "Member 'AStorePinataMaster_BP_C::PinataSceneRoot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Timeline_0_DirGround_7BEC5298479CA735A53B1CB25EC926EF) == 0x000390, "Member 'AStorePinataMaster_BP_C::Timeline_0_DirGround_7BEC5298479CA735A53B1CB25EC926EF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Timeline_0_rimGround_7BEC5298479CA735A53B1CB25EC926EF) == 0x000394, "Member 'AStorePinataMaster_BP_C::Timeline_0_rimGround_7BEC5298479CA735A53B1CB25EC926EF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Timeline_0_MainGround_7BEC5298479CA735A53B1CB25EC926EF) == 0x000398, "Member 'AStorePinataMaster_BP_C::Timeline_0_MainGround_7BEC5298479CA735A53B1CB25EC926EF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Timeline_0_MainLight_7BEC5298479CA735A53B1CB25EC926EF) == 0x00039C, "Member 'AStorePinataMaster_BP_C::Timeline_0_MainLight_7BEC5298479CA735A53B1CB25EC926EF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Timeline_0__Direction_7BEC5298479CA735A53B1CB25EC926EF) == 0x0003A0, "Member 'AStorePinataMaster_BP_C::Timeline_0__Direction_7BEC5298479CA735A53B1CB25EC926EF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Timeline_0) == 0x0003A4, "Member 'AStorePinataMaster_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_CardCough_NewTrack_0_DAEEB3A641472A9A78E0BB93BA6CE0E0) == 0x0003A8, "Member 'AStorePinataMaster_BP_C::TL_CardCough_NewTrack_0_DAEEB3A641472A9A78E0BB93BA6CE0E0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_CardCough__Direction_DAEEB3A641472A9A78E0BB93BA6CE0E0) == 0x0003AC, "Member 'AStorePinataMaster_BP_C::TL_CardCough__Direction_DAEEB3A641472A9A78E0BB93BA6CE0E0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_CardCough) == 0x0003B0, "Member 'AStorePinataMaster_BP_C::TL_CardCough' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_InitialEyesDelay_LerpToOverTime_730F5A1744987A22B842BC8543CCDBC5) == 0x0003B4, "Member 'AStorePinataMaster_BP_C::TL_InitialEyesDelay_LerpToOverTime_730F5A1744987A22B842BC8543CCDBC5' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_InitialEyesDelay__Direction_730F5A1744987A22B842BC8543CCDBC5) == 0x0003B8, "Member 'AStorePinataMaster_BP_C::TL_InitialEyesDelay__Direction_730F5A1744987A22B842BC8543CCDBC5' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_InitialEyesDelay) == 0x0003BC, "Member 'AStorePinataMaster_BP_C::TL_InitialEyesDelay' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_EyesFollowMouseAgain_NewTrack_3_1BE27C46490CB7E2A3B07CA8042DE768) == 0x0003C0, "Member 'AStorePinataMaster_BP_C::TL_EyesFollowMouseAgain_NewTrack_3_1BE27C46490CB7E2A3B07CA8042DE768' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_EyesFollowMouseAgain__Direction_1BE27C46490CB7E2A3B07CA8042DE768) == 0x0003C4, "Member 'AStorePinataMaster_BP_C::TL_EyesFollowMouseAgain__Direction_1BE27C46490CB7E2A3B07CA8042DE768' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_EyesFollowMouseAgain) == 0x0003C8, "Member 'AStorePinataMaster_BP_C::TL_EyesFollowMouseAgain' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade2_NewTrack_6_3313188D45B89EDEAD5CC8BD30ABBAC3) == 0x0003CC, "Member 'AStorePinataMaster_BP_C::TL_Upgrade2_NewTrack_6_3313188D45B89EDEAD5CC8BD30ABBAC3' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade2_NewTrack_4_3313188D45B89EDEAD5CC8BD30ABBAC3) == 0x0003D0, "Member 'AStorePinataMaster_BP_C::TL_Upgrade2_NewTrack_4_3313188D45B89EDEAD5CC8BD30ABBAC3' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade2_UpgradeWipe_3313188D45B89EDEAD5CC8BD30ABBAC3) == 0x0003D4, "Member 'AStorePinataMaster_BP_C::TL_Upgrade2_UpgradeWipe_3313188D45B89EDEAD5CC8BD30ABBAC3' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade2__Direction_3313188D45B89EDEAD5CC8BD30ABBAC3) == 0x0003D8, "Member 'AStorePinataMaster_BP_C::TL_Upgrade2__Direction_3313188D45B89EDEAD5CC8BD30ABBAC3' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade2) == 0x0003DC, "Member 'AStorePinataMaster_BP_C::TL_Upgrade2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_PushbroomAnim_LERP_5F6C90144EDBBEAF398302AB845E844F) == 0x0003E0, "Member 'AStorePinataMaster_BP_C::TL_PushbroomAnim_LERP_5F6C90144EDBBEAF398302AB845E844F' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_PushbroomAnim_ParticleScaleOut_5F6C90144EDBBEAF398302AB845E844F) == 0x0003E4, "Member 'AStorePinataMaster_BP_C::TL_PushbroomAnim_ParticleScaleOut_5F6C90144EDBBEAF398302AB845E844F' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_PushbroomAnim_NewTrack_2_5F6C90144EDBBEAF398302AB845E844F) == 0x0003E8, "Member 'AStorePinataMaster_BP_C::TL_PushbroomAnim_NewTrack_2_5F6C90144EDBBEAF398302AB845E844F' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_PushbroomAnim__Direction_5F6C90144EDBBEAF398302AB845E844F) == 0x0003EC, "Member 'AStorePinataMaster_BP_C::TL_PushbroomAnim__Direction_5F6C90144EDBBEAF398302AB845E844F' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_PushbroomAnim) == 0x0003F0, "Member 'AStorePinataMaster_BP_C::TL_PushbroomAnim' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_UndarkenBG_NewTrack_0_C60EED984B4A5117E9941E920611D748) == 0x0003F4, "Member 'AStorePinataMaster_BP_C::TL_UndarkenBG_NewTrack_0_C60EED984B4A5117E9941E920611D748' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_UndarkenBG__Direction_C60EED984B4A5117E9941E920611D748) == 0x0003F8, "Member 'AStorePinataMaster_BP_C::TL_UndarkenBG__Direction_C60EED984B4A5117E9941E920611D748' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_UndarkenBG) == 0x0003FC, "Member 'AStorePinataMaster_BP_C::TL_UndarkenBG' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_RegularEyes_NewTrack_3_2259ACD0444C6333BC4BD3BF1C9EE1E5) == 0x000400, "Member 'AStorePinataMaster_BP_C::TL_RegularEyes_NewTrack_3_2259ACD0444C6333BC4BD3BF1C9EE1E5' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_RegularEyes__Direction_2259ACD0444C6333BC4BD3BF1C9EE1E5) == 0x000404, "Member 'AStorePinataMaster_BP_C::TL_RegularEyes__Direction_2259ACD0444C6333BC4BD3BF1C9EE1E5' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_RegularEyes) == 0x000408, "Member 'AStorePinataMaster_BP_C::TL_RegularEyes' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_ChangeLighting_DirGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4) == 0x00040C, "Member 'AStorePinataMaster_BP_C::TL_ChangeLighting_DirGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_ChangeLighting_rimGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4) == 0x000410, "Member 'AStorePinataMaster_BP_C::TL_ChangeLighting_rimGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_ChangeLighting_MainGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4) == 0x000414, "Member 'AStorePinataMaster_BP_C::TL_ChangeLighting_MainGround_A488F4E44EB8E7A0F9886E8F7CA1BDC4' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_ChangeLighting_MainLight_A488F4E44EB8E7A0F9886E8F7CA1BDC4) == 0x000418, "Member 'AStorePinataMaster_BP_C::TL_ChangeLighting_MainLight_A488F4E44EB8E7A0F9886E8F7CA1BDC4' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_ChangeLighting__Direction_A488F4E44EB8E7A0F9886E8F7CA1BDC4) == 0x00041C, "Member 'AStorePinataMaster_BP_C::TL_ChangeLighting__Direction_A488F4E44EB8E7A0F9886E8F7CA1BDC4' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_ChangeLighting) == 0x000420, "Member 'AStorePinataMaster_BP_C::TL_ChangeLighting' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_DarkenBG_NewTrack_0_C89B3A6D43D94BAC2627F18DC7E2A1D1) == 0x000424, "Member 'AStorePinataMaster_BP_C::TL_DarkenBG_NewTrack_0_C89B3A6D43D94BAC2627F18DC7E2A1D1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_DarkenBG__Direction_C89B3A6D43D94BAC2627F18DC7E2A1D1) == 0x000428, "Member 'AStorePinataMaster_BP_C::TL_DarkenBG__Direction_C89B3A6D43D94BAC2627F18DC7E2A1D1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_DarkenBG) == 0x00042C, "Member 'AStorePinataMaster_BP_C::TL_DarkenBG' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_WeaponCharge_TimeHeld_8CB70918473F7BE5EF5A2F827BB25ABF) == 0x000430, "Member 'AStorePinataMaster_BP_C::TL_WeaponCharge_TimeHeld_8CB70918473F7BE5EF5A2F827BB25ABF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_WeaponCharge_NewTrack_2_8CB70918473F7BE5EF5A2F827BB25ABF) == 0x000434, "Member 'AStorePinataMaster_BP_C::TL_WeaponCharge_NewTrack_2_8CB70918473F7BE5EF5A2F827BB25ABF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_WeaponCharge_NewTrack_1_8CB70918473F7BE5EF5A2F827BB25ABF) == 0x000438, "Member 'AStorePinataMaster_BP_C::TL_WeaponCharge_NewTrack_1_8CB70918473F7BE5EF5A2F827BB25ABF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_WeaponCharge_NewTrack_0_8CB70918473F7BE5EF5A2F827BB25ABF) == 0x00043C, "Member 'AStorePinataMaster_BP_C::TL_WeaponCharge_NewTrack_0_8CB70918473F7BE5EF5A2F827BB25ABF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_WeaponCharge__Direction_8CB70918473F7BE5EF5A2F827BB25ABF) == 0x000440, "Member 'AStorePinataMaster_BP_C::TL_WeaponCharge__Direction_8CB70918473F7BE5EF5A2F827BB25ABF' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_WeaponCharge) == 0x000444, "Member 'AStorePinataMaster_BP_C::TL_WeaponCharge' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade1_NewTrack_5_DE6D0868440970D949F11B98CC0FC434) == 0x000448, "Member 'AStorePinataMaster_BP_C::TL_Upgrade1_NewTrack_5_DE6D0868440970D949F11B98CC0FC434' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade1_NewTrack_3_DE6D0868440970D949F11B98CC0FC434) == 0x00044C, "Member 'AStorePinataMaster_BP_C::TL_Upgrade1_NewTrack_3_DE6D0868440970D949F11B98CC0FC434' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade1_UpgradeWipe_DE6D0868440970D949F11B98CC0FC434) == 0x000450, "Member 'AStorePinataMaster_BP_C::TL_Upgrade1_UpgradeWipe_DE6D0868440970D949F11B98CC0FC434' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade1__Direction_DE6D0868440970D949F11B98CC0FC434) == 0x000454, "Member 'AStorePinataMaster_BP_C::TL_Upgrade1__Direction_DE6D0868440970D949F11B98CC0FC434' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Upgrade1) == 0x000458, "Member 'AStorePinataMaster_BP_C::TL_Upgrade1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Attack_NewTrack_2_9355DE8041B051639599A9A8EA98EA0D) == 0x00045C, "Member 'AStorePinataMaster_BP_C::TL_Attack_NewTrack_2_9355DE8041B051639599A9A8EA98EA0D' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Attack__Direction_9355DE8041B051639599A9A8EA98EA0D) == 0x000460, "Member 'AStorePinataMaster_BP_C::TL_Attack__Direction_9355DE8041B051639599A9A8EA98EA0D' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_Attack) == 0x000464, "Member 'AStorePinataMaster_BP_C::TL_Attack' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_EquipWeapon_NewTrack_2_443114684EA745E35026E98F24AA5387) == 0x000468, "Member 'AStorePinataMaster_BP_C::TL_EquipWeapon_NewTrack_2_443114684EA745E35026E98F24AA5387' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_EquipWeapon__Direction_443114684EA745E35026E98F24AA5387) == 0x00046C, "Member 'AStorePinataMaster_BP_C::TL_EquipWeapon__Direction_443114684EA745E35026E98F24AA5387' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TL_EquipWeapon) == 0x000470, "Member 'AStorePinataMaster_BP_C::TL_EquipWeapon' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponAsset_ID) == 0x000474, "Member 'AStorePinataMaster_BP_C::WeaponAsset_ID' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Weapon_Ready_Sound_Array) == 0x000480, "Member 'AStorePinataMaster_BP_C::Weapon_Ready_Sound_Array' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Weapon_Swing_Sound_Array) == 0x00048C, "Member 'AStorePinataMaster_BP_C::Weapon_Swing_Sound_Array' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Weapon_Impact_Sound_Array) == 0x000498, "Member 'AStorePinataMaster_BP_C::Weapon_Impact_Sound_Array' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Greet_ARRAY) == 0x0004A4, "Member 'AStorePinataMaster_BP_C::Greet_ARRAY' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MeleeWeaponEquipLoc) == 0x0004B0, "Member 'AStorePinataMaster_BP_C::MeleeWeaponEquipLoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, EquipWeaponDelay) == 0x0004BC, "Member 'AStorePinataMaster_BP_C::EquipWeaponDelay' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_PinataTassels) == 0x0004C0, "Member 'AStorePinataMaster_BP_C::MID_PinataTassels' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Current_Delta) == 0x0004C4, "Member 'AStorePinataMaster_BP_C::Current_Delta' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WorldLocationForMaterial) == 0x0004C8, "Member 'AStorePinataMaster_BP_C::WorldLocationForMaterial' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SKMeleeLocation) == 0x0004D4, "Member 'AStorePinataMaster_BP_C::SKMeleeLocation' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SKMeleeRotation) == 0x0004E0, "Member 'AStorePinataMaster_BP_C::SKMeleeRotation' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Stop) == 0x0004EC, "Member 'AStorePinataMaster_BP_C::Stop' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MeleeWeaponDownLoc) == 0x0004F0, "Member 'AStorePinataMaster_BP_C::MeleeWeaponDownLoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MeleeWeaponEquipRot) == 0x0004FC, "Member 'AStorePinataMaster_BP_C::MeleeWeaponEquipRot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_PinataBase) == 0x000508, "Member 'AStorePinataMaster_BP_C::MID_PinataBase' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CurrentCard) == 0x00050C, "Member 'AStorePinataMaster_BP_C::CurrentCard' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, LiveCardLocBeforeExit) == 0x000510, "Member 'AStorePinataMaster_BP_C::LiveCardLocBeforeExit' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PackIsUpgrade1) == 0x00051C, "Member 'AStorePinataMaster_BP_C::PackIsUpgrade1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PackIsUpgrade2) == 0x00051D, "Member 'AStorePinataMaster_BP_C::PackIsUpgrade2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PackIsUpgrade0) == 0x00051E, "Member 'AStorePinataMaster_BP_C::PackIsUpgrade0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, HasAttacked1X) == 0x00051F, "Member 'AStorePinataMaster_BP_C::HasAttacked1X' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, HasAttacked2X) == 0x000520, "Member 'AStorePinataMaster_BP_C::HasAttacked2X' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, HasAttacked3X) == 0x000521, "Member 'AStorePinataMaster_BP_C::HasAttacked3X' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Random0_2) == 0x000524, "Member 'AStorePinataMaster_BP_C::Random0_2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, IconPanelMeshALoc) == 0x000528, "Member 'AStorePinataMaster_BP_C::IconPanelMeshALoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, LiveCardRotBeforeExit) == 0x000534, "Member 'AStorePinataMaster_BP_C::LiveCardRotBeforeExit' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, ChargeMeleeTime) == 0x000540, "Member 'AStorePinataMaster_BP_C::ChargeMeleeTime' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, AbleToAttack) == 0x000544, "Member 'AStorePinataMaster_BP_C::AbleToAttack' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CanFastForward) == 0x000545, "Member 'AStorePinataMaster_BP_C::CanFastForward' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, LeftMousePressed) == 0x000546, "Member 'AStorePinataMaster_BP_C::LeftMousePressed' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, LeftMouseReleased) == 0x000547, "Member 'AStorePinataMaster_BP_C::LeftMouseReleased' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataSwingStaticRot) == 0x000548, "Member 'AStorePinataMaster_BP_C::PinataSwingStaticRot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_PinataPackType) == 0x000554, "Member 'AStorePinataMaster_BP_C::MID_PinataPackType' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Debug_) == 0x000558, "Member 'AStorePinataMaster_BP_C::Debug_' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, DebugLevel0_) == 0x000559, "Member 'AStorePinataMaster_BP_C::DebugLevel0_' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, DebugLevel1_) == 0x00055A, "Member 'AStorePinataMaster_BP_C::DebugLevel1_' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, DebugLevel2_) == 0x00055B, "Member 'AStorePinataMaster_BP_C::DebugLevel2_' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackUpgrades) == 0x00055C, "Member 'AStorePinataMaster_BP_C::CardPackUpgrades' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackUpgradesT) == 0x000560, "Member 'AStorePinataMaster_BP_C::CardPackUpgradesT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackCrew) == 0x000564, "Member 'AStorePinataMaster_BP_C::CardPackCrew' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackCrewT) == 0x000568, "Member 'AStorePinataMaster_BP_C::CardPackCrewT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackJackpot) == 0x00056C, "Member 'AStorePinataMaster_BP_C::CardPackJackpot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackJackpotT) == 0x000570, "Member 'AStorePinataMaster_BP_C::CardPackJackpotT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackMeleeWep) == 0x000574, "Member 'AStorePinataMaster_BP_C::CardPackMeleeWep' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackMeleeWepT) == 0x000578, "Member 'AStorePinataMaster_BP_C::CardPackMeleeWepT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackRangedWep) == 0x00057C, "Member 'AStorePinataMaster_BP_C::CardPackRangedWep' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackRangedWepT) == 0x000580, "Member 'AStorePinataMaster_BP_C::CardPackRangedWepT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackTraps) == 0x000584, "Member 'AStorePinataMaster_BP_C::CardPackTraps' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackTrapsT) == 0x000588, "Member 'AStorePinataMaster_BP_C::CardPackTrapsT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackWeapons) == 0x00058C, "Member 'AStorePinataMaster_BP_C::CardPackWeapons' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackWeaponsT) == 0x000590, "Member 'AStorePinataMaster_BP_C::CardPackWeaponsT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackMaterial) == 0x000594, "Member 'AStorePinataMaster_BP_C::CardPackMaterial' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackMaterialT) == 0x000598, "Member 'AStorePinataMaster_BP_C::CardPackMaterialT' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackIconTexture) == 0x00059C, "Member 'AStorePinataMaster_BP_C::CardPackIconTexture' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardPackIconColor) == 0x0005A0, "Member 'AStorePinataMaster_BP_C::CardPackIconColor' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_PinataFoil) == 0x0005B0, "Member 'AStorePinataMaster_BP_C::MID_PinataFoil' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, FallingDebris_Lvl_0) == 0x0005B4, "Member 'AStorePinataMaster_BP_C::FallingDebris_Lvl_0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, FallingDebris_Lvl_1) == 0x0005B8, "Member 'AStorePinataMaster_BP_C::FallingDebris_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Falling_Debris_Lvl_2) == 0x0005BC, "Member 'AStorePinataMaster_BP_C::Falling_Debris_Lvl_2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Explode_Lvl_0) == 0x0005C0, "Member 'AStorePinataMaster_BP_C::Explode_Lvl_0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Explode_Lvl_1) == 0x0005C4, "Member 'AStorePinataMaster_BP_C::Explode_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Explode_Lvl_2) == 0x0005C8, "Member 'AStorePinataMaster_BP_C::Explode_Lvl_2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Llama_Hit_Lvl_0) == 0x0005CC, "Member 'AStorePinataMaster_BP_C::Llama_Hit_Lvl_0' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Llama_Hit_Lvl_1) == 0x0005D0, "Member 'AStorePinataMaster_BP_C::Llama_Hit_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Llama_Upgrade_Lvl_1) == 0x0005D4, "Member 'AStorePinataMaster_BP_C::Llama_Upgrade_Lvl_1' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Llama_Upgrade_Lvl_2) == 0x0005D8, "Member 'AStorePinataMaster_BP_C::Llama_Upgrade_Lvl_2' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CurrentRarity) == 0x0005DC, "Member 'AStorePinataMaster_BP_C::CurrentRarity' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TargetRarity) == 0x0005DD, "Member 'AStorePinataMaster_BP_C::TargetRarity' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_CardRarity) == 0x0005E0, "Member 'AStorePinataMaster_BP_C::MID_CardRarity' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_CardFoil) == 0x0005E4, "Member 'AStorePinataMaster_BP_C::MID_CardFoil' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataSwingStaticLoc) == 0x0005E8, "Member 'AStorePinataMaster_BP_C::PinataSwingStaticLoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Lvl1_Lightray_Color) == 0x0005F4, "Member 'AStorePinataMaster_BP_C::Lvl1_Lightray_Color' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Lvl2_Lightray_Color) == 0x000604, "Member 'AStorePinataMaster_BP_C::Lvl2_Lightray_Color' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CardRaysMID) == 0x000614, "Member 'AStorePinataMaster_BP_C::CardRaysMID' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Card_Rays_Color) == 0x000618, "Member 'AStorePinataMaster_BP_C::Card_Rays_Color' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, ConfettiMID) == 0x000628, "Member 'AStorePinataMaster_BP_C::ConfettiMID' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadGroundLocStart) == 0x00062C, "Member 'AStorePinataMaster_BP_C::PinataHeadGroundLocStart' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadGroundLocEnd) == 0x000638, "Member 'AStorePinataMaster_BP_C::PinataHeadGroundLocEnd' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadGroundLocEndOffset) == 0x000644, "Member 'AStorePinataMaster_BP_C::PinataHeadGroundLocEndOffset' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_UpgradeNecklace) == 0x000650, "Member 'AStorePinataMaster_BP_C::MID_UpgradeNecklace' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadStartLoc) == 0x000654, "Member 'AStorePinataMaster_BP_C::PinataHeadStartLoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadStartRot) == 0x000660, "Member 'AStorePinataMaster_BP_C::PinataHeadStartRot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadGroundRotStart) == 0x00066C, "Member 'AStorePinataMaster_BP_C::PinataHeadGroundRotStart' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadPreFallRot) == 0x000678, "Member 'AStorePinataMaster_BP_C::PinataHeadPreFallRot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataHeadPreFallLoc) == 0x000684, "Member 'AStorePinataMaster_BP_C::PinataHeadPreFallLoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataDropHeight) == 0x000690, "Member 'AStorePinataMaster_BP_C::PinataDropHeight' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, PinataSwingStaticRotRelative) == 0x000694, "Member 'AStorePinataMaster_BP_C::PinataSwingStaticRotRelative' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_PinataEyeLeft) == 0x0006A0, "Member 'AStorePinataMaster_BP_C::MID_PinataEyeLeft' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_PinataEyeRight) == 0x0006A4, "Member 'AStorePinataMaster_BP_C::MID_PinataEyeRight' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TestWeapon) == 0x0006A8, "Member 'AStorePinataMaster_BP_C::TestWeapon' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, RandomWeaponNumber) == 0x0006AC, "Member 'AStorePinataMaster_BP_C::RandomWeaponNumber' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Llama_Appear) == 0x0006B0, "Member 'AStorePinataMaster_BP_C::Sound_Llama_Appear' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_CardFlip) == 0x0006B4, "Member 'AStorePinataMaster_BP_C::Sound_CardFlip' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_CurrentWeaponReady) == 0x0006B8, "Member 'AStorePinataMaster_BP_C::Sound_CurrentWeaponReady' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_CurrentWeaponSwing) == 0x0006BC, "Member 'AStorePinataMaster_BP_C::Sound_CurrentWeaponSwing' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_CurrentWeaponImpact) == 0x0006C0, "Member 'AStorePinataMaster_BP_C::Sound_CurrentWeaponImpact' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_ChargeAttackLoop) == 0x0006C4, "Member 'AStorePinataMaster_BP_C::Sound_ChargeAttackLoop' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Upgrade_Silver) == 0x0006C8, "Member 'AStorePinataMaster_BP_C::Sound_Upgrade_Silver' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Upgrade_Gold) == 0x0006CC, "Member 'AStorePinataMaster_BP_C::Sound_Upgrade_Gold' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Open_Normal) == 0x0006D0, "Member 'AStorePinataMaster_BP_C::Sound_Open_Normal' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Open_Silver) == 0x0006D4, "Member 'AStorePinataMaster_BP_C::Sound_Open_Silver' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Open_Gold) == 0x0006D8, "Member 'AStorePinataMaster_BP_C::Sound_Open_Gold' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_Greet_Current) == 0x0006DC, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_Greet_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_OpenNormal_Current) == 0x0006E0, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_OpenNormal_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_UpgradeSilver_Current) == 0x0006E4, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_UpgradeSilver_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_UpgradeGold_Current) == 0x0006E8, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_UpgradeGold_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_OpenSilver_Current) == 0x0006EC, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_OpenSilver_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_OpenGold_Current) == 0x0006F0, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_OpenGold_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_Hover_Current) == 0x0006F4, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_Hover_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_Tickle_Current) == 0x0006F8, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_Tickle_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_Depressed_Greet_Array) == 0x0006FC, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_Depressed_Greet_Array' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_CardFlyAtPlayer) == 0x000708, "Member 'AStorePinataMaster_BP_C::Sound_CardFlyAtPlayer' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_CardPutAway) == 0x00070C, "Member 'AStorePinataMaster_BP_C::Sound_CardPutAway' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Store_Card_Summary) == 0x000710, "Member 'AStorePinataMaster_BP_C::Sound_Store_Card_Summary' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Store_CardUpgrade_Blue) == 0x000714, "Member 'AStorePinataMaster_BP_C::Sound_Store_CardUpgrade_Blue' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Store_CardUpgrade_Green) == 0x000718, "Member 'AStorePinataMaster_BP_C::Sound_Store_CardUpgrade_Green' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Store_CardUpgrade_Purple) == 0x00071C, "Member 'AStorePinataMaster_BP_C::Sound_Store_CardUpgrade_Purple' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Store_CardUpgrade_Gold) == 0x000720, "Member 'AStorePinataMaster_BP_C::Sound_Store_CardUpgrade_Gold' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Store_CardUpgrade_Platinum) == 0x000724, "Member 'AStorePinataMaster_BP_C::Sound_Store_CardUpgrade_Platinum' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_SweepUp) == 0x000728, "Member 'AStorePinataMaster_BP_C::Sound_SweepUp' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_Mob_Greet_Array) == 0x00072C, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_Mob_Greet_Array' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_Greet_Array_Current) == 0x000738, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_Greet_Array_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_PinataSwing) == 0x000744, "Member 'AStorePinataMaster_BP_C::Sound_PinataSwing' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, VO_Delay) == 0x000748, "Member 'AStorePinataMaster_BP_C::VO_Delay' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Fort_Entry_Music_Controller) == 0x00074C, "Member 'AStorePinataMaster_BP_C::Fort_Entry_Music_Controller' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, KillHover) == 0x000750, "Member 'AStorePinataMaster_BP_C::KillHover' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Dialog_Llama_PreHit_Current) == 0x000754, "Member 'AStorePinataMaster_BP_C::Dialog_Llama_PreHit_Current' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Music_Drop) == 0x000758, "Member 'AStorePinataMaster_BP_C::Sound_Music_Drop' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Sound_Music_Open) == 0x00075C, "Member 'AStorePinataMaster_BP_C::Sound_Music_Open' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GreetGenericSound) == 0x000760, "Member 'AStorePinataMaster_BP_C::GreetGenericSound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GreetSledgehammerSound) == 0x000764, "Member 'AStorePinataMaster_BP_C::GreetSledgehammerSound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GreetBaseballBat_Sound) == 0x000768, "Member 'AStorePinataMaster_BP_C::GreetBaseballBat_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GreetAxeSound) == 0x00076C, "Member 'AStorePinataMaster_BP_C::GreetAxeSound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, HockeyStickGreet_Sound) == 0x000770, "Member 'AStorePinataMaster_BP_C::HockeyStickGreet_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Garden_Rake_Greet_Sound) == 0x000774, "Member 'AStorePinataMaster_BP_C::Garden_Rake_Greet_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Greet_Garden_Hoe_Sound) == 0x000778, "Member 'AStorePinataMaster_BP_C::Greet_Garden_Hoe_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Greet_Scythe_Sound) == 0x00077C, "Member 'AStorePinataMaster_BP_C::Greet_Scythe_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, GreetPickaxe_Sound) == 0x000780, "Member 'AStorePinataMaster_BP_C::GreetPickaxe_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Greet_Pitchfork_Sound) == 0x000784, "Member 'AStorePinataMaster_BP_C::Greet_Pitchfork_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, Greet_Sword_Sound) == 0x000788, "Member 'AStorePinataMaster_BP_C::Greet_Sword_Sound' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, MID_CardGlow) == 0x00078C, "Member 'AStorePinataMaster_BP_C::MID_CardGlow' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TimeHeldDown) == 0x000790, "Member 'AStorePinataMaster_BP_C::TimeHeldDown' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WorldLocationForEye) == 0x000794, "Member 'AStorePinataMaster_BP_C::WorldLocationForEye' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponObject) == 0x0007A0, "Member 'AStorePinataMaster_BP_C::WeaponObject' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, CurrentWeaponAsset) == 0x0007A4, "Member 'AStorePinataMaster_BP_C::CurrentWeaponAsset' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponListOffsetLoc) == 0x0007A8, "Member 'AStorePinataMaster_BP_C::WeaponListOffsetLoc' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponListOffsetRot) == 0x0007B4, "Member 'AStorePinataMaster_BP_C::WeaponListOffsetRot' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponListOffsetScale) == 0x0007C0, "Member 'AStorePinataMaster_BP_C::WeaponListOffsetScale' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, UseableWeapons) == 0x0007CC, "Member 'AStorePinataMaster_BP_C::UseableWeapons' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, SpawnedWeaponBlueprint) == 0x0007D8, "Member 'AStorePinataMaster_BP_C::SpawnedWeaponBlueprint' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, StoreCameraActor) == 0x0007DC, "Member 'AStorePinataMaster_BP_C::StoreCameraActor' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, StoreCameraInLevel) == 0x0007E0, "Member 'AStorePinataMaster_BP_C::StoreCameraInLevel' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, TEST44444) == 0x0007E4, "Member 'AStorePinataMaster_BP_C::TEST44444' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, WeaponClass) == 0x0007FC, "Member 'AStorePinataMaster_BP_C::WeaponClass' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, LoadAssetWeaponClass) == 0x000800, "Member 'AStorePinataMaster_BP_C::LoadAssetWeaponClass' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, AttackLeftMousePressed) == 0x000804, "Member 'AStorePinataMaster_BP_C::AttackLeftMousePressed' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, StoreCardRevealInLevel) == 0x000808, "Member 'AStorePinataMaster_BP_C::StoreCardRevealInLevel' has a wrong offset!");
static_assert(offsetof(AStorePinataMaster_BP_C, AmountOfWeapons) == 0x00080C, "Member 'AStorePinataMaster_BP_C::AmountOfWeapons' has a wrong offset!");

}

#pragma pack(pop)
