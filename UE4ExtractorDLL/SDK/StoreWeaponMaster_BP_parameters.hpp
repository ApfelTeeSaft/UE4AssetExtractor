#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StoreWeaponMaster_BP

#include "Basic.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function StoreWeaponMaster_BP.StoreWeaponMaster_BP_C.ExecuteUbergraph_StoreWeaponMaster_BP
// 0x001C (0x001C - 0x0000)
struct StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_AssetToObject_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP) == 0x000004, "Wrong alignment on StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP");
static_assert(sizeof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP) == 0x00001C, "Wrong size on StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, EntryPoint) == 0x000000, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, CallFunc_Conv_AssetToObject_ReturnValue) == 0x00000C, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::CallFunc_Conv_AssetToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000014, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'StoreWeaponMaster_BP_C_ExecuteUbergraph_StoreWeaponMaster_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function StoreWeaponMaster_BP.StoreWeaponMaster_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct StoreWeaponMaster_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StoreWeaponMaster_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on StoreWeaponMaster_BP_C_ReceiveTick");
static_assert(sizeof(StoreWeaponMaster_BP_C_ReceiveTick) == 0x000004, "Wrong size on StoreWeaponMaster_BP_C_ReceiveTick");
static_assert(offsetof(StoreWeaponMaster_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'StoreWeaponMaster_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

#pragma pack(pop)
