#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StyleLibrary

#include "Basic.hpp"

#include "StyleLibrary_classes.hpp"
#include "StyleLibrary_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function StyleLibrary.StyleLibrary_C.Get Theme Color
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// EFortUITheme                            Theme_Type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EFortUIThemeColor                       Color_Type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor*                    Theme_Color                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStyleLibrary_C::Get_Theme_Color(const struct FFortUIStylesheet& Stylesheet, EFortUITheme Theme_Type, EFortUIThemeColor Color_Type, class UObject* __WorldContext, struct FLinearColor* Theme_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Theme Color");

	Params::StyleLibrary_C_Get_Theme_Color Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.Theme_Type = Theme_Type;
	Parms.Color_Type = Color_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Theme_Color != nullptr)
		*Theme_Color = std::move(Parms.Theme_Color);
}


// Function StyleLibrary.StyleLibrary_C.Get Theme
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// EFortUITheme                            Theme_Type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFortUITheme*                    Theme                                                  (Parm, OutParm)

void UStyleLibrary_C::Get_Theme(const struct FFortUIStylesheet& Stylesheet, EFortUITheme Theme_Type, class UObject* __WorldContext, struct FFortUITheme* Theme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Theme");

	Params::StyleLibrary_C_Get_Theme Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.Theme_Type = Theme_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Theme != nullptr)
		*Theme = std::move(Parms.Theme);
}


// Function StyleLibrary.StyleLibrary_C.Get Standard Icon Size
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// EFortBrushSize                          Brush_Size                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D*                       Icon_Size                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStyleLibrary_C::Get_Standard_Icon_Size(const struct FFortUIStylesheet& Stylesheet, EFortBrushSize Brush_Size, class UObject* __WorldContext, struct FVector2D* Icon_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Standard Icon Size");

	Params::StyleLibrary_C_Get_Standard_Icon_Size Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.Brush_Size = Brush_Size;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon_Size != nullptr)
		*Icon_Size = std::move(Parms.Icon_Size);
}


// Function StyleLibrary.StyleLibrary_C.Get Item Icon Size
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// EFortBrushSize                          Brush_Size                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D*                       Icon_Size                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStyleLibrary_C::Get_Item_Icon_Size(const struct FFortUIStylesheet& Stylesheet, EFortBrushSize Brush_Size, class UObject* __WorldContext, struct FVector2D* Icon_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Item Icon Size");

	Params::StyleLibrary_C_Get_Item_Icon_Size Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.Brush_Size = Brush_Size;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon_Size != nullptr)
		*Icon_Size = std::move(Parms.Icon_Size);
}


// Function StyleLibrary.StyleLibrary_C.Get Additive Color
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStyleLibrary_C::Get_Additive_Color(const struct FFortUIStylesheet& Stylesheet, class UObject* __WorldContext, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Additive Color");

	Params::StyleLibrary_C_Get_Additive_Color Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function StyleLibrary.StyleLibrary_C.Get Negative Color
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStyleLibrary_C::Get_Negative_Color(const struct FFortUIStylesheet& Stylesheet, class UObject* __WorldContext, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Negative Color");

	Params::StyleLibrary_C_Get_Negative_Color Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function StyleLibrary.StyleLibrary_C.Get Item Size
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFortUIStylesheet&         Stylesheet                                             (Parm)
// EFortBrushSize                          Brush_Size                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D*                       Item_Size                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStyleLibrary_C::Get_Item_Size(const struct FFortUIStylesheet& Stylesheet, EFortBrushSize Brush_Size, class UObject* __WorldContext, struct FVector2D* Item_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StyleLibrary_C", "Get Item Size");

	Params::StyleLibrary_C_Get_Item_Size Parms{};

	Parms.Stylesheet = std::move(Stylesheet);
	Parms.Brush_Size = Brush_Size;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Item_Size != nullptr)
		*Item_Size = std::move(Parms.Item_Size);
}

}

#pragma pack(pop)
