#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StyleLibrary

#include "Basic.hpp"

#include "EFortUIThemeColor_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortUIStylesheet_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EFortUITheme_structs.hpp"
#include "FortUITheme_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function StyleLibrary.StyleLibrary_C.Get Theme Color
// 0x09F4 (0x09F4 - 0x0000)
struct StyleLibrary_C_Get_Theme_Color final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	EFortUITheme                                  Theme_Type;                                        // 0x0968(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortUIThemeColor                             Color_Type;                                        // 0x0969(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96A[0x2];                                      // 0x096A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x096C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Theme_Color;                                       // 0x0970(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortUIThemeColor                             Temp_byte_Variable;                                // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_981[0x3];                                      // 0x0981(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortUITheme                           CallFunc_Get_Theme_Theme;                          // 0x0984(0x0060)()
	struct FLinearColor                           K2Node_Select_Default;                             // 0x09E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StyleLibrary_C_Get_Theme_Color) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Theme_Color");
static_assert(sizeof(StyleLibrary_C_Get_Theme_Color) == 0x0009F4, "Wrong size on StyleLibrary_C_Get_Theme_Color");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Theme_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, Theme_Type) == 0x000968, "Member 'StyleLibrary_C_Get_Theme_Color::Theme_Type' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, Color_Type) == 0x000969, "Member 'StyleLibrary_C_Get_Theme_Color::Color_Type' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, __WorldContext) == 0x00096C, "Member 'StyleLibrary_C_Get_Theme_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, Theme_Color) == 0x000970, "Member 'StyleLibrary_C_Get_Theme_Color::Theme_Color' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, Temp_byte_Variable) == 0x000980, "Member 'StyleLibrary_C_Get_Theme_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, CallFunc_Get_Theme_Theme) == 0x000984, "Member 'StyleLibrary_C_Get_Theme_Color::CallFunc_Get_Theme_Theme' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme_Color, K2Node_Select_Default) == 0x0009E4, "Member 'StyleLibrary_C_Get_Theme_Color::K2Node_Select_Default' has a wrong offset!");

// Function StyleLibrary.StyleLibrary_C.Get Theme
// 0x0A34 (0x0A34 - 0x0000)
struct StyleLibrary_C_Get_Theme final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	EFortUITheme                                  Theme_Type;                                        // 0x0968(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_969[0x3];                                      // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x096C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortUITheme                           Theme;                                             // 0x0970(0x0060)(Parm, OutParm)
	EFortUITheme                                  Temp_byte_Variable;                                // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D1[0x3];                                      // 0x09D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortUITheme                           K2Node_Select_Default;                             // 0x09D4(0x0060)()
};
static_assert(alignof(StyleLibrary_C_Get_Theme) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Theme");
static_assert(sizeof(StyleLibrary_C_Get_Theme) == 0x000A34, "Wrong size on StyleLibrary_C_Get_Theme");
static_assert(offsetof(StyleLibrary_C_Get_Theme, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Theme::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme, Theme_Type) == 0x000968, "Member 'StyleLibrary_C_Get_Theme::Theme_Type' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme, __WorldContext) == 0x00096C, "Member 'StyleLibrary_C_Get_Theme::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme, Theme) == 0x000970, "Member 'StyleLibrary_C_Get_Theme::Theme' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme, Temp_byte_Variable) == 0x0009D0, "Member 'StyleLibrary_C_Get_Theme::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Theme, K2Node_Select_Default) == 0x0009D4, "Member 'StyleLibrary_C_Get_Theme::K2Node_Select_Default' has a wrong offset!");

// Function StyleLibrary.StyleLibrary_C.Get Standard Icon Size
// 0x09EC (0x09EC - 0x0000)
struct StyleLibrary_C_Get_Standard_Icon_Size final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	EFortBrushSize                                Brush_Size;                                        // 0x0968(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_969[0x3];                                      // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x096C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Icon_Size;                                         // 0x0970(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue; // 0x0978(0x0074)(ConstParm)
};
static_assert(alignof(StyleLibrary_C_Get_Standard_Icon_Size) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Standard_Icon_Size");
static_assert(sizeof(StyleLibrary_C_Get_Standard_Icon_Size) == 0x0009EC, "Wrong size on StyleLibrary_C_Get_Standard_Icon_Size");
static_assert(offsetof(StyleLibrary_C_Get_Standard_Icon_Size, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Standard_Icon_Size::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Standard_Icon_Size, Brush_Size) == 0x000968, "Member 'StyleLibrary_C_Get_Standard_Icon_Size::Brush_Size' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Standard_Icon_Size, __WorldContext) == 0x00096C, "Member 'StyleLibrary_C_Get_Standard_Icon_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Standard_Icon_Size, Icon_Size) == 0x000970, "Member 'StyleLibrary_C_Get_Standard_Icon_Size::Icon_Size' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Standard_Icon_Size, CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue) == 0x000978, "Member 'StyleLibrary_C_Get_Standard_Icon_Size::CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue' has a wrong offset!");

// Function StyleLibrary.StyleLibrary_C.Get Item Icon Size
// 0x09EC (0x09EC - 0x0000)
struct StyleLibrary_C_Get_Item_Icon_Size final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	EFortBrushSize                                Brush_Size;                                        // 0x0968(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_969[0x3];                                      // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x096C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Icon_Size;                                         // 0x0970(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue; // 0x0978(0x0074)(ConstParm)
};
static_assert(alignof(StyleLibrary_C_Get_Item_Icon_Size) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Item_Icon_Size");
static_assert(sizeof(StyleLibrary_C_Get_Item_Icon_Size) == 0x0009EC, "Wrong size on StyleLibrary_C_Get_Item_Icon_Size");
static_assert(offsetof(StyleLibrary_C_Get_Item_Icon_Size, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Item_Icon_Size::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Icon_Size, Brush_Size) == 0x000968, "Member 'StyleLibrary_C_Get_Item_Icon_Size::Brush_Size' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Icon_Size, __WorldContext) == 0x00096C, "Member 'StyleLibrary_C_Get_Item_Icon_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Icon_Size, Icon_Size) == 0x000970, "Member 'StyleLibrary_C_Get_Item_Icon_Size::Icon_Size' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Icon_Size, CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue) == 0x000978, "Member 'StyleLibrary_C_Get_Item_Icon_Size::CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue' has a wrong offset!");

// Function StyleLibrary.StyleLibrary_C.Get Additive Color
// 0x097C (0x097C - 0x0000)
struct StyleLibrary_C_Get_Additive_Color final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	class UObject*                                __WorldContext;                                    // 0x0968(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Color;                                             // 0x096C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StyleLibrary_C_Get_Additive_Color) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Additive_Color");
static_assert(sizeof(StyleLibrary_C_Get_Additive_Color) == 0x00097C, "Wrong size on StyleLibrary_C_Get_Additive_Color");
static_assert(offsetof(StyleLibrary_C_Get_Additive_Color, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Additive_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Additive_Color, __WorldContext) == 0x000968, "Member 'StyleLibrary_C_Get_Additive_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Additive_Color, Color) == 0x00096C, "Member 'StyleLibrary_C_Get_Additive_Color::Color' has a wrong offset!");

// Function StyleLibrary.StyleLibrary_C.Get Negative Color
// 0x097C (0x097C - 0x0000)
struct StyleLibrary_C_Get_Negative_Color final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	class UObject*                                __WorldContext;                                    // 0x0968(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Color;                                             // 0x096C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StyleLibrary_C_Get_Negative_Color) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Negative_Color");
static_assert(sizeof(StyleLibrary_C_Get_Negative_Color) == 0x00097C, "Wrong size on StyleLibrary_C_Get_Negative_Color");
static_assert(offsetof(StyleLibrary_C_Get_Negative_Color, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Negative_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Negative_Color, __WorldContext) == 0x000968, "Member 'StyleLibrary_C_Get_Negative_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Negative_Color, Color) == 0x00096C, "Member 'StyleLibrary_C_Get_Negative_Color::Color' has a wrong offset!");

// Function StyleLibrary.StyleLibrary_C.Get Item Size
// 0x09EC (0x09EC - 0x0000)
struct StyleLibrary_C_Get_Item_Size final
{
public:
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0000(0x0968)(Parm)
	EFortBrushSize                                Brush_Size;                                        // 0x0968(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_969[0x3];                                      // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x096C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Item_Size;                                         // 0x0970(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue; // 0x0978(0x0074)(ConstParm)
};
static_assert(alignof(StyleLibrary_C_Get_Item_Size) == 0x000004, "Wrong alignment on StyleLibrary_C_Get_Item_Size");
static_assert(sizeof(StyleLibrary_C_Get_Item_Size) == 0x0009EC, "Wrong size on StyleLibrary_C_Get_Item_Size");
static_assert(offsetof(StyleLibrary_C_Get_Item_Size, Stylesheet) == 0x000000, "Member 'StyleLibrary_C_Get_Item_Size::Stylesheet' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Size, Brush_Size) == 0x000968, "Member 'StyleLibrary_C_Get_Item_Size::Brush_Size' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Size, __WorldContext) == 0x00096C, "Member 'StyleLibrary_C_Get_Item_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Size, Item_Size) == 0x000970, "Member 'StyleLibrary_C_Get_Item_Size::Item_Size' has a wrong offset!");
static_assert(offsetof(StyleLibrary_C_Get_Item_Size, CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue) == 0x000978, "Member 'StyleLibrary_C_Get_Item_Size::CallFunc_GetBrushBySizeFromMultiSizeBrush_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
