#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheaterCamera_Blueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass TheaterCamera_Blueprint.TheaterCamera_Blueprint_C
// 0x00D8 (0x06E0 - 0x0608)
class ATheaterCamera_Blueprint_C final : public AFortTheaterCamera
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class USkyLightComponent*                     SkyLight;                                          // 0x060C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UArrowComponent*                        Arrow;                                             // 0x0610(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x0614(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        SceneLightsRoot;                                   // 0x0618(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   MeshMonitorScreenShadow;                           // 0x061C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   MeshMonitorScreen;                                 // 0x0620(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   MeshMonitorFrame;                                  // 0x0624(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UTextRenderComponent*                   TextMISSION;                                       // 0x0628(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UTextRenderComponent*                   Thirdtext;                                         // 0x062C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UTextRenderComponent*                   Secondtext;                                        // 0x0630(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UTextRenderComponent*                   Maintext;                                          // 0x0634(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         FocusTimeline_Float_Curve_ADC98EA5D14E24EC78DD4F80C5102578; // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            FocusTimeline__Direction_ADC98EA5D14E24EC78DD4F80C5102578; // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FocusTimeline;                                     // 0x0640(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MouseDown;                                         // 0x0644(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645[0xB];                                      // 0x0645(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InitialPosition;                                   // 0x0650(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LerpPos;                                           // 0x0680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ADayPhaseLightingAndFog_C*              WorldLighting;                                     // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         WorldLocSnapSize;                                  // 0x0688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AWriteOutTextToTheScreen_C*             Write_Text_Out_To_Screen_BP;                       // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CameraDefaultLoc;                                  // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CameraLerp;                                        // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ZoomAmountPerMouseWheelUnit;                       // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MinCameraHeight;                                   // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxCameraHeight;                                   // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PauseMouseInput;                                   // 0x06A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A5[0x3];                                      // 0x06A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Hex_Outpost_C*                      Outpost;                                           // 0x06A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                OutpostWorldLoc;                                   // 0x06AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CameraOffsetX;                                     // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CameraOffsetY;                                     // 0x06BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InitialTheaterCameraDelay;                         // 0x06C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x3];                                      // 0x06C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraMovementSpeed;                               // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                NewLoc;                                            // 0x06C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFortTheaterMapTile*                    TargetTile;                                        // 0x06D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnteringTheater;                                 // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TheaterCamera_Blueprint(int32 EntryPoint);
	void SetEnteringTheaterZoom();
	void OnDragEnd();
	void OnDragBegin();
	void ReceiveTick(float DeltaSeconds);
	void SetTileFocus(class AFortTheaterMapTile* TargetTile_0);
	void OnDeactivated();
	void OnActivated();
	void InpActEvt_MouseScrollDown_UniqueObjectNameForCooking_10(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_UniqueObjectNameForCooking_11(const struct FKey& Key);
	void FocusTimeline__UpdateFunc();
	void FocusTimeline__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TheaterCamera_Blueprint_C">();
	}
	static class ATheaterCamera_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATheaterCamera_Blueprint_C>();
	}
};
static_assert(alignof(ATheaterCamera_Blueprint_C) == 0x000010, "Wrong alignment on ATheaterCamera_Blueprint_C");
static_assert(sizeof(ATheaterCamera_Blueprint_C) == 0x0006E0, "Wrong size on ATheaterCamera_Blueprint_C");
static_assert(offsetof(ATheaterCamera_Blueprint_C, UberGraphFrame) == 0x000608, "Member 'ATheaterCamera_Blueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, SkyLight) == 0x00060C, "Member 'ATheaterCamera_Blueprint_C::SkyLight' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, Arrow) == 0x000610, "Member 'ATheaterCamera_Blueprint_C::Arrow' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DirectionalLight) == 0x000614, "Member 'ATheaterCamera_Blueprint_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, SceneLightsRoot) == 0x000618, "Member 'ATheaterCamera_Blueprint_C::SceneLightsRoot' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MeshMonitorScreenShadow) == 0x00061C, "Member 'ATheaterCamera_Blueprint_C::MeshMonitorScreenShadow' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MeshMonitorScreen) == 0x000620, "Member 'ATheaterCamera_Blueprint_C::MeshMonitorScreen' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MeshMonitorFrame) == 0x000624, "Member 'ATheaterCamera_Blueprint_C::MeshMonitorFrame' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TextMISSION) == 0x000628, "Member 'ATheaterCamera_Blueprint_C::TextMISSION' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, Thirdtext) == 0x00062C, "Member 'ATheaterCamera_Blueprint_C::Thirdtext' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, Secondtext) == 0x000630, "Member 'ATheaterCamera_Blueprint_C::Secondtext' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, Maintext) == 0x000634, "Member 'ATheaterCamera_Blueprint_C::Maintext' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusTimeline_Float_Curve_ADC98EA5D14E24EC78DD4F80C5102578) == 0x000638, "Member 'ATheaterCamera_Blueprint_C::FocusTimeline_Float_Curve_ADC98EA5D14E24EC78DD4F80C5102578' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusTimeline__Direction_ADC98EA5D14E24EC78DD4F80C5102578) == 0x00063C, "Member 'ATheaterCamera_Blueprint_C::FocusTimeline__Direction_ADC98EA5D14E24EC78DD4F80C5102578' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusTimeline) == 0x000640, "Member 'ATheaterCamera_Blueprint_C::FocusTimeline' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MouseDown) == 0x000644, "Member 'ATheaterCamera_Blueprint_C::MouseDown' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, InitialPosition) == 0x000650, "Member 'ATheaterCamera_Blueprint_C::InitialPosition' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, LerpPos) == 0x000680, "Member 'ATheaterCamera_Blueprint_C::LerpPos' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, WorldLighting) == 0x000684, "Member 'ATheaterCamera_Blueprint_C::WorldLighting' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, WorldLocSnapSize) == 0x000688, "Member 'ATheaterCamera_Blueprint_C::WorldLocSnapSize' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, Write_Text_Out_To_Screen_BP) == 0x00068C, "Member 'ATheaterCamera_Blueprint_C::Write_Text_Out_To_Screen_BP' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraDefaultLoc) == 0x000690, "Member 'ATheaterCamera_Blueprint_C::CameraDefaultLoc' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraLerp) == 0x000694, "Member 'ATheaterCamera_Blueprint_C::CameraLerp' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, ZoomAmountPerMouseWheelUnit) == 0x000698, "Member 'ATheaterCamera_Blueprint_C::ZoomAmountPerMouseWheelUnit' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MinCameraHeight) == 0x00069C, "Member 'ATheaterCamera_Blueprint_C::MinCameraHeight' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MaxCameraHeight) == 0x0006A0, "Member 'ATheaterCamera_Blueprint_C::MaxCameraHeight' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, PauseMouseInput) == 0x0006A4, "Member 'ATheaterCamera_Blueprint_C::PauseMouseInput' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, Outpost) == 0x0006A8, "Member 'ATheaterCamera_Blueprint_C::Outpost' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, OutpostWorldLoc) == 0x0006AC, "Member 'ATheaterCamera_Blueprint_C::OutpostWorldLoc' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraOffsetX) == 0x0006B8, "Member 'ATheaterCamera_Blueprint_C::CameraOffsetX' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraOffsetY) == 0x0006BC, "Member 'ATheaterCamera_Blueprint_C::CameraOffsetY' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, InitialTheaterCameraDelay) == 0x0006C0, "Member 'ATheaterCamera_Blueprint_C::InitialTheaterCameraDelay' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraMovementSpeed) == 0x0006C4, "Member 'ATheaterCamera_Blueprint_C::CameraMovementSpeed' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, NewLoc) == 0x0006C8, "Member 'ATheaterCamera_Blueprint_C::NewLoc' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TargetTile) == 0x0006D4, "Member 'ATheaterCamera_Blueprint_C::TargetTile' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, IsEnteringTheater) == 0x0006D8, "Member 'ATheaterCamera_Blueprint_C::IsEnteringTheater' has a wrong offset!");

}

#pragma pack(pop)
