#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheaterTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass TheaterTooltip.TheaterTooltip_C
// 0x0018 (0x025C - 0x0244)
class UTheaterTooltip_C final : public UFortUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0244(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EnterAnimation;                                    // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             Info;                                              // 0x024C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             PassengerInfo;                                     // 0x0250(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             Title_Text;                                        // 0x0254(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	int32                                         TheaterIndex;                                      // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TheaterTooltip(int32 EntryPoint);
	void HandleLocalPlayerStateChange(const struct FFortTeamMemberInfo& PlayerInfo);
	void Construct();
	void Set_Theater_Index(int32 INDEX);
	void Set_Visibile(bool Visibile, const class FText& InfoText);
	class FText Get_Theater_Name();
	class FText Get_Theater_Difficulty();
	class FText Get_Region_Count();
	void SetPassengetInfoVisible(bool INDEX);
	class FText Get_Theater_Info();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TheaterTooltip_C">();
	}
	static class UTheaterTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTheaterTooltip_C>();
	}
};
static_assert(alignof(UTheaterTooltip_C) == 0x000004, "Wrong alignment on UTheaterTooltip_C");
static_assert(sizeof(UTheaterTooltip_C) == 0x00025C, "Wrong size on UTheaterTooltip_C");
static_assert(offsetof(UTheaterTooltip_C, UberGraphFrame) == 0x000244, "Member 'UTheaterTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTheaterTooltip_C, EnterAnimation) == 0x000248, "Member 'UTheaterTooltip_C::EnterAnimation' has a wrong offset!");
static_assert(offsetof(UTheaterTooltip_C, Info) == 0x00024C, "Member 'UTheaterTooltip_C::Info' has a wrong offset!");
static_assert(offsetof(UTheaterTooltip_C, PassengerInfo) == 0x000250, "Member 'UTheaterTooltip_C::PassengerInfo' has a wrong offset!");
static_assert(offsetof(UTheaterTooltip_C, Title_Text) == 0x000254, "Member 'UTheaterTooltip_C::Title_Text' has a wrong offset!");
static_assert(offsetof(UTheaterTooltip_C, TheaterIndex) == 0x000258, "Member 'UTheaterTooltip_C::TheaterIndex' has a wrong offset!");

}

#pragma pack(pop)
