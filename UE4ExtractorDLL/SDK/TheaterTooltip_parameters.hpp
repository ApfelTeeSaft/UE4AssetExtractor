#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheaterTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function TheaterTooltip.TheaterTooltip_C.ExecuteUbergraph_TheaterTooltip
// 0x0208 (0x0208 - 0x0000)
struct TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortTeamMemberInfo                    K2Node_CustomEvent_PlayerInfo;                     // 0x0004(0x01E8)(ConstParm)
	TDelegate<void(const struct FFortTeamMemberInfo& PlayerInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPartyContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerPartyLeader_ReturnValue;     // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip) == 0x000004, "Wrong alignment on TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip");
static_assert(sizeof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip) == 0x000208, "Wrong size on TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, EntryPoint) == 0x000000, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, K2Node_CustomEvent_PlayerInfo) == 0x000004, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::K2Node_CustomEvent_PlayerInfo' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, K2Node_CreateDelegate_OutputDelegate) == 0x0001EC, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, CallFunc_Not_PreBool_ReturnValue) == 0x0001FC, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, CallFunc_GetContext_ReturnValue) == 0x000200, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, CallFunc_IsLocalPlayerPartyLeader_ReturnValue) == 0x000204, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::CallFunc_IsLocalPlayerPartyLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip, CallFunc_Not_PreBool_ReturnValue2) == 0x000205, "Member 'TheaterTooltip_C_ExecuteUbergraph_TheaterTooltip::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.HandleLocalPlayerStateChange
// 0x01E8 (0x01E8 - 0x0000)
struct TheaterTooltip_C_HandleLocalPlayerStateChange final
{
public:
	struct FFortTeamMemberInfo                    PlayerInfo;                                        // 0x0000(0x01E8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(TheaterTooltip_C_HandleLocalPlayerStateChange) == 0x000004, "Wrong alignment on TheaterTooltip_C_HandleLocalPlayerStateChange");
static_assert(sizeof(TheaterTooltip_C_HandleLocalPlayerStateChange) == 0x0001E8, "Wrong size on TheaterTooltip_C_HandleLocalPlayerStateChange");
static_assert(offsetof(TheaterTooltip_C_HandleLocalPlayerStateChange, PlayerInfo) == 0x000000, "Member 'TheaterTooltip_C_HandleLocalPlayerStateChange::PlayerInfo' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.Set Theater Index
// 0x0004 (0x0004 - 0x0000)
struct TheaterTooltip_C_Set_Theater_Index final
{
public:
	int32                                         INDEX;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheaterTooltip_C_Set_Theater_Index) == 0x000004, "Wrong alignment on TheaterTooltip_C_Set_Theater_Index");
static_assert(sizeof(TheaterTooltip_C_Set_Theater_Index) == 0x000004, "Wrong size on TheaterTooltip_C_Set_Theater_Index");
static_assert(offsetof(TheaterTooltip_C_Set_Theater_Index, INDEX) == 0x000000, "Member 'TheaterTooltip_C_Set_Theater_Index::INDEX' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.Set Visibile
// 0x0014 (0x0014 - 0x0000)
struct TheaterTooltip_C_Set_Visibile final
{
public:
	bool                                          Visibile;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InfoText;                                          // 0x0004(0x000C)(Parm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheaterTooltip_C_Set_Visibile) == 0x000004, "Wrong alignment on TheaterTooltip_C_Set_Visibile");
static_assert(sizeof(TheaterTooltip_C_Set_Visibile) == 0x000014, "Wrong size on TheaterTooltip_C_Set_Visibile");
static_assert(offsetof(TheaterTooltip_C_Set_Visibile, Visibile) == 0x000000, "Member 'TheaterTooltip_C_Set_Visibile::Visibile' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Set_Visibile, InfoText) == 0x000004, "Member 'TheaterTooltip_C_Set_Visibile::InfoText' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Set_Visibile, CallFunc_TextIsEmpty_ReturnValue) == 0x000010, "Member 'TheaterTooltip_C_Set_Visibile::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Set_Visibile, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'TheaterTooltip_C_Set_Visibile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.Get Theater Name
// 0x001C (0x001C - 0x0000)
struct TheaterTooltip_C_Get_Theater_Name final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetTheaterName_ReturnValue;               // 0x0010(0x000C)()
};
static_assert(alignof(TheaterTooltip_C_Get_Theater_Name) == 0x000004, "Wrong alignment on TheaterTooltip_C_Get_Theater_Name");
static_assert(sizeof(TheaterTooltip_C_Get_Theater_Name) == 0x00001C, "Wrong size on TheaterTooltip_C_Get_Theater_Name");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Name, ReturnValue) == 0x000000, "Member 'TheaterTooltip_C_Get_Theater_Name::ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Name, CallFunc_GetContext_ReturnValue) == 0x00000C, "Member 'TheaterTooltip_C_Get_Theater_Name::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Name, CallFunc_GetTheaterName_ReturnValue) == 0x000010, "Member 'TheaterTooltip_C_Get_Theater_Name::CallFunc_GetTheaterName_ReturnValue' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.Get Theater Difficulty
// 0x001C (0x001C - 0x0000)
struct TheaterTooltip_C_Get_Theater_Difficulty final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetTheaterDifficultyText_ReturnValue;     // 0x0010(0x000C)()
};
static_assert(alignof(TheaterTooltip_C_Get_Theater_Difficulty) == 0x000004, "Wrong alignment on TheaterTooltip_C_Get_Theater_Difficulty");
static_assert(sizeof(TheaterTooltip_C_Get_Theater_Difficulty) == 0x00001C, "Wrong size on TheaterTooltip_C_Get_Theater_Difficulty");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Difficulty, ReturnValue) == 0x000000, "Member 'TheaterTooltip_C_Get_Theater_Difficulty::ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Difficulty, CallFunc_GetContext_ReturnValue) == 0x00000C, "Member 'TheaterTooltip_C_Get_Theater_Difficulty::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Difficulty, CallFunc_GetTheaterDifficultyText_ReturnValue) == 0x000010, "Member 'TheaterTooltip_C_Get_Theater_Difficulty::CallFunc_GetTheaterDifficultyText_ReturnValue' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.Get Region Count
// 0x0050 (0x0050 - 0x0000)
struct TheaterTooltip_C_Get_Region_Count final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTheaterRegionCount_ReturnValue;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0014(0x000C)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0038(0x000C)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0044(0x000C)()
};
static_assert(alignof(TheaterTooltip_C_Get_Region_Count) == 0x000004, "Wrong alignment on TheaterTooltip_C_Get_Region_Count");
static_assert(sizeof(TheaterTooltip_C_Get_Region_Count) == 0x000050, "Wrong size on TheaterTooltip_C_Get_Region_Count");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, ReturnValue) == 0x000000, "Member 'TheaterTooltip_C_Get_Region_Count::ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, CallFunc_GetContext_ReturnValue) == 0x00000C, "Member 'TheaterTooltip_C_Get_Region_Count::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, CallFunc_GetTheaterRegionCount_ReturnValue) == 0x000010, "Member 'TheaterTooltip_C_Get_Region_Count::CallFunc_GetTheaterRegionCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, CallFunc_Conv_IntToText_ReturnValue) == 0x000014, "Member 'TheaterTooltip_C_Get_Region_Count::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'TheaterTooltip_C_Get_Region_Count::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, K2Node_MakeArray_Array) == 0x000038, "Member 'TheaterTooltip_C_Get_Region_Count::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Region_Count, CallFunc_Format_ReturnValue) == 0x000044, "Member 'TheaterTooltip_C_Get_Region_Count::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.SetPassengetInfoVisible
// 0x0005 (0x0005 - 0x0000)
struct TheaterTooltip_C_SetPassengetInfoVisible final
{
public:
	bool                                          INDEX;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheaterTooltip_C_SetPassengetInfoVisible) == 0x000001, "Wrong alignment on TheaterTooltip_C_SetPassengetInfoVisible");
static_assert(sizeof(TheaterTooltip_C_SetPassengetInfoVisible) == 0x000005, "Wrong size on TheaterTooltip_C_SetPassengetInfoVisible");
static_assert(offsetof(TheaterTooltip_C_SetPassengetInfoVisible, INDEX) == 0x000000, "Member 'TheaterTooltip_C_SetPassengetInfoVisible::INDEX' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_SetPassengetInfoVisible, Temp_bool_Variable) == 0x000001, "Member 'TheaterTooltip_C_SetPassengetInfoVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_SetPassengetInfoVisible, Temp_byte_Variable) == 0x000002, "Member 'TheaterTooltip_C_SetPassengetInfoVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_SetPassengetInfoVisible, Temp_byte_Variable2) == 0x000003, "Member 'TheaterTooltip_C_SetPassengetInfoVisible::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_SetPassengetInfoVisible, K2Node_Select_Default) == 0x000004, "Member 'TheaterTooltip_C_SetPassengetInfoVisible::K2Node_Select_Default' has a wrong offset!");

// Function TheaterTooltip.TheaterTooltip_C.Get Theater Info
// 0x00E4 (0x00E4 - 0x0000)
struct TheaterTooltip_C_Get_Theater_Info final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortTheaterMapData                    CallFunc_GetTheaterData_OutTheaterData;            // 0x0010(0x00D0)()
	bool                                          CallFunc_GetTheaterData_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheaterTooltip_C_Get_Theater_Info) == 0x000004, "Wrong alignment on TheaterTooltip_C_Get_Theater_Info");
static_assert(sizeof(TheaterTooltip_C_Get_Theater_Info) == 0x0000E4, "Wrong size on TheaterTooltip_C_Get_Theater_Info");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Info, ReturnValue) == 0x000000, "Member 'TheaterTooltip_C_Get_Theater_Info::ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Info, CallFunc_GetContext_ReturnValue) == 0x00000C, "Member 'TheaterTooltip_C_Get_Theater_Info::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Info, CallFunc_GetTheaterData_OutTheaterData) == 0x000010, "Member 'TheaterTooltip_C_Get_Theater_Info::CallFunc_GetTheaterData_OutTheaterData' has a wrong offset!");
static_assert(offsetof(TheaterTooltip_C_Get_Theater_Info, CallFunc_GetTheaterData_ReturnValue) == 0x0000E0, "Member 'TheaterTooltip_C_Get_Theater_Info::CallFunc_GetTheaterData_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
