#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ThrowingStarTest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function ThrowingStarTest.ThrowingStarTest_C.OnExecute
// 0x0178 (0x0178 - 0x0000)
struct ThrowingStarTest_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0004(0x0084)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue;                 // 0x008C(0x0080)(ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ThrowingStarTest_C_OnExecute) == 0x000004, "Wrong alignment on ThrowingStarTest_C_OnExecute");
static_assert(sizeof(ThrowingStarTest_C_OnExecute) == 0x000178, "Wrong size on ThrowingStarTest_C_OnExecute");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, MyTarget) == 0x000000, "Member 'ThrowingStarTest_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, Parameters) == 0x000004, "Member 'ThrowingStarTest_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, ReturnValue) == 0x000088, "Member 'ThrowingStarTest_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_GetHitResult_ReturnValue) == 0x00008C, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_GetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_bBlockingHit) == 0x00010C, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010D, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_Time) == 0x000110, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_PhysMat) == 0x000144, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_HitActor) == 0x000148, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_HitComponent) == 0x00014C, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ThrowingStarTest_C_OnExecute, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000174, "Member 'ThrowingStarTest_C_OnExecute::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
