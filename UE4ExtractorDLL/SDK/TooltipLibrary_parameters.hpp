#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TooltipLibrary

#include "Basic.hpp"

#include "HeroCoreStat_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function TooltipLibrary.TooltipLibrary_C.Create Basic Tooltip
// 0x002C (0x002C - 0x0000)
struct TooltipLibrary_C_Create_Basic_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Body_Text;                                         // 0x0004(0x000C)(Parm)
	class FText                                   Header_Text;                                       // 0x0010(0x000C)(Parm)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            Output;                                            // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTooltip_Basic_S_C*                     CallFunc_Create_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Create_Basic_Tooltip) == 0x000004, "Wrong alignment on TooltipLibrary_C_Create_Basic_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Basic_Tooltip) == 0x00002C, "Wrong size on TooltipLibrary_C_Create_Basic_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Body_Text) == 0x000004, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Body_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Header_Text) == 0x000010, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Icon_Brush) == 0x00001C, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Icon_Brush' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, __WorldContext) == 0x000020, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Output) == 0x000024, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, CallFunc_Create_ReturnValue) == 0x000028, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Custom Tooltip
// 0x0024 (0x0024 - 0x0000)
struct TooltipLibrary_C_Create_Custom_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Header_Text;                                       // 0x0004(0x000C)(Parm)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            Widget;                                            // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            Output;                                            // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTooltip_Custom_S_C*                    CallFunc_Create_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Create_Custom_Tooltip) == 0x000004, "Wrong alignment on TooltipLibrary_C_Create_Custom_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Custom_Tooltip) == 0x000024, "Wrong size on TooltipLibrary_C_Create_Custom_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Header_Text) == 0x000004, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Icon_Brush) == 0x000010, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Icon_Brush' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Widget) == 0x000014, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Widget' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, __WorldContext) == 0x000018, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Output) == 0x00001C, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, CallFunc_Create_ReturnValue) == 0x000020, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Set Enabled And Tooltip Text
// 0x0020 (0x0020 - 0x0000)
struct TooltipLibrary_C_Set_Enabled_And_Tooltip_Text final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enabled;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Tooltip_Text;                                      // 0x0008(0x000C)(Parm)
	class UObject*                                __WorldContext;                                    // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text) == 0x000004, "Wrong alignment on TooltipLibrary_C_Set_Enabled_And_Tooltip_Text");
static_assert(sizeof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text) == 0x000020, "Wrong size on TooltipLibrary_C_Set_Enabled_And_Tooltip_Text");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, Widget) == 0x000000, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::Widget' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, Enabled) == 0x000004, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::Enabled' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, Tooltip_Text) == 0x000008, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::Tooltip_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, __WorldContext) == 0x000014, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, CallFunc_Create_Basic_Tooltip_Output) == 0x000018, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, CallFunc_TextIsEmpty_ReturnValue) == 0x00001C, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Item Tooltip
// 0x0024 (0x0024 - 0x0000)
struct TooltipLibrary_C_Create_Item_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Header_Text;                                       // 0x0004(0x000C)(Parm)
	class USlateBrushAsset*                       Header_Icon;                                       // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortItem*                              Item;                                              // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWidget*                                Return_Value;                                      // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTooltip_Item_C*                        CallFunc_Create_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Create_Item_Tooltip) == 0x000004, "Wrong alignment on TooltipLibrary_C_Create_Item_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Item_Tooltip) == 0x000024, "Wrong size on TooltipLibrary_C_Create_Item_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Header_Text) == 0x000004, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Header_Icon) == 0x000010, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Header_Icon' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Item) == 0x000014, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Item' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, __WorldContext) == 0x000018, "Member 'TooltipLibrary_C_Create_Item_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Return_Value) == 0x00001C, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Return_Value' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, CallFunc_Create_ReturnValue) == 0x000020, "Member 'TooltipLibrary_C_Create_Item_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Compare Item Tooltip
// 0x0028 (0x0028 - 0x0000)
struct TooltipLibrary_C_Create_Compare_Item_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Header_Text;                                       // 0x0004(0x000C)(Parm)
	class USlateBrushAsset*                       Header_Icon;                                       // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortItem*                              Item;                                              // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortItem*                              ComparedItem;                                      // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWidget*                                Return_Value;                                      // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTooltip_Item_C*                        CallFunc_Create_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Create_Compare_Item_Tooltip) == 0x000004, "Wrong alignment on TooltipLibrary_C_Create_Compare_Item_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Compare_Item_Tooltip) == 0x000028, "Wrong size on TooltipLibrary_C_Create_Compare_Item_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Header_Text) == 0x000004, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Header_Icon) == 0x000010, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Header_Icon' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Item) == 0x000014, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Item' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, ComparedItem) == 0x000018, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::ComparedItem' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, __WorldContext) == 0x00001C, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Return_Value) == 0x000020, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Return_Value' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, CallFunc_Create_ReturnValue) == 0x000024, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Basic Multi Line Tooltip
// 0x002C (0x002C - 0x0000)
struct TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FText>                           Body_Text;                                         // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReferenceParm)
	class FText                                   Header_Text;                                       // 0x0010(0x000C)(Parm)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            Output;                                            // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTooltip_BasicMultiLine_S_C*            CallFunc_Create_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip) == 0x000004, "Wrong alignment on TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip) == 0x00002C, "Wrong size on TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Body_Text) == 0x000004, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Body_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Header_Text) == 0x000010, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Icon_Brush) == 0x00001C, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Icon_Brush' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, __WorldContext) == 0x000020, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Output) == 0x000024, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, CallFunc_Create_ReturnValue) == 0x000028, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Core Stat Tooltip
// 0x02E8 (0x02E8 - 0x0000)
struct TooltipLibrary_C_Create_Core_Stat_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHeroCoreStat                          Data;                                              // 0x0004(0x02D4)(Parm)
	float                                         Value;                                             // 0x02D8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x02DC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            Output;                                            // 0x02E0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTooltip_CoreStat_C*                    CallFunc_Create_ReturnValue;                       // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Create_Core_Stat_Tooltip) == 0x000004, "Wrong alignment on TooltipLibrary_C_Create_Core_Stat_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Core_Stat_Tooltip) == 0x0002E8, "Wrong size on TooltipLibrary_C_Create_Core_Stat_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Core_Stat_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Core_Stat_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Core_Stat_Tooltip, Data) == 0x000004, "Member 'TooltipLibrary_C_Create_Core_Stat_Tooltip::Data' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Core_Stat_Tooltip, Value) == 0x0002D8, "Member 'TooltipLibrary_C_Create_Core_Stat_Tooltip::Value' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Core_Stat_Tooltip, __WorldContext) == 0x0002DC, "Member 'TooltipLibrary_C_Create_Core_Stat_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Core_Stat_Tooltip, Output) == 0x0002E0, "Member 'TooltipLibrary_C_Create_Core_Stat_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Core_Stat_Tooltip, CallFunc_Create_ReturnValue) == 0x0002E4, "Member 'TooltipLibrary_C_Create_Core_Stat_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
