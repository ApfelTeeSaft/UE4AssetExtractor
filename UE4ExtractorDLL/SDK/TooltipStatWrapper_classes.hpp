#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TooltipStatWrapper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "TooltipStat_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass TooltipStatWrapper.TooltipStatWrapper_C
// 0x003C (0x01F4 - 0x01B8)
class UTooltipStatWrapper_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         Container_HBox;                                    // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 PreviewHighlight_Image;                            // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTooltipStatWidget_C*                   Stat_Widget;                                       // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBorder*                                Upgrade_Border;                                    // 0x01C8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Upgrade_Image;                                     // 0x01CC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	bool                                          ShowAsPreview;                                     // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTooltipStat                           inTooltipData;                                     // 0x01D4(0x001C)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          inHoverEnabled;                                    // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_TooltipStatWrapper(int32 EntryPoint);
	void Construct();
	void ShowUpgradeArrow(ESlateVisibility InVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TooltipStatWrapper_C">();
	}
	static class UTooltipStatWrapper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTooltipStatWrapper_C>();
	}
};
static_assert(alignof(UTooltipStatWrapper_C) == 0x000004, "Wrong alignment on UTooltipStatWrapper_C");
static_assert(sizeof(UTooltipStatWrapper_C) == 0x0001F4, "Wrong size on UTooltipStatWrapper_C");
static_assert(offsetof(UTooltipStatWrapper_C, UberGraphFrame) == 0x0001B8, "Member 'UTooltipStatWrapper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, Container_HBox) == 0x0001BC, "Member 'UTooltipStatWrapper_C::Container_HBox' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, PreviewHighlight_Image) == 0x0001C0, "Member 'UTooltipStatWrapper_C::PreviewHighlight_Image' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, Stat_Widget) == 0x0001C4, "Member 'UTooltipStatWrapper_C::Stat_Widget' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, Upgrade_Border) == 0x0001C8, "Member 'UTooltipStatWrapper_C::Upgrade_Border' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, Upgrade_Image) == 0x0001CC, "Member 'UTooltipStatWrapper_C::Upgrade_Image' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, ShowAsPreview) == 0x0001D0, "Member 'UTooltipStatWrapper_C::ShowAsPreview' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, inTooltipData) == 0x0001D4, "Member 'UTooltipStatWrapper_C::inTooltipData' has a wrong offset!");
static_assert(offsetof(UTooltipStatWrapper_C, inHoverEnabled) == 0x0001F0, "Member 'UTooltipStatWrapper_C::inHoverEnabled' has a wrong offset!");

}

#pragma pack(pop)
