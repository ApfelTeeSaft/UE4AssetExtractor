#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tooltip_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteGame_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass Tooltip-Item.Tooltip-Item_C
// 0x00C4 (0x027C - 0x01B8)
class UTooltip_Item_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                _Border__Tier;                                     // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         _Horizontal_Box__Level;                            // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         _Horizontal_Box__SecondaryType;                    // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         _Horizontal_Box__TertiaryType;                     // 0x01C8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__SecondaryType;                             // 0x01CC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__TertiaryType;                              // 0x01D0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 _Image__Tier;                                      // 0x01D4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__Item_Name;                                  // 0x01D8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__Level;                                      // 0x01DC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__PrimaryType;                                // 0x01E0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__Rarity_Name;                                // 0x01E4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__SecondaryType;                              // 0x01E8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             _Text__TertiaryType;                               // 0x01EC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UVerticalBox*                           _Vertical_Box__Stats;                              // 0x01F0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UVerticalBox*                           _VerticalBox__Content;                             // 0x01F4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class FText                                   HeaderText;                                        // 0x01F8(0x000C)(Edit, BlueprintVisible, ExposeOnSpawn)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UFortItem*                              Item;                                              // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	struct FFortRarityItemData                    Rarity_Data;                                       // 0x020C(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Tooltip_Item(int32 EntryPoint);
	void Construct();
	struct FSlateBrush Get_Icon_Brush();
	struct FLinearColor Get_Theme_Color__Normal_();
	void Update();
	ESlateVisibility Get_Tooltip_Header_Visibility();
	ESlateVisibility Get_Tooltip_Header_Icon_Visibility();
	ESlateVisibility Get_Tooltip_Header_Text_Visibility();
	void Set_Item_Data(class UFortItem* Item_0);
	void Build_Weapon_Stats();
	void Build_Basic_Info();
	void Build_Ranged_Weapon_Stats(const struct FFortRangedWeaponStats& Data);
	void Build_Melee_Weapon_Stats(const struct FFortMeleeWeaponStats& Data);
	void Build_Base_Weapon_Stats(const struct FFortBaseWeaponStats& Data);
	void Get_Scaled_Stat__float_(float Base_Stat, float Scaling, int32 Level, float* Scaled_Stat);
	void Build_Weapon_DPS_Stat();
	void Build_Worker_Stats();
	void Build_Alteration_Info();
	void Build_Trap_Stats();
	void Build_Consumable_Stats();
	void Build_Durability();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tooltip-Item_C">();
	}
	static class UTooltip_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTooltip_Item_C>();
	}
};
static_assert(alignof(UTooltip_Item_C) == 0x000004, "Wrong alignment on UTooltip_Item_C");
static_assert(sizeof(UTooltip_Item_C) == 0x00027C, "Wrong size on UTooltip_Item_C");
static_assert(offsetof(UTooltip_Item_C, UberGraphFrame) == 0x0001B8, "Member 'UTooltip_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Border__Tier) == 0x0001BC, "Member 'UTooltip_Item_C::_Border__Tier' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Horizontal_Box__Level) == 0x0001C0, "Member 'UTooltip_Item_C::_Horizontal_Box__Level' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Horizontal_Box__SecondaryType) == 0x0001C4, "Member 'UTooltip_Item_C::_Horizontal_Box__SecondaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Horizontal_Box__TertiaryType) == 0x0001C8, "Member 'UTooltip_Item_C::_Horizontal_Box__TertiaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Image__SecondaryType) == 0x0001CC, "Member 'UTooltip_Item_C::_Image__SecondaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Image__TertiaryType) == 0x0001D0, "Member 'UTooltip_Item_C::_Image__TertiaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Image__Tier) == 0x0001D4, "Member 'UTooltip_Item_C::_Image__Tier' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Text__Item_Name) == 0x0001D8, "Member 'UTooltip_Item_C::_Text__Item_Name' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Text__Level) == 0x0001DC, "Member 'UTooltip_Item_C::_Text__Level' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Text__PrimaryType) == 0x0001E0, "Member 'UTooltip_Item_C::_Text__PrimaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Text__Rarity_Name) == 0x0001E4, "Member 'UTooltip_Item_C::_Text__Rarity_Name' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Text__SecondaryType) == 0x0001E8, "Member 'UTooltip_Item_C::_Text__SecondaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Text__TertiaryType) == 0x0001EC, "Member 'UTooltip_Item_C::_Text__TertiaryType' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _Vertical_Box__Stats) == 0x0001F0, "Member 'UTooltip_Item_C::_Vertical_Box__Stats' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, _VerticalBox__Content) == 0x0001F4, "Member 'UTooltip_Item_C::_VerticalBox__Content' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, HeaderText) == 0x0001F8, "Member 'UTooltip_Item_C::HeaderText' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, Icon_Brush) == 0x000204, "Member 'UTooltip_Item_C::Icon_Brush' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, Item) == 0x000208, "Member 'UTooltip_Item_C::Item' has a wrong offset!");
static_assert(offsetof(UTooltip_Item_C, Rarity_Data) == 0x00020C, "Member 'UTooltip_Item_C::Rarity_Data' has a wrong offset!");

}

#pragma pack(pop)
