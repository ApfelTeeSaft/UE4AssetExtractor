#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Floor_Health_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass Trap_Floor_Health_Master.Trap_Floor_Health_Master_C
// 0x0058 (0x0A48 - 0x09F0)
class ATrap_Floor_Health_Master_C : public ABuildingTrapFloor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x09F4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   Pickup_Mesh;                                       // 0x09F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               P_Floor_Heal_Active;                               // 0x09FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UPointLightComponent*                   PointLight;                                        // 0x0A00(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               JumpParticleEffect;                                // 0x0A04(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UBoxComponent*                          Trigger;                                           // 0x0A08(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        Scene1;                                            // 0x0A0C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USoundCue*                              Trap_Placed_Sound;                                 // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundCue*                              Trap_Active_Sound;                                 // 0x0A14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundCue*                              Trap_Fire_Sound;                                   // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundCue*                              Trap_Reload_Sound;                                 // 0x0A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundCue*                              Trap_Explode_Sound;                                // 0x0A20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               Glow_mat;                                          // 0x0A24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Charge_Value;                                      // 0x0A28(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	TArray<class AActor*>                         Player_Touching_Array;                             // 0x0A2C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class AFortPlayerPawn*                        Active_Player;                                     // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMesh*                            Pickup_Mesh_Override;                              // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Pickup_Material_Override;                          // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Numb_of_Charges;                                   // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Trap_Floor_Health_Master(int32 EntryPoint);
	void OnDamaged_Event_0(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BndEvt__Trigger_K2Node_ComponentBoundEvent_306_ComponentEndOverlapSignature__DelegateSignature(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Trigger_K2Node_ComponentBoundEvent_288_ComponentBeginOverlapSignature__DelegateSignature(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOutOfDurability();
	void GameplayCue_Abilities_Activation_Traps_ActivateTrap(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Traps_ReloadBegin(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnFinishedBuilding();
	void OnPlaced();
	void OnReloadEnd();
	void UserConstructionScript();
	void OnRep_Charge_Value();
	void Active_FX(bool Active);

	bool BP_ShouldTrigger(const TArray<class AActor*>& TouchingActors) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Trap_Floor_Health_Master_C">();
	}
	static class ATrap_Floor_Health_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrap_Floor_Health_Master_C>();
	}
};
static_assert(alignof(ATrap_Floor_Health_Master_C) == 0x000004, "Wrong alignment on ATrap_Floor_Health_Master_C");
static_assert(sizeof(ATrap_Floor_Health_Master_C) == 0x000A48, "Wrong size on ATrap_Floor_Health_Master_C");
static_assert(offsetof(ATrap_Floor_Health_Master_C, UberGraphFrame) == 0x0009F0, "Member 'ATrap_Floor_Health_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, RotatingMovement) == 0x0009F4, "Member 'ATrap_Floor_Health_Master_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Pickup_Mesh) == 0x0009F8, "Member 'ATrap_Floor_Health_Master_C::Pickup_Mesh' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, P_Floor_Heal_Active) == 0x0009FC, "Member 'ATrap_Floor_Health_Master_C::P_Floor_Heal_Active' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, PointLight) == 0x000A00, "Member 'ATrap_Floor_Health_Master_C::PointLight' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, JumpParticleEffect) == 0x000A04, "Member 'ATrap_Floor_Health_Master_C::JumpParticleEffect' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Trigger) == 0x000A08, "Member 'ATrap_Floor_Health_Master_C::Trigger' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Scene1) == 0x000A0C, "Member 'ATrap_Floor_Health_Master_C::Scene1' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Trap_Placed_Sound) == 0x000A10, "Member 'ATrap_Floor_Health_Master_C::Trap_Placed_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Trap_Active_Sound) == 0x000A14, "Member 'ATrap_Floor_Health_Master_C::Trap_Active_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Trap_Fire_Sound) == 0x000A18, "Member 'ATrap_Floor_Health_Master_C::Trap_Fire_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Trap_Reload_Sound) == 0x000A1C, "Member 'ATrap_Floor_Health_Master_C::Trap_Reload_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Trap_Explode_Sound) == 0x000A20, "Member 'ATrap_Floor_Health_Master_C::Trap_Explode_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Glow_mat) == 0x000A24, "Member 'ATrap_Floor_Health_Master_C::Glow_mat' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Charge_Value) == 0x000A28, "Member 'ATrap_Floor_Health_Master_C::Charge_Value' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Player_Touching_Array) == 0x000A2C, "Member 'ATrap_Floor_Health_Master_C::Player_Touching_Array' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Active_Player) == 0x000A38, "Member 'ATrap_Floor_Health_Master_C::Active_Player' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Pickup_Mesh_Override) == 0x000A3C, "Member 'ATrap_Floor_Health_Master_C::Pickup_Mesh_Override' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Pickup_Material_Override) == 0x000A40, "Member 'ATrap_Floor_Health_Master_C::Pickup_Material_Override' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Health_Master_C, Numb_of_Charges) == 0x000A44, "Member 'ATrap_Floor_Health_Master_C::Numb_of_Charges' has a wrong offset!");

}

#pragma pack(pop)
