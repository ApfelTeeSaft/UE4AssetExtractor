#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TutorialScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function TutorialScreen.TutorialScreen_C.ExecuteUbergraph_TutorialScreen
// 0x0008 (0x0008 - 0x0000)
struct TutorialScreen_C_ExecuteUbergraph_TutorialScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             K2Node_Event_Image;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TutorialScreen_C_ExecuteUbergraph_TutorialScreen) == 0x000004, "Wrong alignment on TutorialScreen_C_ExecuteUbergraph_TutorialScreen");
static_assert(sizeof(TutorialScreen_C_ExecuteUbergraph_TutorialScreen) == 0x000008, "Wrong size on TutorialScreen_C_ExecuteUbergraph_TutorialScreen");
static_assert(offsetof(TutorialScreen_C_ExecuteUbergraph_TutorialScreen, EntryPoint) == 0x000000, "Member 'TutorialScreen_C_ExecuteUbergraph_TutorialScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(TutorialScreen_C_ExecuteUbergraph_TutorialScreen, K2Node_Event_Image) == 0x000004, "Member 'TutorialScreen_C_ExecuteUbergraph_TutorialScreen::K2Node_Event_Image' has a wrong offset!");

// Function TutorialScreen.TutorialScreen_C.OnShowTutorialScreen
// 0x0004 (0x0004 - 0x0000)
struct TutorialScreen_C_OnShowTutorialScreen final
{
public:
	class UTexture2D*                             Image_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TutorialScreen_C_OnShowTutorialScreen) == 0x000004, "Wrong alignment on TutorialScreen_C_OnShowTutorialScreen");
static_assert(sizeof(TutorialScreen_C_OnShowTutorialScreen) == 0x000004, "Wrong size on TutorialScreen_C_OnShowTutorialScreen");
static_assert(offsetof(TutorialScreen_C_OnShowTutorialScreen, Image_0) == 0x000000, "Member 'TutorialScreen_C_OnShowTutorialScreen::Image_0' has a wrong offset!");

// Function TutorialScreen.TutorialScreen_C.OnMouseButtonDown_0
// 0x0154 (0x0154 - 0x0000)
struct TutorialScreen_C_OnMouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0034(0x0060)(Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0094(0x0060)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F4(0x0060)()
};
static_assert(alignof(TutorialScreen_C_OnMouseButtonDown_0) == 0x000004, "Wrong alignment on TutorialScreen_C_OnMouseButtonDown_0");
static_assert(sizeof(TutorialScreen_C_OnMouseButtonDown_0) == 0x000154, "Wrong size on TutorialScreen_C_OnMouseButtonDown_0");
static_assert(offsetof(TutorialScreen_C_OnMouseButtonDown_0, MyGeometry) == 0x000000, "Member 'TutorialScreen_C_OnMouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(TutorialScreen_C_OnMouseButtonDown_0, MouseEvent) == 0x000034, "Member 'TutorialScreen_C_OnMouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(TutorialScreen_C_OnMouseButtonDown_0, ReturnValue) == 0x000094, "Member 'TutorialScreen_C_OnMouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialScreen_C_OnMouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x0000F4, "Member 'TutorialScreen_C_OnMouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

#pragma pack(pop)
