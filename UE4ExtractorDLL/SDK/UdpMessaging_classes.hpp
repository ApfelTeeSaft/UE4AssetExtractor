#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UdpMessaging

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Class UdpMessaging.UdpMessagingSettings
// 0x0054 (0x0070 - 0x001C)
class UUdpMessagingSettings final : public UObject
{
public:
	bool                                          EnableTransport;                                   // 0x001C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UnicastEndpoint;                                   // 0x0020(0x000C)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MulticastEndpoint;                                 // 0x002C(0x000C)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MulticastTimeToLive;                               // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         StaticEndpoints;                                   // 0x003C(0x000C)(Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          EnableTunnel;                                      // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TunnelUnicastEndpoint;                             // 0x004C(0x000C)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TunnelMulticastEndpoint;                           // 0x0058(0x000C)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         RemoteTunnelEndpoints;                             // 0x0064(0x000C)(Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdpMessagingSettings">();
	}
	static class UUdpMessagingSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdpMessagingSettings>();
	}
};
static_assert(alignof(UUdpMessagingSettings) == 0x000004, "Wrong alignment on UUdpMessagingSettings");
static_assert(sizeof(UUdpMessagingSettings) == 0x000070, "Wrong size on UUdpMessagingSettings");
static_assert(offsetof(UUdpMessagingSettings, EnableTransport) == 0x00001C, "Member 'UUdpMessagingSettings::EnableTransport' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, UnicastEndpoint) == 0x000020, "Member 'UUdpMessagingSettings::UnicastEndpoint' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, MulticastEndpoint) == 0x00002C, "Member 'UUdpMessagingSettings::MulticastEndpoint' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, MulticastTimeToLive) == 0x000038, "Member 'UUdpMessagingSettings::MulticastTimeToLive' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, StaticEndpoints) == 0x00003C, "Member 'UUdpMessagingSettings::StaticEndpoints' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, EnableTunnel) == 0x000048, "Member 'UUdpMessagingSettings::EnableTunnel' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, TunnelUnicastEndpoint) == 0x00004C, "Member 'UUdpMessagingSettings::TunnelUnicastEndpoint' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, TunnelMulticastEndpoint) == 0x000058, "Member 'UUdpMessagingSettings::TunnelMulticastEndpoint' has a wrong offset!");
static_assert(offsetof(UUdpMessagingSettings, RemoteTunnelEndpoints) == 0x000064, "Member 'UUdpMessagingSettings::RemoteTunnelEndpoints' has a wrong offset!");

}

#pragma pack(pop)
