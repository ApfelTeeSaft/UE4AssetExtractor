#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: V2_Item_Card

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// WidgetBlueprintGeneratedClass V2_Item_Card.V2_Item_Card_C
// 0x0048 (0x0200 - 0x01B8)
class UV2_Item_Card_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Scale;                                             // 0x01BC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       FlyUp;                                             // 0x01C0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       FlyUpand_Down;                                     // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       Flydown;                                           // 0x01C8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       Reset;                                             // 0x01CC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             Bonus_Text;                                        // 0x01D0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Card;                                              // 0x01D4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UScaleBox*                              Card_ScaleBox;                                     // 0x01D8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Foil_Image;                                        // 0x01DC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 Image_252;                                         // 0x01E0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class USizeBox*                               StackCounter;                                      // 0x01E4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             StackCounterText;                                  // 0x01E8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UV2_ItemCardFront_C*                    V2_ItemCardFront;                                  // 0x01EC(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	struct FCard                                  CardData;                                          // 0x01F0(0x000C)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          bIsOn3DCard;                                       // 0x01FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsFront;                                          // 0x01FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_V2_Item_Card(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnFortStoreStateChanged(EFortStoreState NewStoreState);
	void Construct();
	void Initialize_Card(const struct FCard& inCard, bool isOn3DCard, bool isFront);
	void ShowCardFront();
	void ShowCardBack();
	class UWidget* Get_CardOverlay_ToolTipWidget_1();
	void Draw_Card();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"V2_Item_Card_C">();
	}
	static class UV2_Item_Card_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UV2_Item_Card_C>();
	}
};
static_assert(alignof(UV2_Item_Card_C) == 0x000004, "Wrong alignment on UV2_Item_Card_C");
static_assert(sizeof(UV2_Item_Card_C) == 0x000200, "Wrong size on UV2_Item_Card_C");
static_assert(offsetof(UV2_Item_Card_C, UberGraphFrame) == 0x0001B8, "Member 'UV2_Item_Card_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Scale) == 0x0001BC, "Member 'UV2_Item_Card_C::Scale' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, FlyUp) == 0x0001C0, "Member 'UV2_Item_Card_C::FlyUp' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, FlyUpand_Down) == 0x0001C4, "Member 'UV2_Item_Card_C::FlyUpand_Down' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Flydown) == 0x0001C8, "Member 'UV2_Item_Card_C::Flydown' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Reset) == 0x0001CC, "Member 'UV2_Item_Card_C::Reset' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Bonus_Text) == 0x0001D0, "Member 'UV2_Item_Card_C::Bonus_Text' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Card) == 0x0001D4, "Member 'UV2_Item_Card_C::Card' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Card_ScaleBox) == 0x0001D8, "Member 'UV2_Item_Card_C::Card_ScaleBox' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Foil_Image) == 0x0001DC, "Member 'UV2_Item_Card_C::Foil_Image' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, Image_252) == 0x0001E0, "Member 'UV2_Item_Card_C::Image_252' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, StackCounter) == 0x0001E4, "Member 'UV2_Item_Card_C::StackCounter' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, StackCounterText) == 0x0001E8, "Member 'UV2_Item_Card_C::StackCounterText' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, V2_ItemCardFront) == 0x0001EC, "Member 'UV2_Item_Card_C::V2_ItemCardFront' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, CardData) == 0x0001F0, "Member 'UV2_Item_Card_C::CardData' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, bIsOn3DCard) == 0x0001FC, "Member 'UV2_Item_Card_C::bIsOn3DCard' has a wrong offset!");
static_assert(offsetof(UV2_Item_Card_C, bIsFront) == 0x0001FD, "Member 'UV2_Item_Card_C::bIsFront' has a wrong offset!");

}

#pragma pack(pop)
