#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultCamera_Blueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass VaultCamera_Blueprint.VaultCamera_Blueprint_C
// 0x001C (0x0624 - 0x0608)
class AVaultCamera_Blueprint_C final : public AFortCameraBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class APartyCharacterPlacementHelper_C*       CachedPawn;                                        // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MouseDown;                                         // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AVaultCamera_Blueprint_C*               VaultActor;                                        // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AB_Pickups_C*                           VaultMesh;                                         // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         OldTimeofDay;                                      // 0x061C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         OldTimeofDaySpeed;                                 // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_VaultCamera_Blueprint(int32 EntryPoint);
	void OnDeactivated();
	void OnActivated();
	void ReceiveTick(float DeltaSeconds);
	void InpActEvt_LeftMouseButton_UniqueObjectNameForCooking_36(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_UniqueObjectNameForCooking_37(const struct FKey& Key);
	void InpActEvt_RightMouseButton_UniqueObjectNameForCooking_38(const struct FKey& Key);
	void InpActEvt_RightMouseButton_UniqueObjectNameForCooking_39(const struct FKey& Key);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VaultCamera_Blueprint_C">();
	}
	static class AVaultCamera_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVaultCamera_Blueprint_C>();
	}
};
static_assert(alignof(AVaultCamera_Blueprint_C) == 0x000004, "Wrong alignment on AVaultCamera_Blueprint_C");
static_assert(sizeof(AVaultCamera_Blueprint_C) == 0x000624, "Wrong size on AVaultCamera_Blueprint_C");
static_assert(offsetof(AVaultCamera_Blueprint_C, UberGraphFrame) == 0x000608, "Member 'AVaultCamera_Blueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVaultCamera_Blueprint_C, CachedPawn) == 0x00060C, "Member 'AVaultCamera_Blueprint_C::CachedPawn' has a wrong offset!");
static_assert(offsetof(AVaultCamera_Blueprint_C, MouseDown) == 0x000610, "Member 'AVaultCamera_Blueprint_C::MouseDown' has a wrong offset!");
static_assert(offsetof(AVaultCamera_Blueprint_C, VaultActor) == 0x000614, "Member 'AVaultCamera_Blueprint_C::VaultActor' has a wrong offset!");
static_assert(offsetof(AVaultCamera_Blueprint_C, VaultMesh) == 0x000618, "Member 'AVaultCamera_Blueprint_C::VaultMesh' has a wrong offset!");
static_assert(offsetof(AVaultCamera_Blueprint_C, OldTimeofDay) == 0x00061C, "Member 'AVaultCamera_Blueprint_C::OldTimeofDay' has a wrong offset!");
static_assert(offsetof(AVaultCamera_Blueprint_C, OldTimeofDaySpeed) == 0x000620, "Member 'AVaultCamera_Blueprint_C::OldTimeofDaySpeed' has a wrong offset!");

}

#pragma pack(pop)
