#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VersionInfo

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"


#pragma pack(push, 0x4)
namespace SDK::Params
{

// Function VersionInfo.VersionInfo_C.ExecuteUbergraph_VersionInfo
// 0x0004 (0x0004 - 0x0000)
struct VersionInfo_C_ExecuteUbergraph_VersionInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VersionInfo_C_ExecuteUbergraph_VersionInfo) == 0x000004, "Wrong alignment on VersionInfo_C_ExecuteUbergraph_VersionInfo");
static_assert(sizeof(VersionInfo_C_ExecuteUbergraph_VersionInfo) == 0x000004, "Wrong size on VersionInfo_C_ExecuteUbergraph_VersionInfo");
static_assert(offsetof(VersionInfo_C_ExecuteUbergraph_VersionInfo, EntryPoint) == 0x000000, "Member 'VersionInfo_C_ExecuteUbergraph_VersionInfo::EntryPoint' has a wrong offset!");

// Function VersionInfo.VersionInfo_C.Update
// 0x00DC (0x00DC - 0x0000)
struct VersionInfo_C_Update final
{
public:
	struct FFortBackendVersion                    In_Data;                                           // 0x0000(0x0070)(Parm)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetBackendName_ReturnValue;               // 0x0078(0x000C)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0084(0x000C)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0090(0x000C)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue3;           // 0x009C(0x000C)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue4;           // 0x00A8(0x000C)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue5;           // 0x00B4(0x000C)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue6;           // 0x00C0(0x000C)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue7;           // 0x00CC(0x000C)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VersionInfo_C_Update) == 0x000004, "Wrong alignment on VersionInfo_C_Update");
static_assert(sizeof(VersionInfo_C_Update) == 0x0000DC, "Wrong size on VersionInfo_C_Update");
static_assert(offsetof(VersionInfo_C_Update, In_Data) == 0x000000, "Member 'VersionInfo_C_Update::In_Data' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, Temp_bool_Variable) == 0x000070, "Member 'VersionInfo_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, Temp_byte_Variable) == 0x000071, "Member 'VersionInfo_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, Temp_byte_Variable2) == 0x000072, "Member 'VersionInfo_C_Update::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_GetContext_ReturnValue) == 0x000074, "Member 'VersionInfo_C_Update::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_GetBackendName_ReturnValue) == 0x000078, "Member 'VersionInfo_C_Update::CallFunc_GetBackendName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x000084, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue2) == 0x000090, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue3) == 0x00009C, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue4) == 0x0000A8, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue5) == 0x0000B4, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue6) == 0x0000C0, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue6' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, CallFunc_Conv_StringToText_ReturnValue7) == 0x0000CC, "Member 'VersionInfo_C_Update::CallFunc_Conv_StringToText_ReturnValue7' has a wrong offset!");
static_assert(offsetof(VersionInfo_C_Update, K2Node_Select_Default) == 0x0000D8, "Member 'VersionInfo_C_Update::K2Node_Select_Default' has a wrong offset!");

}

#pragma pack(pop)
