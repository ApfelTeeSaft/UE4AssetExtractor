#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WriteOutTextToTheScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// BlueprintGeneratedClass WriteOutTextToTheScreen.WriteOutTextToTheScreen_C
// 0x006C (0x02AC - 0x0240)
class AWriteOutTextToTheScreen_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0004)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0244(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0248(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class FString                                 CurrentString;                                     // 0x024C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          NewVar;                                            // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalAnimationTime;                                // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class FString>                         CurrentStringArray;                                // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         LineCounter;                                       // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentChar;                                       // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CurrentLetter;                                     // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         PreviousLetter;                                    // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FString                                 Curre;                                             // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UTextRenderComponent*>           TextLineArray;                                     // 0x0288(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UStaticMeshComponent*>           NewVar0;                                           // 0x0294(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         String_Anim_Target_Index;                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         Initial_String_Anim_Index;                         // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Line_Height;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WriteOutTextToTheScreen(int32 EntryPoint);
	void MoveText(float NewHeight);
	void ErasePage();
	void ReceiveBeginPlay();
	void WriteOutText(const class FString& String, float TimePerCharacter, int32 Anim_Start_String_Index__Length_Based_, int32 Anim_End_String_Index__default___length_, bool Init_New_Line_, const struct FLinearColor& Color, bool Bold_, int32 AdditionalLines);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void Line();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WriteOutTextToTheScreen_C">();
	}
	static class AWriteOutTextToTheScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWriteOutTextToTheScreen_C>();
	}
};
static_assert(alignof(AWriteOutTextToTheScreen_C) == 0x000004, "Wrong alignment on AWriteOutTextToTheScreen_C");
static_assert(sizeof(AWriteOutTextToTheScreen_C) == 0x0002AC, "Wrong size on AWriteOutTextToTheScreen_C");
static_assert(offsetof(AWriteOutTextToTheScreen_C, UberGraphFrame) == 0x000240, "Member 'AWriteOutTextToTheScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, StaticMesh2) == 0x000244, "Member 'AWriteOutTextToTheScreen_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, StaticMesh1) == 0x000248, "Member 'AWriteOutTextToTheScreen_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, CurrentString) == 0x00024C, "Member 'AWriteOutTextToTheScreen_C::CurrentString' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, NewVar) == 0x000258, "Member 'AWriteOutTextToTheScreen_C::NewVar' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, TotalAnimationTime) == 0x00025C, "Member 'AWriteOutTextToTheScreen_C::TotalAnimationTime' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, CurrentStringArray) == 0x000260, "Member 'AWriteOutTextToTheScreen_C::CurrentStringArray' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, LineCounter) == 0x00026C, "Member 'AWriteOutTextToTheScreen_C::LineCounter' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, CurrentChar) == 0x000270, "Member 'AWriteOutTextToTheScreen_C::CurrentChar' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, CurrentLetter) == 0x000274, "Member 'AWriteOutTextToTheScreen_C::CurrentLetter' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, PreviousLetter) == 0x000278, "Member 'AWriteOutTextToTheScreen_C::PreviousLetter' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, Curre) == 0x00027C, "Member 'AWriteOutTextToTheScreen_C::Curre' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, TextLineArray) == 0x000288, "Member 'AWriteOutTextToTheScreen_C::TextLineArray' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, NewVar0) == 0x000294, "Member 'AWriteOutTextToTheScreen_C::NewVar0' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, String_Anim_Target_Index) == 0x0002A0, "Member 'AWriteOutTextToTheScreen_C::String_Anim_Target_Index' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, Initial_String_Anim_Index) == 0x0002A4, "Member 'AWriteOutTextToTheScreen_C::Initial_String_Anim_Index' has a wrong offset!");
static_assert(offsetof(AWriteOutTextToTheScreen_C, Line_Height) == 0x0002A8, "Member 'AWriteOutTextToTheScreen_C::Line_Height' has a wrong offset!");

}

#pragma pack(pop)
