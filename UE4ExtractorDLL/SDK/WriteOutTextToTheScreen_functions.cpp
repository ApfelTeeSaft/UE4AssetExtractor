#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WriteOutTextToTheScreen

#include "Basic.hpp"

#include "WriteOutTextToTheScreen_classes.hpp"
#include "WriteOutTextToTheScreen_parameters.hpp"


#pragma pack(push, 0x4)
namespace SDK
{

// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.ExecuteUbergraph_WriteOutTextToTheScreen
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWriteOutTextToTheScreen_C::ExecuteUbergraph_WriteOutTextToTheScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "ExecuteUbergraph_WriteOutTextToTheScreen");

	Params::WriteOutTextToTheScreen_C_ExecuteUbergraph_WriteOutTextToTheScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.MoveText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWriteOutTextToTheScreen_C::MoveText(float NewHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "MoveText");

	Params::WriteOutTextToTheScreen_C_MoveText Parms{};

	Parms.NewHeight = NewHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.ErasePage
// (BlueprintCallable, BlueprintEvent)

void AWriteOutTextToTheScreen_C::ErasePage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "ErasePage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void AWriteOutTextToTheScreen_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.WriteOutText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor)
// float                                   TimePerCharacter                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Anim_Start_String_Index__Length_Based_                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Anim_End_String_Index__default___length_               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Init_New_Line_                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Bold_                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AdditionalLines                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWriteOutTextToTheScreen_C::WriteOutText(const class FString& String, float TimePerCharacter, int32 Anim_Start_String_Index__Length_Based_, int32 Anim_End_String_Index__default___length_, bool Init_New_Line_, const struct FLinearColor& Color, bool Bold_, int32 AdditionalLines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "WriteOutText");

	Params::WriteOutTextToTheScreen_C_WriteOutText Parms{};

	Parms.String = std::move(String);
	Parms.TimePerCharacter = TimePerCharacter;
	Parms.Anim_Start_String_Index__Length_Based_ = Anim_Start_String_Index__Length_Based_;
	Parms.Anim_End_String_Index__default___length_ = Anim_End_String_Index__default___length_;
	Parms.Init_New_Line_ = Init_New_Line_;
	Parms.Color = std::move(Color);
	Parms.Bold_ = Bold_;
	Parms.AdditionalLines = AdditionalLines;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWriteOutTextToTheScreen_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "ReceiveTick");

	Params::WriteOutTextToTheScreen_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWriteOutTextToTheScreen_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WriteOutTextToTheScreen.WriteOutTextToTheScreen_C.Line
// (Public, BlueprintCallable, BlueprintEvent)

void AWriteOutTextToTheScreen_C::Line()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WriteOutTextToTheScreen_C", "Line");

	UObject::ProcessEvent(Func, nullptr);
}

}

#pragma pack(pop)
